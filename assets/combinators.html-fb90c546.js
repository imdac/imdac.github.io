import{_ as o,M as p,p as l,q as c,R as n,t as s,N as t,a3 as a}from"./framework-dd056dd6.js";const i={},r=n("h1",{id:"combinators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#combinators","aria-hidden":"true"},"#"),s(" Combinators")],-1),d={href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Combinators",target:"_blank",rel:"noopener noreferrer"},u=a(`<ul><li>descendant (space)</li><li>child (<code>&gt;</code>)</li><li>adjacent (<code>+</code>)</li><li>sibling (<code>~</code>)</li></ul><h2 id="descendant" tabindex="-1"><a class="header-anchor" href="#descendant" aria-hidden="true">#</a> Descendant</h2><p>The <strong>descendant combinator</strong>, which is represented with a space, selects all elements that are descendants of the element. The descendants are <strong>not</strong> limited to direct children.</p><p>This is most commonly used combinator as it can affect the largest number of elements. Let&#39;s look at an example. If we had a navbar with a dropdown containing its own set of links then we would have anchor tags that are not direct children of the navbar.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#home<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#news<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>News<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dropdown<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dropdown-button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Dropdown <span class="token entity" title="â–¿">&amp;#9663;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dropdown-content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Even so, it would be possible to style all of the links the same by using the descendant combinator.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.navbar</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> sans-serif<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),h=n("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"CSS Complex Selectors - Example 1",src:"https://codepen.io/IMD/embed/dyoGajO?height=265&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/dyoGajO'>CSS Complex Selectors - Example 1</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),k=a(`<p>If we wanted to select and style all of the anchor tags, we could use the descendant combinator.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.navbar a</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m=n("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"CSS Complex Selectors - Example 2",src:"https://codepen.io/IMD/embed/mdJVvjM?height=265&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/mdJVvjM'>CSS Complex Selectors - Example 2</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),b=a(`<p>Notice how both main navbar links and the dropdown-content links were styled. That is because even thought these links do not share the same parent element, they are still descendants of the navbar.</p><h2 id="child" tabindex="-1"><a class="header-anchor" href="#child" aria-hidden="true">#</a> Child</h2><p>The <strong>child combinator</strong>, which is represented as a <code>&gt;</code>, is to select only those elements that are direct children of the first selectors. This is different from the descendant combinator in that it will not affect any element beyond the direct children.</p><p>Let&#39;s return to our navbar example. But this time we are going to make an alteration. We have decided that while the background of the navbar is black, the dropdown content will be off-white.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.dropdown-content</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #f9f9f9<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v=n("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"CSS Complex Selectors - Example 3",src:"https://codepen.io/IMD/embed/abOdMbZ?height=265&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/abOdMbZ'>CSS Complex Selectors - Example 3</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),g=a(`<p>This of course will make seeing the links very difficult to see. To fix this problem, lets target the main links using the child combinator instead. Then we can style the dropdown content links separately.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.navbar &gt; a</span> <span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),f=n("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"CSS Complex Selectors - Example 4",src:"https://codepen.io/IMD/embed/ZEGQPQG?height=265&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/ZEGQPQG'>CSS Complex Selectors - Example 4</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),w=a(`<h2 id="adjacent" tabindex="-1"><a class="header-anchor" href="#adjacent" aria-hidden="true">#</a> adjacent</h2><p>The <strong>adjacent combinator</strong>, which is represented with a <code>+</code>, will select the element that is the very next sibling to the selected element, if any exists.</p><p>Lets see this in action. The following code will create a row of red boxes that turn blue when hovered over them.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.boxes</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> indianred<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.box:hover</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),x=n("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"Adjacent Combinator - Example 1",src:"https://codepen.io/IMD/embed/GRJoeEX?height=265&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/GRJoeEX'>Adjacent Combinator - Example 1</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),y=a(`<p>But now, lets add an extra bit of code so that when you hover over a box, the next will turn orange, and we will use the <strong>adjacent combinator</strong> to do it.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box:hover + .box</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> goldenrod<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_=n("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"Adjacent Combinator - Example 2",src:"https://codepen.io/IMD/embed/NWqxJgV?height=265&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/NWqxJgV'>Adjacent Combinator - Example 2</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),I=a(`<p>Now, lets go back to our navbar. We made some additional changes to navbar</p><h2 id="sibling" tabindex="-1"><a class="header-anchor" href="#sibling" aria-hidden="true">#</a> sibling</h2><p>The sibling selector works like adjacent selector but it selects all the following siblings after the selected element.</p><p>In the above example if we replace <code>+</code> with a <code>~</code> we will get the sibling selector which will colour all the boxes coming after the one that is hovered.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box:hover ~ .box</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> goldenrod<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),M=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Adjacent Combinator - Example 2",src:"https://codepen.io/IMD/embed/ZErNwjq?default-tab=result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/IMD/pen/ZErNwjq">
  Adjacent Combinator - Example 2</a> by IMD (<a href="https://codepen.io/IMD">@IMD</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),S=n("h2",{id:"references",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#references","aria-hidden":"true"},"#"),s(" References")],-1),D={href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Combinators",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.w3schools.com/howto/howto_css_dropdown_navbar.asp",target:"_blank",rel:"noopener noreferrer"};function q(E,j){const e=p("ExternalLinkIcon");return l(),c("div",null,[r,n("p",null,[n("a",d,[s("Combinators"),t(e)]),s(" are special type of selectors that are used to combine other selectors in a way that gives them a useful relationship to each other and the location of content in the document. There are four types of combinators:")]),u,h,k,m,b,v,g,f,w,x,y,_,I,M,S,n("ul",null,[n("li",null,[n("a",D,[s("Combinators | MDN"),t(e)])]),n("li",null,[n("a",C,[s("How To - Dropdown Navbar | w3schools.com"),t(e)])])])])}const T=o(i,[["render",q],["__file","combinators.html.vue"]]);export{T as default};
