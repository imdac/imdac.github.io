import{_ as t,p as e,q as a,a3 as n}from"./framework-dd056dd6.js";const i={},r=n('<h1 id="contacts" tabindex="-1"><a class="header-anchor" href="#contacts" aria-hidden="true">#</a> Contacts</h1><h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>You will design and develop a website for creating and viewing contacts.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>Your assignment must adhere to the following requirements:</p><ol><li>Submit your work in a Git repository named <strong>mtm6302-project-1</strong></li><li>The assignment should utilize one HTML (<strong>index.html</strong>), CSS (<strong>style.css</strong>), and JavaScript (<strong>script.js</strong>) file, each located at the root of the repository.</li><li>The web application should be responsive.</li><li>The web application should not experience any page refreshes.</li><li>You may NOT use any JavaScript libraries to complete the web application.</li><li>You may NOT use inline events. All DOM events must be handled using Event Listeners.</li><li>You may NOT declare variables with <code>var</code>. Use either <code>const</code> or <code>let</code>.</li><li>You may use a modern CSS Framework like Bootstrap or Foundation or a CSS reset (<strong>reset.css</strong>).</li><li>You may use other UI resources like Google Fonts and Font Awesome.</li><li>You must create an array containing at least 3 contacts. Contacts must have a first name, last name, email, city, and province.</li><li>On page load, all contacts&#39; first and last names must be dynamically listed on the page using JavaScript.</li><li>Clicking on a contact name must reveal the full contact details.</li><li>Clicking on a &quot;close&quot; button hides the full contact details.</li><li>A new contact form should be available on the page. The form must contain first name, last name, email, city, and province inputs.</li><li>Submitting the form will add the new contact to the contacts array and display the contact in the contacts list.</li></ol><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p><em><strong>Coming Soon</strong></em></p><h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><p>Submissions will be graded based on the following criteria:</p><table><thead><tr><th>Requirement</th><th style="text-align:center;">Marks</th></tr></thead><tbody><tr><td>Repository and files are named and structured correctly</td><td style="text-align:center;">2</td></tr><tr><td>At least 3 contacts are stored in a JavaScript array</td><td style="text-align:center;">2</td></tr><tr><td>Stored contacts have a first name, last name, email, city, and province</td><td style="text-align:center;">2</td></tr><tr><td>On page load, the first name and last name of all contacts are dynamically added using JavaScript</td><td style="text-align:center;">4</td></tr><tr><td>Clicking on a contact&#39;s name reveals the full contact&#39;s details</td><td style="text-align:center;">4</td></tr><tr><td>Clicking on a close button hides the full contact&#39;s details</td><td style="text-align:center;">4</td></tr><tr><td>Submitting the new contact form adds a new contact to the contacts array</td><td style="text-align:center;">3</td></tr><tr><td>Submitting the new contact form displays the new contact in the list</td><td style="text-align:center;">3</td></tr><tr><td>The UI is responsive and well designed</td><td style="text-align:center;">6</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>30</strong></td></tr></tbody></table>',11),o=[r];function s(l,c){return e(),a("div",null,o)}const h=t(i,[["render",s],["__file","contacts.html.vue"]]);export{h as default};
