import{_ as a,M as t,p as o,q as r,R as n,t as e,N as c,a3 as i}from"./framework-dd056dd6.js";const p={},l=n("h1",{id:"strict-mode",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#strict-mode","aria-hidden":"true"},"#"),e(" Strict Mode")],-1),d={class:"custom-container warning"},u=n("p",{class:"custom-container-title"},"NOTE",-1),m={href:"https://vuex.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>To enable strict mode, simply pass in <code>strict: true</code> when creating a Vuex store:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">strict</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. This ensures that all state mutations can be explicitly tracked by debugging tools.</p><h3 id="development-vs-production" tabindex="-1"><a class="header-anchor" href="#development-vs-production" aria-hidden="true">#</a> Development vs. Production</h3><p><strong>Do not enable strict mode when deploying for production!</strong> Strict mode runs a synchronous deep watcher on the state tree for detecting inappropriate mutations, and it can be quite expensive when you make large amount of mutations to the state. Make sure to turn it off in production to avoid the performance cost.</p><p>Similar to plugins, we can let the build tools handle that:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">strict</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function k(h,_){const s=t("ExternalLinkIcon");return o(),r("div",null,[l,n("div",d,[u,n("p",null,[e("The following documentation comes directly from the "),n("a",m,[e("vuex.vuejs.org"),c(s)]),e(".")])]),v])}const g=a(p,[["render",k],["__file","strict.html.vue"]]);export{g as default};
