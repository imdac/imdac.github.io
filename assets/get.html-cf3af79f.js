import{_ as o,M as a,p as i,q as l,N as t,R as n,t as s,a3 as c}from"./framework-dd056dd6.js";const u={},r=n("h1",{id:"get",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#get","aria-hidden":"true"},"#"),s(" $_GET")],-1),d={href:"https://www.php.net/manual/en/reserved.variables.get.php",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"$_GET",-1),g=c(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// </span>
  <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Hello, &#39;</span><span class="token operator">.</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Assuming the URL <code>https://example.com?name=World</code>, the above example will output something similar to:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Hello, World
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="dynamic-template-with-get" tabindex="-1"><a class="header-anchor" href="#dynamic-template-with-get" aria-hidden="true">#</a> Dynamic Template with $_GET</h2><p>Now, that we know how to pass and receive variables through the URL, we can use this feature to create dynamic templates and entire sites. For example, lets say we wanted to make a very basic blog, and we stored all of the data for the posts in the PHP array.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$posts</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string single-quoted-string">&#39;post-1&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;My First Post&#39;</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;text&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Fugiat exercitation eiusmod cillum aliqua.&#39;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string single-quoted-string">&#39;post-2&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;My Second Post&#39;</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;text&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Fugiat exercitation eiusmod cillum aliqua.&#39;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With this array and a small conditional statement, we can display the different posts based on the value past throught the URL.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token variable">$posts</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;post-1&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;My First Post&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;body&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Fugiat exercitation eiusmod cillum aliqua.&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;post-2&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;My Second Post&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;body&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Fugiat exercitation eiusmod cillum aliqua.&#39;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// checks if slug variable was passed through the url</span>
  <span class="token comment">// and if the value of slug is a key in the $posts array</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$posts</span><span class="token punctuation">[</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$post</span> <span class="token operator">=</span> <span class="token variable">$posts</span><span class="token punctuation">[</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;slug&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// fall back</span>
    <span class="token variable">$post</span> <span class="token operator">=</span> <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;post-1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$post</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;body&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function v(m,h){const e=a("Youtube"),p=a("ExternalLinkIcon");return i(),l("div",null,[r,t(e,{id:"9OlcKkRyA2o",citation:"griffith"}),n("p",null,[s("The "),n("a",d,[k,t(p)]),s(" variable is an associative array of variables passed to the current script via the URL parameters or query string.")]),g])}const q=o(u,[["render",v],["__file","get.html.vue"]]);export{q as default};
