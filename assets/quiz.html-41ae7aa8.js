import{_ as o,M as r,p as i,q as l,R as e,t as s,N as a,a3 as t}from"./framework-dd056dd6.js";const c={},p=e("h1",{id:"quiz",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#quiz","aria-hidden":"true"},"#"),s(" Quiz")],-1),u=e("h2",{id:"objective",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#objective","aria-hidden":"true"},"#"),s(" Objective")],-1),d={href:"https://quizapi.io",target:"_blank",rel:"noopener noreferrer"},h=e("h2",{id:"app-overview",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#app-overview","aria-hidden":"true"},"#"),s(" App Overview")],-1),k=e("p",null,"When a user first visits the site, they are presented with a form asking a difficulty level. With the provided difficulty level, the app will make a request to the Quiz API to retrieve a question. The question will then be displayed as a form, allowing the user to answer.",-1),q=e("p",null,"Once the user has answered the question, the app will inform the user if the answer was correct or incorrect. After which, the user will be asked again to select a difficulty level.",-1),f=e("p",null,"The app will also keep track of the number of correct or incorrect answers, displaying them on the page, and saving them to local storage. The user should be able to reset the stats at any time.",-1),v=e("h2",{id:"resources",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#resources","aria-hidden":"true"},"#"),s(" Resources")],-1),_={href:"https://quizapi.io",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"category",-1),w=e("code",null,"difficulty",-1),m=e("code",null,"limit",-1),y={href:"https://quizapi.io/api-config",target:"_blank",rel:"noopener noreferrer"},g=t(`<p>The Quiz API will return a JSON array of objects, which will contain the <code>question</code>, the <code>answers</code>, and the <code>correct_answer</code> as well as other data about the question. An example of the JSON data can be found below.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>It was recently discovered that the <code>correct_answer</code> property is often incorrect and sometimes set to <code>null</code>. Therefore, students are encouraged to use the <code>correct_answers</code> property. This object contains properties <code>answer_a_correct</code> through <code>answer_f_correct</code> and will return <code>&quot;true&quot;</code> for the correct answer.</p></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">508</span><span class="token punctuation">,</span>
    <span class="token property">&quot;question&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A homepage is __________&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;answers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;answer_a&quot;</span><span class="token operator">:</span> <span class="token string">&quot;an index of encyclopedia articles&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_b&quot;</span><span class="token operator">:</span> <span class="token string">&quot;the first page of a website&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_c&quot;</span><span class="token operator">:</span> <span class="token string">&quot;required for access to the Internet&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_d&quot;</span><span class="token operator">:</span> <span class="token string">&quot;where all Internet data is stored&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_e&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_f&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;multiple_correct_answers&quot;</span><span class="token operator">:</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;correct_answers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;answer_a_correct&quot;</span><span class="token operator">:</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_b_correct&quot;</span><span class="token operator">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_c_correct&quot;</span><span class="token operator">:</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_d_correct&quot;</span><span class="token operator">:</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_e_correct&quot;</span><span class="token operator">:</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;answer_f_correct&quot;</span><span class="token operator">:</span> <span class="token string">&quot;false&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;correct_answer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;answer_a&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;explanation&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tip&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;HTML&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Code&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;difficulty&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Easy&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-call" tabindex="-1"><a class="header-anchor" href="#api-call" aria-hidden="true">#</a> API Call</h3><p>Your API call URL will be similar to this</p><p><code>https://quizapi.io/api/v1/questions?apiKey=[YOUR_API_KEY]&amp;limit=1&amp;difficulty=[DIFFICULTY_LEVEL]</code></p><p><strong>Note:</strong></p>`,7),T=e("li",null,[s("Replace the information in "),e("code",null,"[]"),s(" with your information")],-1),I={href:"https://quizapi.io/",target:"_blank",rel:"noopener noreferrer"},z=e("li",null,"Difficulty level will be coming from the user selection from your app",-1),x=t('<h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ol><li>The assignment should utilize one HTML (<strong>index.html</strong>), CSS (<strong>style.css</strong>), and JavaScript (<strong>script.js</strong>) file, each located at the root of the repository.</li><li>Feel free to use a modern CSS Framework like Bootstrap or Foundation, or a CSS reset (<strong>reset.css</strong>).</li><li>You may not use inline events. All DOM events must be handled using Event Listeners.</li><li>You may not declare variables with <code>var</code>. Use either <code>const</code> or <code>let</code>.</li><li>The use of JavaScript libraries is allowed.</li><li>Do not use the <code>XMLHttpRequest</code> object or the jQuery <code>ajax()</code> method. Use the Fetch API for asynchronous operations.</li><li>The web application should be responsive.</li><li>The web application should not experience any page refreshes.</li><li>The web application should include a form that asks the user to select a difficulty level.</li><li>The web application should asynchronously retrieve and display the question retrieved from the Quiz API that matches the difficulty level provided by the user.</li><li>The question should be displayed in a form that allows the user to select and submit an answer.</li><li>The web application should display a message informing the user if the selected answer was correct or incorrect and display the option to select a difficulty level.</li><li>The web application should track and display the number of correct and incorrect answers. The tally of correct and incorrect answers should be stored in local storage.</li><li>The web application should allow the user to reset the tally of correct and incorrect answers from local storage.</li></ol><h2 id="hints" tabindex="-1"><a class="header-anchor" href="#hints" aria-hidden="true">#</a> Hints</h2>',3),A=e("li",null,"The Quiz API does not specify a limit on usage. However, students are strongly encouraged to store the Question data in local storage or use a static file during development.",-1),S={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"},j={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"},P=t("<li>Some questions will contain multiple correct answers. However, for this project treat each question as a multiple choice and accept any correct answer. For example, if <code>answer_a</code> and <code>answer_c</code> are both correct, then selecting either should produce a correct response.</li><li>Creating an array of answer keys (ie. <code>[&#39;answer_a&#39;, &#39;answer_b&#39;, ..., &#39;answer_f&#39;]</code>), can help in the displaying of correct answers.</li><li>If a question does not use all six answers, the unused answers are set to <code>null</code>. A conditional statement can be used to determine if an answer should be created.</li><li>The <code>correct_answers</code> property can be stored in a custom data attribute of the corresponding answer property to quickly help identify if an answer is correct.<br> (ie. <code>&lt;button data-correct=&quot;${question.correct_answers.answer_a_correct&quot;&gt; ${question.answers.answer_a} &lt;/button&gt;</code>)</li>",4);function O(N,L){const n=r("ExternalLinkIcon");return i(),l("div",null,[p,u,e("p",null,[s("Using the "),e("a",d,[s("QuizAPI"),a(n)]),s(", you will design and develop a web application that will display a random quiz question upon the user's request. When the user submits an answer they are informed if the selected answer was correct. The web application will keep track of the number of correct and incorrect answers.")]),h,k,q,f,v,e("p",null,[s("To complete this assignment, students will be use the "),e("a",_,[s("QuizAPI"),a(n)]),s(". Students are required to log in and generate an API token.")]),e("p",null,[s("The Quiz API can be used to retrieve quiz questions based on a different categories ("),b,s(") and difficulty ("),w,s(") level. If no category or level is provided the API will choose one at random. The "),m,s(" parameter can be used to specify how many questions to return. The Quiz API includes a "),e("a",y,[s("URL Generator"),a(n)]),s(" to help with the configuration of the options.")]),g,e("ul",null,[T,e("li",null,[s("The API key can be found in your account on "),e("a",I,[s("https://quizapi.io/"),a(n)]),s(" under API > Token")]),z]),x,e("ol",null,[A,e("li",null,[s("An object can be an excellent way to store data for a web application. Storing an object to local storage does require using "),e("a",S,[s("JSON.stringify"),a(n)]),s(" and "),e("a",j,[s("JSON.parse"),a(n)]),s(".")]),P])])}const J=o(c,[["render",O],["__file","quiz.html.vue"]]);export{J as default};
