import{_ as a,M as o,p as l,q as r,R as e,t,N as n,a3 as s}from"./framework-dd056dd6.js";const d={},c=s('<h1 id="grid-item-alignment" tabindex="-1"><a class="header-anchor" href="#grid-item-alignment" aria-hidden="true">#</a> Grid Item Alignment</h1><h2 id="block-axis-alignment" tabindex="-1"><a class="header-anchor" href="#block-axis-alignment" aria-hidden="true">#</a> Block Axis Alignment</h2><p>The Block axis refers to how a typical block layout is rendered. Block elements tend to flow from top to bottom with elements stacked upon each other.</p><p>Block axis alignment is controlled with <code>align-self</code> and <code>align-items</code> properties.</p><p>The <code>align-items</code>property applied to a grid container will influence the placement of all grid items within the container while <code>align-self</code> applied to a grid item overrides the parent’s <code>align-items</code> value.</p><h2 id="inline-axis-alignment" tabindex="-1"><a class="header-anchor" href="#inline-axis-alignment" aria-hidden="true">#</a> Inline Axis Alignment</h2><p>The inline or row axis crosses the block axis and can generally be thought of as the direction of text flows.</p><p>Inline alignment is accomplished using <code>justify-self</code> and <code>justify-items</code></p><p>Similar to block alignment, the line alignment of a container’s grid items can be accomplished with <code>justify-items</code> while applying <code>justify-self</code> to a grid item overrides it.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>The default value for the alignment properties is <code>stretch</code>. Stretch will consume the available space regardless of content but once another value is declared, grid items will scale to the size needed as determined by the content within it.</p></div><h2 id="further-review" tabindex="-1"><a class="header-anchor" href="#further-review" aria-hidden="true">#</a> Further Review</h2>',11),h={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Box_Alignment_in_CSS_Grid_Layout",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"references",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#references","aria-hidden":"true"},"#"),t(" References")],-1),g={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",target:"_blank",rel:"noopener noreferrer"},p={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/align-items",target:"_blank",rel:"noopener noreferrer"},f={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/justify-items",target:"_blank",rel:"noopener noreferrer"},u={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/justify-self",target:"_blank",rel:"noopener noreferrer"};function S(_,b){const i=o("ExternalLinkIcon");return l(),r("div",null,[c,e("ul",null,[e("li",null,[t("Read "),e("a",h,[t("Box alignment in CSS Grid Layout - CSS: Cascading Style Sheets | MDN"),n(i)])])]),m,e("ul",null,[e("li",null,[e("a",g,[t("align-self - CSS: Cascading Style Sheets | MDN"),n(i)])]),e("li",null,[e("a",p,[t("align-items - CSS: Cascading Style Sheets | MDN"),n(i)])]),e("li",null,[e("a",f,[t("justify-items - CSS: Cascading Style Sheets | MDN"),n(i)])]),e("li",null,[e("a",u,[t("justify-self - CSS: Cascading Style Sheets | MDN"),n(i)])])])])}const y=a(d,[["render",S],["__file","grid-alignment.html.vue"]]);export{y as default};
