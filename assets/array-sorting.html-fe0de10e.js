import{_ as r,M as e,p as l,q as i,R as n,t as s,N as a,a3 as t}from"./framework-dd056dd6.js";const u={},d=t('<h1 id="array-sorting" tabindex="-1"><a class="header-anchor" href="#array-sorting" aria-hidden="true">#</a> Array Sorting</h1><p>JavaScript includes two convenient methods for rearranging items inside an array, the <code>sort()</code> method and the <code>reverse()</code> method.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>These methods will alter the original array.</p></div><h2 id="the-sort-method" tabindex="-1"><a class="header-anchor" href="#the-sort-method" aria-hidden="true">#</a> The sort() Method</h2>',4),k={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"sort()",-1),v=n("code",null,"sort()",-1),h=t(`<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>By default, the <code>sort()</code> method will <strong>NOT</strong> always sort alphabetically, as uppercase and lowercase letters will have different UTF-16 values.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> primary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span>
primary<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>primary<span class="token punctuation">)</span><span class="token comment">// [&#39;blue&#39;, &#39;red&#39;, &#39;yellow&#39;]</span>

<span class="token comment">// Note the uppercase &#39;P&#39; in &#39;Purple&#39;</span>
<span class="token keyword">const</span> secondary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Purple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">]</span>
secondary<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>secondary<span class="token punctuation">)</span> <span class="token comment">// [&#39;Purple&#39;, &#39;green&#39;, &#39;orange&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>By default, the <code>sort()</code> method will <strong>NOT</strong> sort numbers numerically, as all numbers will be converted to strings.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>

numbers<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> <span class="token comment">// [1, 100, 20, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It is possible to alter the sort order of the <code>sort()</code> method by adding a compare function. This can make it possible to overcome the limitations of the default sort order.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>

<span class="token comment">// Adding a compare function to compare numbers</span>
numbers<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">-</span> b
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> <span class="token comment">// [1, 4, 20, 100]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-reverse-method" tabindex="-1"><a class="header-anchor" href="#the-reverse-method" aria-hidden="true">#</a> The reverse() Method</h2>`,7),b={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"reverse()",-1),f=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span>
colors<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>colors<span class="token punctuation">)</span><span class="token comment">// [&#39;blue&#39;, &#39;purple&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;red&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In JavaScript, it is possible to chain methods together, like <code>sort()</code> and <code>reverse()</code> to get a &quot;reverse alphabetical&quot; order.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span>
colors<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>colors<span class="token punctuation">)</span> <span class="token comment">// [&#39;yellow&#39;, &#39;red&#39;, &#39;purple&#39;, &#39;orange&#39;, &#39;blue&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function y(_,w){const o=e("ExternalLinkIcon"),p=e("Scrimba"),c=e("Youtube");return l(),i("div",null,[d,n("p",null,[s("The "),n("a",k,[m,a(o)]),s(" method sorts the items of an array, affecting the original array, and returns the sorted array. The default sort order for the "),v,s(" method converts all items to strings and then compare their UTF-16 code unit values.")]),h,n("p",null,[s("The "),n("a",b,[g,a(o)]),s(" method reverses an array, affecting the original array, and return the reversed array.")]),f,a(p,{id:"/c/cLrkJyHE"}),a(c,{id:"C3EPTuXKRw0",citation:"griffith"})])}const T=r(u,[["render",y],["__file","array-sorting.html.vue"]]);export{T as default};
