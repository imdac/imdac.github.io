import{_ as e,M as t,p,q as o,R as n,t as s,N as l,a3 as i}from"./framework-dd056dd6.js";const c={},r=n("h1",{id:"getting-error-messages",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getting-error-messages","aria-hidden":"true"},"#"),s(" Getting Error Messages")],-1),u=n("p",null,"When there is an error in the SQL query, it is not easy to find the problem using convention PHP methods. That is because the error occurs on the MySQL server and that error not relayed to PHP by default. Fortunately, there is a way to get the error information.",-1),k={href:"https://www.php.net/manual/en/pdo.errorinfo.php",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"errorInfo()",-1),m=i(`<ul><li>SQLSTATE error code</li><li>Driver-specific error code</li><li>Driver-specific error message</li></ul><p>This last part, which will be in index 2, is the one we are most interested in, because it contains a human-readable explanation of the error.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token keyword">require_once</span> <span class="token string double-quoted-string">&quot;db.php&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;SELECT * FROM movis&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$errorInfo</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">errorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">echo</span> <span class="token variable">$errorInfo</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// no such table: movis</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If there was no error in the SQL then the third item in the errorInfo array would be empty. We can use this fact to create a error management system which will check for an SQL error before proceeding.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token keyword">require_once</span> <span class="token string double-quoted-string">&quot;db.php&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;SELECT * FROM movies&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$error</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">errorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$error</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token delimiter important">?&gt;</span></span>
  <span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token variable">$movie</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>
  <span class="token php language-php"><span class="token delimiter important">&lt;?</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$movie</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token delimiter important">?&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>No results<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span>
  <span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">else</span> <span class="token punctuation">:</span> <span class="token delimiter important">?&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
      <span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">do</span> <span class="token punctuation">{</span> <span class="token delimiter important">?&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$movie</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;movie_title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$movie</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">endif</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">else</span> <span class="token punctuation">:</span> <span class="token delimiter important">?&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$error</span> <span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">endif</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function h(g,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,u,n("p",null,[s("The "),n("a",k,[d,l(a)]),s(" method returns an array containing the error information about the last operation performed by the database. There are three elements or parts of the errorInfo:")]),m])}const f=e(c,[["render",h],["__file","error-messages.html.vue"]]);export{f as default};
