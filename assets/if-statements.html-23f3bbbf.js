import{_ as t,M as o,p,q as i,R as n,t as s,N as e,a3 as l}from"./framework-dd056dd6.js";const c={},u=n("h1",{id:"sass-if-statements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sass-if-statements","aria-hidden":"true"},"#"),s(" Sass @if Statements")],-1),r={class:"watch"},d={href:"https://www.linkedin.com/learning/sass-essential-training/conditional-if-statements-and-argument-lists",target:"_blank",rel:"noopener noreferrer"},k={href:"https://sass-lang.com/documentation/at-rules/control/if",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"@if",-1),v=n("code",null,"@if",-1),h=n("code",null,"true",-1),_=n("code",null,"false",-1),b=n("code",null,"true",-1),f={href:"https://sass-lang.com/documentation/at-rules/control/if#else-if",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"@else",-1),y=n("code",null,"@if",-1),w=n("code",null,"@else",-1),x=n("code",null,"@if",-1),S=n("code",null,"false",-1),T={href:"https://sass-lang.com/documentation/at-rules/control/if#else-if",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"@else if",-1),N=n("code",null,"@else if",-1),$=n("code",null,"@if",-1),I=n("code",null,"false",-1),L=n("code",null,"@else if",-1),V=n("code",null,"true",-1),q=l(`<div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> breakpoint <span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">@if</span> <span class="token selector"><span class="token variable">$size</span> == &#39;medium&#39; </span><span class="token punctuation">{</span>
    <span class="token atrule"><span class="token rule">@media</span> screen <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 640px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
      <span class="token keyword">@content</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
  <span class="token punctuation">}</span> <span class="token keyword">@else if</span> <span class="token selector"><span class="token variable">$size</span> == &#39;large&#39; </span><span class="token punctuation">{</span>
    <span class="token atrule"><span class="token rule">@media</span> screen <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 1024px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
      <span class="token keyword">@content</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">@else if</span> <span class="token selector"><span class="token variable">$size</span> == &#39;xlarge&#39; </span><span class="token punctuation">{</span>
    <span class="token atrule"><span class="token rule">@media</span> screen <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
      <span class="token keyword">@content</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">@else</span> <span class="token punctuation">{</span>
    <span class="token atrule"><span class="token rule">@error</span> <span class="token string">&quot;Unknown size #{$size}.&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

main</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-gap</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 1fr<span class="token punctuation">;</span>
  
  <span class="token keyword">@include</span> <span class="token function">breakpoint</span><span class="token punctuation">(</span><span class="token string">&#39;medium&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">@include</span> <span class="token function">breakpoint</span><span class="token punctuation">(</span><span class="token string">&#39;large&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 200px 1fr 1fr 200px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">@include</span> <span class="token function">breakpoint</span><span class="token punctuation">(</span><span class="token string">&#39;xlarge&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 200px <span class="token function">repeat</span><span class="token punctuation">(</span>4<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span> 200px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),B={class:"try"},C={href:"https://www.sassmeister.com/gist/026e4ae52e9eebec8db8762544c179e7",target:"_blank",rel:"noopener noreferrer"};function E(M,R){const a=o("ExternalLinkIcon");return p(),i("div",null,[u,n("div",r,[n("p",null,[n("a",d,[s('Watch "Conditional @if statements and argument lists" on LinkedIn Learning'),e(a)])])]),n("p",null,[s("The "),n("a",k,[m,e(a)]),s(" statement in Sass controllers whether or not it block gets evaluated, which include emitting any CSS that might be inside. The "),v,s(" includes an expression, which return "),h,s(" or "),_,s(". If the expression is "),b,s(", the block is evaluated.")]),n("p",null,[s("The "),n("a",f,[g,e(a)]),s(" statement can following an "),y,s(" statement. The "),w,s(" block will evaluate if the "),x,s(" expression is "),S,s(".")]),n("p",null,[s("The "),n("a",T,[z,e(a)]),s(" statement can be used when more than one condition needs to be tested. The "),N,s(" block is evaluated only if the preceding "),$,s("’s expression returns "),I,s(" and the "),L,s("’s expression returns "),V,s(".")]),q,n("div",B,[n("p",null,[n("a",C,[s("Try it yourself on Sassmeister"),e(a)])])])])}const W=t(c,[["render",E],["__file","if-statements.html.vue"]]);export{W as default};
