import{_ as i,M as o,p as l,q as r,R as n,t as s,N as a,a3 as e}from"./framework-dd056dd6.js";const u={},d=e('<h1 id="array-manipulation" tabindex="-1"><a class="header-anchor" href="#array-manipulation" aria-hidden="true">#</a> Array Manipulation</h1><p>Once an array has been defined, it often becomes necessary to manipulate that array by adding, removing, and arranging the items of the array. Fortunately, JavaScript provides many methods for manipulating arrays.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p><strong>ALL</strong> of the following methods will alter the original array.</p></div><h2 id="the-push-method" tabindex="-1"><a class="header-anchor" href="#the-push-method" aria-hidden="true">#</a> The push() Method</h2>',4),k={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"push()",-1),h=n("strong",null,"end",-1),v=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> groceries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Apples&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;Bread&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span> <span class="token comment">// [&#39;Apples&#39;, &#39;Milk&#39;, &#39;Bread&#39;]</span>


groceries<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;Yogurt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bananas&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span>
<span class="token comment">// [&#39;Apples&#39;, &#39;Milk&#39;, &#39;Bread&#39;, &#39;Yogurt&#39;, &#39;Bananas&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-pop-method" tabindex="-1"><a class="header-anchor" href="#the-pop-method" aria-hidden="true">#</a> The pop() Method</h2>`,2),g={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"pop()",-1),f=n("strong",null,"last",-1),_=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> groceries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Apples&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bread&#39;</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Bread</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span> <span class="token comment">// [&#39;Apples&#39;, &#39;Milk&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-shift-method" tabindex="-1"><a class="header-anchor" href="#the-shift-method" aria-hidden="true">#</a> The shift() Method</h2>`,2),y={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"shift()",-1),B=n("strong",null,"first",-1),j=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> groceries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Apples&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bread&#39;</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Apples</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span> <span class="token comment">// [&#39;Milk&#39;, &#39;Bread&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-unshift-method" tabindex="-1"><a class="header-anchor" href="#the-unshift-method" aria-hidden="true">#</a> The unshift() Method</h2><p>The <a href=""><code>unshift()</code></a> method adds one or more items to the <strong>beginning</strong> of an array and returns the new length of the array.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> groceries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Apples&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&#39;Bread&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span> <span class="token comment">// [&#39;Bread&#39;, &#39;Apples&#39;, &#39;Milk&#39;]</span>


groceries<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&#39;Yogurt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bananas&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span>
<span class="token comment">// [&#39;Yogurt&#39;, &#39;Bananas&#39;, &#39;Bread&#39;, &#39;Apples&#39;, &#39;Milk&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-splice-method" tabindex="-1"><a class="header-anchor" href="#the-splice-method" aria-hidden="true">#</a> The splice() Method</h2>`,5),M={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"splice()",-1),w=n("code",null,"start",-1),T=n("code",null,"deleteCount",-1),S=n("code",null,"items",-1),Y=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> groceries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Apples&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bread&#39;</span><span class="token punctuation">]</span>

<span class="token comment">// index 1 deleteCount 0 item Yogurt</span>
<span class="token comment">// this will add item Yogurt at index 1</span>
groceries<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Yogurt&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span> <span class="token comment">// [&#39;Apples&#39;, &#39;Yogurt&#39;, &#39;Milk&#39;, &#39;Bread&#39;]</span>

<span class="token comment">// Removes item at index 2</span>
groceries<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span> <span class="token comment">// [&#39;Apples&#39;, &#39;Yogurt&#39;, &#39;Bread&#39;]</span>

<span class="token comment">// Removes the first two items, Inserts a new item. </span>
groceries<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;Carrots&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>groceries<span class="token punctuation">)</span> <span class="token comment">// [&#39;Carrots&#39;, &#39;Bread&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function R(C,N){const t=o("ExternalLinkIcon"),p=o("Scrimba"),c=o("Youtube");return l(),r("div",null,[d,n("p",null,[s("The "),n("a",k,[m,a(t)]),s(" method adds one or more items to the "),h,s(" of an array and returns the new length of the array.")]),v,n("p",null,[s("The "),n("a",g,[b,a(t)]),s(" method removes the "),f,s(" item from an array and returns the item removed.")]),_,n("p",null,[s("The "),n("a",y,[x,a(t)]),s(" method removes the "),B,s(" item from an array and returns the item removed.")]),j,n("p",null,[s("The "),n("a",M,[A,a(t)]),s(" method adds, removes, and/or replace items anywhere in the array, not just at the beginning or end. This method can take three parameters, "),w,s(" (the index of where to start), "),T,s(" (the number of items to remove from the array), and "),S,s(" (the item or items to add to the array)")]),Y,a(p,{id:"/c/cDb4rghd"}),a(c,{id:"C3EPTuXKRw0",citation:"griffith"})])}const E=i(u,[["render",R],["__file","array-manipulation.html.vue"]]);export{E as default};
