import{_ as t,M as o,p,q as i,R as s,t as n,N as a,a3 as l}from"./framework-dd056dd6.js";const r={},c=s("h1",{id:"creating-layout-pages",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#creating-layout-pages","aria-hidden":"true"},"#"),n(" Creating layout pages")],-1),d={class:"watch"},u={href:"https://laracasts.com/series/laravel-6-from-scratch/episodes/14",target:"_blank",rel:"noopener noreferrer"},k={href:"https://laravel.com/docs/6.x/blade#template-inheritance",target:"_blank",rel:"noopener noreferrer"},h=l(`<h2 id="defining-a-layout" tabindex="-1"><a class="header-anchor" href="#defining-a-layout" aria-hidden="true">#</a> Defining a Layout</h2><p>The first step to using template inheritance to define a layout. The &quot;master&quot; layout will likely contain typical HTML mark-up, but will also include two Blade directives <code>@section</code> and <code>@yield</code>. The <code>@section</code> directive defines a section of content, while the <code>@yield</code> directive is used to display the contents of a given section. The <code>@show</code> directive is used to end a defined section and immediately yield or display the section.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Stored in resources<span class="token operator">/</span>views<span class="token operator">/</span>layouts<span class="token operator">/</span>app<span class="token operator">.</span>blade<span class="token operator">.</span>php <span class="token operator">--</span><span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>App Name <span class="token operator">-</span> @<span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
        @<span class="token function">section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sidebar&#39;</span><span class="token punctuation">)</span>
            This is the master sidebar<span class="token operator">.</span>
        @show

        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;container&quot;</span><span class="token operator">&gt;</span>
            @<span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="extending-a-layout" tabindex="-1"><a class="header-anchor" href="#extending-a-layout" aria-hidden="true">#</a> Extending a Layout</h2><p>When extending a &quot;master&quot; layout, the child view will use the <code>@extends</code> directive to specify which layout the it should &quot;inherit&quot;. Views which extend a Blade layout may inject content into the layout&#39;s sections using <code>@section</code> directives. Remember, as seen in the example above, the contents of these sections will be displayed in the layout using <code>@yield</code>:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> Stored in resources<span class="token operator">/</span>views<span class="token operator">/</span>child<span class="token operator">.</span>blade<span class="token operator">.</span>php <span class="token operator">--</span><span class="token operator">&gt;</span>

@<span class="token keyword">extends</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;layouts.app&#39;</span><span class="token punctuation">)</span>

@<span class="token function">section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Page Title&#39;</span><span class="token punctuation">)</span>

@<span class="token function">section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sidebar&#39;</span><span class="token punctuation">)</span>
    @<span class="token keyword">parent</span>

    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>This is appended to the master sidebar<span class="token operator">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
@endsection

@<span class="token function">section</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>This is my body content<span class="token operator">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
@endsection
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, the sidebar section is utilizing the <code>@parent</code> directive to append (rather than overwriting) content to the layout&#39;s sidebar. The <code>@parent</code> directive will be replaced by the content of the layout when the view is rendered. In the above example, <code>@endsection</code> is used instead of <code>@show</code>. Using <code>@endsection</code> means that the section will be defined, but not yielded.</p>`,7);function v(g,m){const e=o("ExternalLinkIcon");return p(),i("div",null,[c,s("div",d,[s("p",null,[s("a",u,[n('Watch "Layout Pages" on Laracasts'),a(e)])])]),s("p",null,[n("One of the primary benefits of using Blade are "),s("a",k,[n("template inheritance"),a(e)]),n(". It allows a developer to create layout files that will hold common layout elements and extend them to other view templates.")]),h])}const y=t(r,[["render",v],["__file","layout-pages.html.vue"]]);export{y as default};
