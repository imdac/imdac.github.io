import{_ as o,M as l,p as i,q as r,R as e,t as s,N as t,a3 as a}from"./framework-dd056dd6.js";const c={},d=e("h1",{id:"pseudo-classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pseudo-classes","aria-hidden":"true"},"#"),s(" Pseudo Classes")],-1),p={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"link-related-states",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#link-related-states","aria-hidden":"true"},"#"),s(" Link-related States")],-1),h=e("code",null,"<a>",-1),v=e("code",null,":link",-1),m=e("code",null,":visited",-1),b={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:link",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,":link",-1),f=e("code",null,"<a>",-1),k=e("code",null,"href",-1),g={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:visited",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,":visited",-1),S=e("code",null,"<a>",-1),w=a(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* selects any &lt;a&gt; with an href attribute */</span>
<span class="token selector">a:link</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* selects any &lt;a&gt; that has been visited */</span>
<span class="token selector">a:visited</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> indianred<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),C=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"Pseudo-Classes: :link and :visited",src:"https://codepen.io/IMD/embed/vYOKpqq?height=265&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/vYOKpqq'>Pseudo-Classes: :link and :visited</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),x=a('<p>The <code>:link</code> and <code>:visited</code> pseudo-classes are often associated with the <code>:hover</code> and <code>:active</code> pseudo-classes, which we will talk about in the next section. Because these styles have equal specificity, they can be easily overridden by another. So it is important to follow the <em>LVHA-order</em> (<code>:link</code>, <code>:visited</code>, <code>:hover</code>, <code>:active</code>)</p><h2 id="mouse-and-keyboard-related-states" tabindex="-1"><a class="header-anchor" href="#mouse-and-keyboard-related-states" aria-hidden="true">#</a> Mouse and keyboard related states</h2><p>The mouse can trigger many states of an element, as such there are many different pseudo-classes that can be used. Two of the most common are <code>:hover</code> and <code>:active</code>.</p>',3),T={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:hover",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,":hover",-1),z={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:focus",target:"_blank",rel:"noopener noreferrer"},I={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:active",target:"_blank",rel:"noopener noreferrer"},P=e("code",null,":active",-1),W=a(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a:hover,
a:focus</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> goldenrod<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">a:active</span> <span class="token punctuation">{</span>
  <span class="token property">text-shadow</span><span class="token punctuation">:</span> 0 0 3px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),D=e("iframe",{height:"259",style:{width:"100%"},scrolling:"no",title:"Pseudo-Classes: :hover and :active",src:"https://codepen.io/IMD/embed/KKpMQpv?height=259&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/KKpMQpv'>Pseudo-Classes: :hover and :active</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),U=e("p",null,[s("While generally associated with "),e("code",null,"<a>"),s(" and "),e("code",null,"<button>"),s(" elements, the "),e("code",null,":hover"),s(" and "),e("code",null,":active"),s(" pseudo-classes can be applied to most elements.")],-1),q=e("iframe",{height:"430",style:{width:"100%"},scrolling:"no",title:"Pseudo-Classes: :hover and :active",src:"https://codepen.io/IMD/embed/BaNzYLL?height=430&theme-id=dark&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/BaNzYLL'>Pseudo-Classes: :hover and :active</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),L=e("h2",{id:"position-related-states",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#position-related-states","aria-hidden":"true"},"#"),s(" Position-related States")],-1),N=e("p",null,"The position an element appears among its siblings can also be targeted. Pseudo-classes in the group can be extremely useful when targeting certain elements within a large group.",-1),B={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:first-child",target:"_blank",rel:"noopener noreferrer"},K=e("code",null,":first-child",-1),V={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:last-child",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,":last-child",-1),E=a(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* matches the first &lt;p&gt; tag */</span>
<span class="token selector">p:first-child</span> <span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* matches the last &lt;p&gt; tag */</span>
<span class="token selector">p:last-child</span> <span class="token punctuation">{</span>
  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Y={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child",target:"_blank",rel:"noopener noreferrer"},O=e("code",null,"nth-child",-1),Q=e("code",null,"odd",-1),F=e("code",null,"even",-1),H=a(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* selects the second &lt;li&gt; element */</span>
<span class="token selector">li:nth-child(2)</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> indianred<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* selects alternating rows of a table */</span>
<span class="token selector">tr:nth-child(odd)</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* selects every 4th box starting with the first one */</span>
<span class="token selector">.box:nth-child(4n + 1)</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="form-related-states" tabindex="-1"><a class="header-anchor" href="#form-related-states" aria-hidden="true">#</a> Form-related States</h2><p>A form, and specifically the inputs of a form, may have several different states. The following pseudo-classes can be used to target the different states of form inputs.</p>`,3),R={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:focus",target:"_blank",rel:"noopener noreferrer"},j=e("code",null,":focus",-1),G={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:required",target:"_blank",rel:"noopener noreferrer"},J=e("code",null,":required",-1),X=e("code",null,"<input>",-1),Z=e("code",null,"<select>",-1),$=e("code",null,"<textarea>",-1),ee=e("code",null,"required",-1),se=e("strong",null,"NOTE:",-1),ne=e("code",null,"required",-1),te={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:optional",target:"_blank",rel:"noopener noreferrer"},ae=e("code",null,":optional",-1),oe=e("code",null,"<input>",-1),le=e("code",null,"<select>",-1),ie=e("code",null,"<textarea>",-1),re=e("code",null,"required",-1),ce={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:valid",target:"_blank",rel:"noopener noreferrer"},de=e("code",null,":valid",-1),pe=e("code",null,"<input>",-1),ue={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid",target:"_blank",rel:"noopener noreferrer"},he=e("code",null,":invalid",-1),ve=e("code",null,"<input>",-1),me={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only",target:"_blank",rel:"noopener noreferrer"},be=e("code",null,":read-only",-1),_e=e("code",null,"<input>",-1),fe=e("code",null,"<textarea>",-1);function ke(ge,ye){const n=l("ExternalLinkIcon");return i(),r("div",null,[d,e("p",null,[e("a",p,[s("CSS Pseudo-classes"),t(n)]),s(" target element by their state than their tag name or attributes. As such they are quite useful for providing feedback to user's actions. There are many different standard and experimental pseudo-classes, but there are ones that get used more often than others.")]),u,e("p",null,[s("An "),h,s(" can have different states: the two most basic are "),v,s(" and "),m,s(". The "),e("a",b,[_,t(n)]),s(" pseudo-class refers to any "),f,s(" tag with an "),k,s(" attribute that had not been visited by the user. Whereas the "),e("a",g,[y,t(n)]),s(" pseudo-class refers to any "),S,s(" that has already been visited by the user.")]),w,C,x,e("p",null,[s("The "),e("a",T,[M,t(n)]),s(" pseudo-class matches an element when the user interacts with it using pointing device, typically by moving the mouse cursor over the element.")]),e("p",null,[s("The "),e("a",z,[s("':focus'"),t(n)]),s(" pseudo-class selects an element when it is interacted using a keyboard or in case of a form the input field is in focus while the user is filling the form.")]),e("p",null,[s("The "),e("a",I,[P,t(n)]),s(" pseudo-class targets an element that is being activated by user, which typically occurs when the use is pressing down on the primary mouse button.")]),W,D,U,q,L,N,e("p",null,[s("The "),e("a",B,[K,t(n)]),s(" and "),e("a",V,[A,s(),t(n)]),s(" will target the first element and the last element, respectively, of a group of sibling elements if it matches the prefix selector.")]),E,e("p",null,[s("The "),e("a",Y,[O,t(n)]),s(" matches elements based on their position in a group of siblings. This pseudo-class will take a single argument that describes the pattern for matching the element. The values can be a number, a keyword ("),Q,s(", "),F,s(") or a functional notation.")]),H,e("ul",null,[e("li",null,[s("The "),e("a",R,[j,t(n)]),s(" pseudo-class represents an element that has received focus, which is generally triggered by the clicking on or tabbing to the element.")]),e("li",null,[s("The "),e("a",G,[J,t(n)]),s(" pseudo-class represents any "),X,s(", "),Z,s(", or "),$,s(" that has the "),ee,s(" attribute. "),se,s(" The "),ne,s(" attribute is used to force the user to provide a value for that specific form element before the form will be submitted.")]),e("li",null,[s("The "),e("a",te,[ae,t(n)]),s(" pseudo-class represents any "),oe,s(", "),le,s(", or "),ie,s(" that does not have the "),re,s(" attribute.")]),e("li",null,[s("The "),e("a",ce,[de,t(n)]),s(" pseudo-class represents any "),pe,s(" or form element whose value validates successfully.")]),e("li",null,[s("The "),e("a",ue,[he,t(n)]),s(" pseudo-class represents any "),ve,s(" or form element whose value fails to validate.")]),e("li",null,[s("The "),e("a",me,[be,t(n)]),s(" pseudo-class represents any "),_e,s(" or "),fe,s(" that is not editable by the user.")])])])}const we=o(c,[["render",ke],["__file","pseudo-classes.html.vue"]]);export{we as default};
