import{_ as s,M as l,p as r,q as h,R as e,t as n,N as t}from"./framework-dd056dd6.js";const d={},c=e("h1",{id:"css-display",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#css-display","aria-hidden":"true"},"#"),n(" CSS Display")],-1),p=e("p",null,"Each element on the page is displayed either as a block or inline. We can notice the difference of display in different elements. The anchor, input, label tags are inline as they display next to each other when added on the page. The paragraph, headings, list items are some examples of block as they display on their own line.",-1),f=e("p",null,[n("We can control the display behavior of the elements using the "),e("code",null,"display"),n(" property")],-1),u={href:"https://css-tricks.com/almanac/properties/d/display/",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"display-block-inline",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#display-block-inline","aria-hidden":"true"},"#"),n(" Display: Block/inline")],-1),_=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"CSS Inline / block styling",src:"//codepen.io/IMD/embed/jqgMGm/?height=265&theme-id=0&default-tab=html,result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/jqgMGm/'>CSS Inline / block styling</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),b=e("h3",{id:"block",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#block","aria-hidden":"true"},"#"),n(" Block")],-1),y=e("p",null,[n('A block-level element occupies the entire width of its parent element, thereby creating a "block". '),e("code",null,"display: block;")],-1),g={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements",target:"_blank",rel:"noopener noreferrer"},I=e("h3",{id:"inline",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inline","aria-hidden":"true"},"#"),n(" Inline")],-1),w=e("p",null,[n("Inline elements are those which only occupy the space required for the content of the element. The property of width and height will have no effect on these elements. "),e("code",null,"display: inline;")],-1),M=e("h3",{id:"inline-block",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inline-block","aria-hidden":"true"},"#"),n(" Inline-block")],-1),k=e("p",null,[n("Inline-block elements are the ones that occupy the space required for the content. The width and height properties do effect these elements. "),e("code",null,"display: inline-block;")],-1),D={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements",target:"_blank",rel:"noopener noreferrer"},x=e("h3",{id:"none",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#none","aria-hidden":"true"},"#"),n(" None")],-1),v=e("p",null,[n("If we want to remove content from the flow of the document we can set it's display to none. This is helpful in setting mobile and desktop specific styles. "),e("code",null,"display: none;")],-1),W=e("p",null,"When there is enough room, there will be more of a greeting from our friend below.",-1),S=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"qNWdVB",src:"//codepen.io/IMD/embed/qNWdVB/?height=265&theme-id=0&default-tab=css,result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/qNWdVB/'>qNWdVB</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),N=e("h2",{id:"examples",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#examples","aria-hidden":"true"},"#"),n(" Examples")],-1),B=e("p",null,[e("strong",null,"List Items")],-1),P=e("p",null,[n("List items inside the ordered and unordered lists are block level elements like the paragraph. We can make them display inline by adding the property "),e("code",null,"display"),n(" and value "),e("code",null,"inline"),n(".")],-1),q=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"HTML Navigation - unordered list",src:"//codepen.io/IMD/embed/JXgREa/?height=265&theme-id=0&default-tab=html,result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/JXgREa/'>HTML Navigation - unordered list</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),L=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"qNWdXW",src:"//codepen.io/IMD/embed/qNWdXW/?height=265&theme-id=0&default-tab=css,result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/qNWdXW/'>qNWdXW</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),C=e("p",null,[e("strong",null,"Anchor Tags")],-1),T=e("p",null,[n("By default anchor tags are inline elements, in the example below we can see that they do nto respect the values for the width and height properties. However in the second pen we can see that after changing the "),e("code",null,"display"),n(" to "),e("code",null,"inline-block"),n(" the width and height properties take effect and the anchor tags are still displaying inline.")],-1),E=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"Display Inline",src:"https://codepen.io/IMD/embed/LYZRPLy?height=265&theme-id=dark&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/LYZRPLy'>Display Inline</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),V=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"Display inline-block",src:"https://codepen.io/IMD/embed/YzWGKYe?height=265&theme-id=dark&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/YzWGKYe'>Display inline-block</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),Y=e("h4",{id:"video-resource",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#video-resource","aria-hidden":"true"},"#"),n(" Video Resource")],-1);function z(R,X){const o=l("ExternalLinkIcon"),i=l("Badge"),a=l("Youtube");return r(),h("div",null,[c,p,f,e("p",null,[e("a",u,[n("CSS Display"),t(o)]),n(" provides powerful layout and content control capabilities through CSS. As we explore navigation and layout more we'll see this property used more often. In the lessons coming up we will see primary differences between inline and block elements.")]),m,_,b,y,e("p",null,[e("a",g,[n("Block Elements "),t(i,{text:"MDN"}),t(o)])]),I,w,M,k,e("p",null,[e("a",D,[n("Inline Elements "),t(i,{text:"MDN"}),t(o)])]),x,v,W,S,N,B,P,q,L,C,T,E,V,Y,t(a,{id:"dL-_uVvbMU8",citation:"griffith"})])}const G=s(d,[["render",z],["__file","index.html.vue"]]);export{G as default};
