import{_ as n,M as e,p as t,q as i,R as a,t as o,N as r,a3 as p}from"./framework-dd056dd6.js";const l={},c=p(`<h1 id="php-associative-arrays" tabindex="-1"><a class="header-anchor" href="#php-associative-arrays" aria-hidden="true">#</a> PHP Associative Arrays</h1><p>An associative array is similar to an indexed array except that instead of using numbers to refer to each item, a label, which is commonly a string, is used instead. Therefore, associative arrays are made up of a series of key-value pairs.</p><p>Both arrays have their place. Indexed arrays are designed to maintain order, whereas associative arrays provide an easy to remember label for accessing the values inside. If the order is important, use indexed arrays. If it is more important to easily retrieve specific information without worry about order, use an associative array.</p><h2 id="creating-an-associative-array" tabindex="-1"><a class="header-anchor" href="#creating-an-associative-array" aria-hidden="true">#</a> Creating an Associative Array</h2><p>Associative arrays, just like indexed arrays, can be created using the <code>array()</code> function or the short array syntax. However, instead of just providing a list of values, a list of labels and values needs to be provided.</p><p>Retrieving values from an associative array is similar to index arrays, but instead of using the numbered index, the label is used.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// creating an assoc array</span>
  <span class="token variable">$assoc</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string double-quoted-string">&quot;first_name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Kevin&quot;</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;last_name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Skoglund&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// get the first name</span>
  <span class="token keyword">echo</span> <span class="token variable">$assoc</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;first_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Kevin</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>Using numbers on an associative array will not work unless a number is specifically provided as a label.</p></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// creating an assoc array</span>
  <span class="token variable">$assoc</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string double-quoted-string">&quot;first_name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Kevin&quot;</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;last_name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Skoglund&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// attempting to get first name by index</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$assoc</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NULL</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="updating-an-associative-array" tabindex="-1"><a class="header-anchor" href="#updating-an-associative-array" aria-hidden="true">#</a> Updating an Associative Array</h2><p>Updating an associative array is also similar to an indexed array. It is possible to assign a new value to an existing label, as well as creating new labels and values after the array has been defined.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// creating an assoc array</span>
  <span class="token variable">$assoc</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string double-quoted-string">&quot;first_name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Kevin&quot;</span><span class="token punctuation">,</span>
    <span class="token string double-quoted-string">&quot;last_name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Skoglund&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// assign new value to first name</span>
  <span class="token variable">$assoc</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;first_name&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Larry&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// adding age to the array</span>
  <span class="token variable">$assoc</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;age&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),d={class:"try"},u={href:"https://repl.it/@eisenbm/PHP-Associative-Arrays",target:"_blank",rel:"noopener noreferrer"};function v(m,k){const s=e("ExternalLinkIcon");return t(),i("div",null,[c,a("div",d,[a("p",null,[a("a",u,[o("Try it yourself on Repl.it"),r(s)])])])])}const b=n(l,[["render",v],["__file","associative-arrays.html.vue"]]);export{b as default};
