import{_ as i,M as o,p as l,q as c,R as e,t as n,N as s,a3 as a}from"./framework-dd056dd6.js";const d="/images/new-css-file.png",r="/images/css-syntax-basic.png",p="/images/algonquin-css-nocss-1.jpg",h="/images/font-family-body.gif",u={},m=e("h1",{id:"applying-style-to-html",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#applying-style-to-html","aria-hidden":"true"},"#"),n(" Applying Style to HTML")],-1),g=e("h2",{id:"css",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#css","aria-hidden":"true"},"#"),n(" CSS")],-1),f=e("p",null,"Cascading Style Sheets is a language for styling the webpages using colors, layout, and fonts. It also allows a developer or designer to adapt the presentation of the webpage to different types of devices, such as large screens, small screens, or printers. CSS is independent of HTML and can be used with any XML-based markup language. The separation of HTML from CSS makes it easier to maintain sites, share style sheets across pages, and tailor pages to different environments. This is referred to as the separation of structure (or: content) from presentation.",-1),v=e("ul",null,[e("li",null,"Used to style to HTML elements on a webpage"),e("li",null,"CSS is a plain text file, linked to the HTML file"),e("li",null,"CSS files are saved with a .css extension"),e("li",null,"Styles are defined for different properties of HTML elements such as height, width, margin, font-size, background, etc.")],-1),b={href:"https://developer.mozilla.org/en-US/docs/Web/CSS",target:"_blank",rel:"noopener noreferrer"},S=a(`<h2 id="creating-a-css-file" tabindex="-1"><a class="header-anchor" href="#creating-a-css-file" aria-hidden="true">#</a> Creating a CSS File</h2><p>Just like HTML we can create and edit a CSS file in any text based editor. We use special code editors such as Visual Studio Code for the different benefits such as code highlighting, syntax hints, auto-completion and more.</p><p>For organizing the files properly we add our CSS files in a folder next to our HTML files.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  - week-5/
    - images/
      - coffee-cup.jpg
    - css/
      - main.css
    - index.html
    - contact.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+d+`" alt="css file folder screenshot"></p><h2 id="linking-the-html-document-with-the-css-file" tabindex="-1"><a class="header-anchor" href="#linking-the-html-document-with-the-css-file" aria-hidden="true">#</a> Linking the HTML Document with the CSS file</h2><p>To style our HTML document with the CSS file we have to link the CSS with the HTML document.</p><p>We add the link to the CSS file in our HTML document, inside the <code>&lt;head&gt;&lt;/head&gt;</code> tag.</p><ul><li>We use the singular <code>&lt;link&gt;</code> tag inside the <code>&lt;head&gt;&lt;/head&gt;</code> tag.</li><li>The link tag must have the following two attributes: <ul><li><code>href</code> containing the path for location of the CSS file</li><li><code>rel</code> defining the relation of the linked file in this case <code>stylesheet</code></li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>css/main.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="syntax-of-css" tabindex="-1"><a class="header-anchor" href="#syntax-of-css" aria-hidden="true">#</a> Syntax of CSS</h2><p>We use a standard syntax when writing CSS. Stating by selecting the HTML element that we want to style, followed by the block of code that contains the properties we want to style for the element and the values for those properties.</p><div class="language-CSS line-numbers-mode" data-ext="CSS"><pre class="language-CSS"><code>body {
  color: red;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt="CSS Syntax Basics"></p><ul><li><code>rule set</code> is composed of a selector and any number of declarations contained in <code>{}</code> curly braces.</li><li><code>selector</code> identifies which HTML element we want to style. Also referred to as <strong>targeting</strong></li><li><code>declaration</code> a single line of CSS that assigns a property to its value using the colon <code>:</code>. Each declaration must end with a semi-colon <code>;</code></li><li><code>property</code> of the HTML element, such as color, height, width, background, border, etc.</li><li><code>value</code> the valid value accepted by the property.</li></ul><h2 id="css-comments" tabindex="-1"><a class="header-anchor" href="#css-comments" aria-hidden="true">#</a> CSS Comments</h2><p>Just like HTML we can add comments to our CSS code for leaving notes as we write the code. Added using the opening comment <code>/*</code> and closing comment <code>*/</code> syntax.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 
  using the body selector 
  styling two properties by adding two declarations
  yes, this is a css comment
*/</span>
<span class="token selector">body</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">VS Code Shortcut</p><p>For creating a comment we can use <code>control + /</code> or <code>command + /</code> inside VS Code</p></div><hr><p>Under the hood, every web page is fundamentally made of HTML.</p>`,21),y={href:"http://www.algonquincollege.com",target:"_blank",rel:"noopener noreferrer"},k=a('<p>With Styles algonquincollege.com looks great, without css, all the links are functional, the content is still readable, but it certainly looks much better with styles.</p><p><img src="'+p+'" alt="Algonquin College website with and without styling"></p><h2 id="css-inheritance" tabindex="-1"><a class="header-anchor" href="#css-inheritance" aria-hidden="true">#</a> CSS Inheritance</h2><p>The first thing to consider when styling elements is the inheritance effect of CSS. The easiest example of this to see is when we apply color property to the body of our HTML Document that style will be applied to every element contained in the body. Unless the element has its own value for that style to overwrite the inheritance.</p><p><img src="'+h+'" alt="CSS inheritance effect"></p><div class="custom-container warning"><p class="custom-container-title">Note</p><p>Not all the properties are inherited by the child elements from the parent element</p></div>',6);function w(_,x){const t=o("ExternalLinkIcon");return l(),c("div",null,[m,g,f,v,e("p",null,[e("a",b,[n("CSS Basics on MDN"),s(t)])]),S,e("p",null,[n("Taking "),e("a",y,[n("www.algonquincollege.com"),s(t)]),n(" we can see how much CSS has to offer.")]),k])}const T=i(u,[["render",w],["__file","index.html.vue"]]);export{T as default};
