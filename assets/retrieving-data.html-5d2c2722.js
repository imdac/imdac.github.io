import{_ as e,M as o,p as c,q as p,R as n,t as s,N as i,a3 as a}from"./framework-dd056dd6.js";const l={},u=a(`<h1 id="retrieving-data-from-firestore" tabindex="-1"><a class="header-anchor" href="#retrieving-data-from-firestore" aria-hidden="true">#</a> Retrieving Data from Firestore</h1><p>Once Firestore is initialized, it is possible to retrieve data from the Firestore database. Data can be retrieved by a collection of documents or by one document at a time.</p><h2 id="collection" tabindex="-1"><a class="header-anchor" href="#collection" aria-hidden="true">#</a> Collection</h2><p>When retrieving Firestore collection from within a React component, start by importing the <code>collection</code>, <code>query</code>, and <code>onSnapshot</code> method from the <code>firebase/firestore</code> library and the <code>db</code> variable from the <code>src/db.js</code>. Also, import the <code>useState</code> and <code>useEffect</code> methods from the <code>react</code> library. Create a state variable to hold the data from the Firestore database and call the <code>useEffect</code> method to make the data request.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/routes/Restaurants.jsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> collection<span class="token punctuation">,</span> query<span class="token punctuation">,</span> onSnapshot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/firestore&#39;</span>
<span class="token keyword">import</span> db <span class="token keyword">from</span> <span class="token string">&#39;../db.js&#39;</span>

<span class="token keyword">function</span> <span class="token function">Restaurants</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>restaurants<span class="token punctuation">,</span> setRestaurants<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),r=n("code",null,"useEffect",-1),d=n("code",null,"collection",-1),k=n("code",null,"query",-1),v=n("code",null,"onSnapshot",-1),m={href:"https://firebase.google.com/docs/firestore/query-data/listen",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"onSnapshot",-1),b=n("code",null,"data",-1),f=n("code",null,"forEach",-1),g=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/routes/Restaurants.jsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> collection<span class="token punctuation">,</span> query<span class="token punctuation">,</span> onSnapshot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/firestore&#39;</span>
<span class="token keyword">import</span> db <span class="token keyword">from</span> <span class="token string">&#39;../db.js&#39;</span>

<span class="token keyword">function</span> <span class="token function">Restaurants</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>restaurants<span class="token punctuation">,</span> setRestaurants<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// create collection using the database connection and collection id</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token function">collection</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token string">&#39;restaurants&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// create a query using the collection</span>
    <span class="token keyword">const</span> q <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// onSnapshot includes realtime updates </span>
    <span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> <span class="token function">onSnapshot</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">snapshot</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      snapshot<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> doc<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> doc<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        <span class="token literal-property property">city</span><span class="token operator">:</span> doc<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>city
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token function">setRestaurants</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="document" tabindex="-1"><a class="header-anchor" href="#document" aria-hidden="true">#</a> Document</h2><p>When using Firestore to retrieve a document, begin by importing the <code>doc</code> and <code>getDoc</code> method from the <code>firebase/firestore</code> library and the <code>db</code> variable from the <code>src/db.js</code>. Also, import the <code>useState</code> and <code>useEffect</code> methods from the <code>react</code> library. Create a state variable to hold the data from the Firestore docuement and call the <code>useEffect</code> method to make the data request.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/routes/Restaurant</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> doc<span class="token punctuation">,</span> getDoc <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/firestore&#39;</span>
<span class="token keyword">import</span> db <span class="token keyword">from</span> <span class="token string">&#39;../db.js&#39;</span>

<span class="token comment">// document id</span>
<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token string">&#39;12345&#39;</span>

<span class="token keyword">function</span> <span class="token function">Restaurant</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>restaurant<span class="token punctuation">,</span> setRestaurant<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As like when retrieving a collection, data properties and any necessary props should be added to the single file component. Then the <code>created</code> lifecycle hook can be used to request the document data. Finally, the <code>getDoc</code> method will be called to retrieve the specified document from within the&#39; created&#39; lifecycle hook. However, because the <code>getDoc</code> method returns a promise, <code>async</code> and <code>await</code> should be used.</p><p>From within the <code>useEffect</code> callback function, create a reference to the desired document using the <code>doc</code> method. This will require the database connect (<code>db</code>), the collection id, and the document id. Next, call the <code>getDoc</code> method using the document reference. The <code>getDoc</code> method returns a promise. Once the promise is fulfilled the state variable can be updated with data from the resulting document. Except for the document&#39;s id, all document data must be retrieved using the <code>data</code> method.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The callback function of the <code>useEffect</code> method cannot be preceded by the <code>async</code> keyword. Therefore, students are encouraged to use the <code>then</code> method instead of <code>async</code> and <code>await</code>.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/routes/Restaurant</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> doc<span class="token punctuation">,</span> getDoc <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;firebase/firestore&#39;</span>
<span class="token keyword">import</span> db <span class="token keyword">from</span> <span class="token string">&#39;../db.js&#39;</span>

<span class="token comment">// document id</span>
<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token string">&#39;12345&#39;</span>

<span class="token keyword">function</span> <span class="token function">Restaurant</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>restaurant<span class="token punctuation">,</span> setRestaurant<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">getDoc</span><span class="token punctuation">(</span><span class="token function">doc</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token string">&#39;restaurants&#39;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">document</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">setRestaurant</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>
            <span class="token literal-property property">city</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>city
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function y(w,_){const t=o("ExternalLinkIcon");return c(),p("div",null,[u,n("p",null,[s("From within the "),r,s(" method, create a "),d,s(" and a "),k,s(". Then call the "),v,s(" method. The "),n("a",m,[h,i(t)]),s(" method takes two arguments, the query and a callback function. The callback function receives an argument containing the snapshot of the entire Firestore collection. A "),b,s(" variable should be created and set to an empty array to serve as a temporary container for the snapshot data. Then using the snapshot and the "),f,s(" method, the data of each document is added to the temporary array. Finally, the state variable is updated with the value of the temporary array.")]),g])}const j=e(l,[["render",y],["__file","retrieving-data.html.vue"]]);export{j as default};
