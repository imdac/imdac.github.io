import{_ as i,M as o,p as l,q as p,R as n,t as a,N as e,a3 as t}from"./framework-dd056dd6.js";const c={},r=n("h1",{id:"php-floating-points",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-floating-points","aria-hidden":"true"},"#"),a(" PHP Floating Points")],-1),d={class:"watch"},u={href:"https://www.linkedin.com/learning/php-essential-training-2/numbers-part-2-floating-points",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.php.net/manual/en/language.types.float.php",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// setting a variable to a float</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mathematical-expressions" tabindex="-1"><a class="header-anchor" href="#mathematical-expressions" aria-hidden="true">#</a> Mathematical Expressions</h2><p>If a mathematical expression contains a float or a fraction or if the results of the expression is a number contains a decimal the result returned will be a floating point number.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// setting a variable to a float</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
  
  <span class="token comment">// adding 7 to a float</span>
  <span class="token keyword">echo</span> <span class="token variable">$float</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span> <span class="token comment">// 10.14</span>

  <span class="token comment">// this expression will result in a float</span>
  <span class="token keyword">echo</span> <span class="token number">4</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 1.3333333333333</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">NOTE</p><p>PHP does not let you divide by <code>0</code>. This will result in an error.</p></div>`,5),v={class:"try"},k={href:"https://repl.it/@eisenbm/PHP-Floating-Points",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"more-mathematical-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#more-mathematical-functions","aria-hidden":"true"},"#"),a(" More Mathematical Functions")],-1),b={href:"https://www.php.net/manual/en/ref.math.php",target:"_blank",rel:"noopener noreferrer"},_=n("h3",{id:"round-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#round-function","aria-hidden":"true"},"#"),a(" round() Function")],-1),g={href:"https://www.php.net/manual/en/function.round.php",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"round()",-1),y=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting a variable to a float</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
  
  <span class="token comment">// rounding $float to 1 decimal place</span>
  <span class="token keyword">echo</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3.1</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),x={class:"try"},$={href:"https://repl.it/@eisenbm/PHP-round-Function",target:"_blank",rel:"noopener noreferrer"},T=n("h3",{id:"ceil-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ceil-function","aria-hidden":"true"},"#"),a(" ceil() Function")],-1),P={href:"https://www.php.net/manual/en/function.ceil.php",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"ceil()",-1),E=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting a variable to a float</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
  
  <span class="token comment">// rounding $float to 1 decimal place</span>
  <span class="token keyword">echo</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),H={class:"try"},R={href:"https://repl.it/@eisenbm/PHP-ceil-Function",target:"_blank",rel:"noopener noreferrer"},N=n("h3",{id:"floor-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#floor-function","aria-hidden":"true"},"#"),a(" floor() Function")],-1),L={href:"https://www.php.net/manual/en/function.floor.php",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"floor()",-1),M=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting a variable to a float</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
  
  <span class="token comment">// rounding $float to 1 decimal place</span>
  <span class="token keyword">echo</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),I={class:"try"},S={href:"https://repl.it/@eisenbm/PHP-floor-Function",target:"_blank",rel:"noopener noreferrer"},U=n("h2",{id:"variable-handling-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#variable-handling-functions","aria-hidden":"true"},"#"),a(" Variable Handling Functions")],-1),A={href:"https://www.php.net/manual/en/ref.var.php",target:"_blank",rel:"noopener noreferrer"},B=n("h3",{id:"is-int-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#is-int-function","aria-hidden":"true"},"#"),a(" is_int() Function")],-1),O={href:"https://www.php.net/manual/en/function.is-int.php",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"is_int()",-1),C=n("code",null,"TRUE",-1),W=n("code",null,"FALSE",-1),j={class:"custom-container warning"},z=n("p",{class:"custom-container-title"},"NOTE",-1),D={href:"https://www.php.net/manual/en/function.var-dump.php",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"var_dump()",-1),J=n("code",null,"echo",-1),K=n("code",null,"var_dump()",-1),Q=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting a variables</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
  <span class="token variable">$integer</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  
  <span class="token comment">// checking if $integer is an integer</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_int</span><span class="token punctuation">(</span><span class="token variable">$integer</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bool(true)</span>

  <span class="token comment">// check if $float is an integer</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_int</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bool(false)</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),X={class:"try"},Y={href:"https://repl.it/@eisenbm/PHP-isint-Function",target:"_blank",rel:"noopener noreferrer"},Z=n("h3",{id:"is-float-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#is-float-function","aria-hidden":"true"},"#"),a(" is_float() Function")],-1),nn={href:"https://www.php.net/manual/en/function.is-float.php",target:"_blank",rel:"noopener noreferrer"},an=n("code",null,"is_float()",-1),sn=n("code",null,"TRUE",-1),en=n("code",null,"FALSE",-1),tn=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting a variables</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
  <span class="token variable">$integer</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  
  <span class="token comment">// checking if $integer is a float</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_float</span><span class="token punctuation">(</span><span class="token variable">$integer</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bool(false)</span>

  <span class="token comment">// check if $float is a float</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_float</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bool(true)</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),on={class:"try"},ln={href:"https://repl.it/@eisenbm/PHP-isfloat-Function",target:"_blank",rel:"noopener noreferrer"},pn=n("h3",{id:"is-numeric-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#is-numeric-function","aria-hidden":"true"},"#"),a(" is_numeric() Function")],-1),cn={href:"https://www.php.net/manual/en/function.is-float.php",target:"_blank",rel:"noopener noreferrer"},rn=n("code",null,"is_numeric()",-1),dn=n("code",null,"TRUE",-1),un=n("code",null,"FALSE",-1),hn=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting a variables</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
  <span class="token variable">$integer</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  
  <span class="token comment">// checking if $integer is a number</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$integer</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bool(true)</span>

  <span class="token comment">// check if $float is a number</span>
  <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$float</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bool(true)</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),mn={class:"try"},vn={href:"https://repl.it/@eisenbm/PHP-isnumeric-Function",target:"_blank",rel:"noopener noreferrer"};function kn(fn,bn){const s=o("ExternalLinkIcon");return l(),p("div",null,[r,n("div",d,[n("p",null,[n("a",u,[a('Watch "Numbers, part 2: Floating points" on LinkedIn Learning'),e(s)])])]),n("p",null,[n("a",h,[a("Floating point numbers"),e(s)]),a(" or floats for short, are any number with a decimal in them. To set a variable to a floating point number, simply provide a number literal that contains a decimal.")]),m,n("div",v,[n("p",null,[n("a",k,[a("Try it yourself on Repl.it"),e(s)])])]),f,n("p",null,[a("PHP has many predefined "),n("a",b,[a("Math Functions"),e(s)]),a(" that are specifically for working with floats.")]),_,n("p",null,[a("The "),n("a",g,[w,e(s)]),a(" function will return the rounded value of the provided number by the specified precision.")]),y,n("div",x,[n("p",null,[n("a",$,[a("Try it yourself on Repl.it"),e(s)])])]),T,n("p",null,[a("The "),n("a",P,[F,e(s)]),a(" function will return the next highest integer of the provided number.")]),E,n("div",H,[n("p",null,[n("a",R,[a("Try it yourself on Repl.it"),e(s)])])]),N,n("p",null,[a("The "),n("a",L,[V,e(s)]),a(" function will return the next lowest integer of the provided number.")]),M,n("div",I,[n("p",null,[n("a",S,[a("Try it yourself on Repl.it"),e(s)])])]),U,n("p",null,[n("a",A,[a("Variable handling functions"),e(s)]),a(" are used to receive information about a variable or to test the content contained in a variable.")]),B,n("p",null,[a("The "),n("a",O,[q,e(s)]),a(" function will find whether the data type of a variable is an integer. The function will return "),C,a(" if the data type is an integer or "),W,a(" if it is not.")]),n("div",j,[z,n("p",null,[a("The "),n("a",D,[G,e(s)]),a(" function output information about a variable, including value and type. Unlike "),J,a(", "),K,a(" is intended for debugging and development purposes only.")])]),Q,n("div",X,[n("p",null,[n("a",Y,[a("Try it yourself on Repl.it"),e(s)])])]),Z,n("p",null,[a("The "),n("a",nn,[an,e(s)]),a(" function will find whether the data type of a variable is a floating point number. The function will return "),sn,a(" if the data type is a float or "),en,a(" if it is not.")]),tn,n("div",on,[n("p",null,[n("a",ln,[a("Try it yourself on Repl.it"),e(s)])])]),pn,n("p",null,[a("The "),n("a",cn,[rn,e(s)]),a(" function will find whether the data type of a variable is a number or a numeric string. The function will return "),dn,a(" if the data type is a number or a numeric string or "),un,a(" if it is not.")]),hn,n("div",mn,[n("p",null,[n("a",vn,[a("Try it yourself on Repl.it"),e(s)])])])])}const gn=i(c,[["render",kn],["__file","floating-points.html.vue"]]);export{gn as default};
