import{_ as e,M as p,p as o,q as c,R as n,t as s,N as t,a3 as l}from"./framework-dd056dd6.js";const i={},u=n("h1",{id:"sass-maps",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sass-maps","aria-hidden":"true"},"#"),s(" Sass maps")],-1),r={class:"watch"},d={href:"https://www.linkedin.com/learning/sass-essential-training/working-with-the-map-data-type",target:"_blank",rel:"noopener noreferrer"},k={href:"https://sass-lang.com/documentation/values/maps",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,":",-1),m=n("code",null,",",-1),b={href:"https://www.w3schools.com/sass/sass_functions_map.asp",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"map-get()",-1),g=l(`<div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$grey</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;light&quot;</span><span class="token punctuation">:</span> #eee<span class="token punctuation">,</span> 
  <span class="token string">&quot;medium&quot;</span><span class="token punctuation">:</span> #999<span class="token punctuation">,</span>
  <span class="token string">&quot;dark&quot;</span><span class="token punctuation">:</span> #666
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token selector">.box </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">map-get</span><span class="token punctuation">(</span><span class="token variable">$grey</span><span class="token punctuation">,</span> <span class="token string">&quot;light&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid <span class="token function">map-get</span><span class="token punctuation">(</span><span class="token variable">$grey</span><span class="token punctuation">,</span> <span class="token string">&quot;medium&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">map-get</span><span class="token punctuation">(</span><span class="token variable">$grey</span><span class="token punctuation">,</span> <span class="token string">&quot;dark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>@each</code> rule can also be on a map to dynamically create style definitions. Both the key and value are assigned to variables so that they can be accessed in the block.</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$buttons</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;default&quot;</span><span class="token punctuation">:</span> #6c757d<span class="token punctuation">,</span>
  <span class="token string">&quot;cool&quot;</span><span class="token punctuation">:</span> #007bff<span class="token punctuation">,</span>
  <span class="token string">&quot;hot&quot;</span><span class="token punctuation">:</span> #dc3545<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token selector"><span class="token placeholder">%button</span> </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> .375rem .75rem<span class="token punctuation">;</span>

  <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid transparent<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> .25rem<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$button</span>, <span class="token variable">$color</span> in <span class="token variable">$buttons</span> </span><span class="token punctuation">{</span>
  <span class="token selector">.button-<span class="token variable">#{$button}</span> </span><span class="token punctuation">{</span>
    <span class="token keyword">@extend</span> <span class="token placeholder selector">%button</span><span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>
    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token variable">$color</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),_={class:"try"},y={href:"https://www.sassmeister.com/gist/f13adc8df5765a4e4cb5442386ef6c37",target:"_blank",rel:"noopener noreferrer"};function f(q,w){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,n("div",r,[n("p",null,[n("a",d,[s('Watch "Working with the map data type" on LinkedIn Learning'),t(a)])])]),n("p",null,[n("a",k,[s("Maps"),t(a)]),s(" are a collection of key / value pairs. The keys and values are separated by a colon ("),v,s(") and each is separated by a comma ("),m,s("). Maps must be written with parentheses.")]),n("p",null,[s("The "),n("a",b,[h,t(a)]),s(" function can be used to access a value from a map.")]),g,n("div",_,[n("p",null,[n("a",y,[s("Try it yourself on Sassmeister"),t(a)])])])])}const $=e(i,[["render",f],["__file","maps.html.vue"]]);export{$ as default};
