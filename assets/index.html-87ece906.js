import{_ as c,M as o,p as r,q as i,N as n,R as e,t as s,a3 as t}from"./framework-dd056dd6.js";const p={},d=e("h1",{id:"javascript-date-object",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#javascript-date-object","aria-hidden":"true"},"#"),s(" JavaScript Date Object")],-1),u={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"noopener noreferrer"},h=e("code",null,"Date",-1),m=e("code",null,"Date",-1),b=e("h2",{id:"create-a-new-date-object",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#create-a-new-date-object","aria-hidden":"true"},"#"),s(" Create a New Date Object")],-1),k={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"Date()",-1),f=e("code",null,"new",-1),v=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The <code>Date()</code> constructor can take different parameters, which are used to determine the single moment in time that <code>Date</code> object will hold.</p><h3 id="no-parameter" tabindex="-1"><a class="header-anchor" href="#no-parameter" aria-hidden="true">#</a> No Parameter</h3><p>If no parameter is given, the <code>Date</code> object will be set to the current date and time.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),g=e("iframe",{height:"258",style:{width:"100%"},scrolling:"no",title:"JavaScript Data Object - Example 1",src:"https://codepen.io/IMD/embed/XWXrrKj?height=258&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/XWXrrKj'>JavaScript Data Object - Example 1</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),w=t(`<h3 id="a-timestamp" tabindex="-1"><a class="header-anchor" href="#a-timestamp" aria-hidden="true">#</a> A Timestamp</h3><p>An integer representing the number of milliseconds since January 1, 1970 00:00:00 UTC can be given.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1500000000000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),D=e("iframe",{height:"258",style:{width:"100%"},scrolling:"no",title:"JavaScript Data Object - Example 2",src:"https://codepen.io/IMD/embed/oNbvvLo?height=258&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/oNbvvLo'>JavaScript Data Object - Example 2</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),y=e("h3",{id:"a-date-string",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#a-date-string","aria-hidden":"true"},"#"),s(" A Date String")],-1),S={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse",target:"_blank",rel:"noopener noreferrer"},j=e("code",null,"Date.parse()",-1),M=t(`<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>Setting dates using a date string is discouraged due to potential inconsistencies.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;July 13, 2017 22:40&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),J=e("iframe",{height:"216",style:{width:"100%"},scrolling:"no",title:"JavaScript Data Object - Example 3",src:"https://codepen.io/IMD/embed/pogzzNv?height=216&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/pogzzNv'>JavaScript Data Object - Example 3</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),x=t(`<h3 id="individual-date-components" tabindex="-1"><a class="header-anchor" href="#individual-date-components" aria-hidden="true">#</a> Individual Date Components</h3><p>Each part of a date (year, month, day, hour, minute, second, and millisecond) can be given as a separate parameter. Only the year and month are required and any missing fields will be given the lowest possible value.</p><p>When working with Date components, it is important to remember that the month values begins with <code>0</code> for January and ends with <code>11</code> for December.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),I=e("iframe",{height:"195",style:{width:"100%"},scrolling:"no",title:"JavaScript Data Object - Example 4",src:"https://codepen.io/IMD/embed/WNrNLGE?height=195&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/WNrNLGE'>JavaScript Data Object - Example 4</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),O=e("h2",{id:"instance-methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#instance-methods","aria-hidden":"true"},"#"),s(" Instance Methods")],-1),T=e("p",null,"Date instance methods can be used to get, set, or display dates. The following methods are some of the more commonly used.",-1),C=e("h3",{id:"getting-date-elements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getting-date-elements","aria-hidden":"true"},"#"),s(" Getting Date Elements")],-1),R=e("p",null,"It is possible to get any part of a Date instance using methods.",-1),W=e("thead",null,[e("tr",null,[e("th",null,"method"),e("th",null,"returns")])],-1),E={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate",target:"_blank",rel:"noopener noreferrer"},z=e("code",null,"getDate()",-1),G=e("td",null,"Returns the day of the month as a number between 1 and 31.",-1),U={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay",target:"_blank",rel:"noopener noreferrer"},N=e("code",null,"getDay()",-1),P=e("td",null,"Returns the day of the week as a number between 0 and 6.",-1),Y={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"getFullYear()",-1),L=e("td",null,"Returns the year as a 4-digit number.",-1),K={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"getHours()",-1),F=e("td",null,"Returns the hour as a number between 0 and 23.",-1),q={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes",target:"_blank",rel:"noopener noreferrer"},B=e("code",null,"getMinutes()",-1),H=e("td",null,"Returns the minutes as a number between 0 and 59.",-1),V={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"getMonth()",-1),Z=e("td",null,"Returns the month as a number between 0 and 11.",-1),$={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime",target:"_blank",rel:"noopener noreferrer"},ee=e("code",null,"getTime()",-1),ne=e("td",null,"Returns the number of milliseconds since Unix Epoch.",-1),ae=e("h3",{id:"setting-date-elements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setting-date-elements","aria-hidden":"true"},"#"),s(" Setting Date Elements")],-1),se=e("p",null,"It is possible to set any part of the Date instance using methods. The following methods are some of the more commonly used.",-1),te=e("thead",null,[e("tr",null,[e("th",null,"method"),e("th",null,"parameters"),e("th",null,"returns")])],-1),oe={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate",target:"_blank",rel:"noopener noreferrer"},le=e("code",null,"setDate()",-1),ce=e("td",null,"A number representing the day of the month",-1),re=e("td",null,"Sets the day of a Date instance relative to the beginning of the currently set month. If the day provided is outside of the month range, the method will update the month and year accordingly.",-1),ie={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear",target:"_blank",rel:"noopener noreferrer"},pe=e("code",null,"setFullYear()",-1),de=e("td",null,"A number with the numeric value of the desired year. Optionally, a month and date can also be set.",-1),ue=e("td",null,"Sets the full year of a Date instance.",-1),he={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours",target:"_blank",rel:"noopener noreferrer"},me=e("code",null,"setHours()",-1),be=e("td",null,"A number representing the hour. Optionally, the minutes and seconds can also be set.",-1),ke=e("td",null,"Sets the hour of a Date instance.",-1),_e={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth",target:"_blank",rel:"noopener noreferrer"},fe=e("code",null,"setMonth()",-1),ve=e("td",null,"A number representing the month of the year, where 0 represents January and 11 represents December. Optionally, a day can be set.",-1),ge=e("td",null,"Sets the month for of Date instance.",-1),we=e("h3",{id:"displaying-dates",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#displaying-dates","aria-hidden":"true"},"#"),s(" Displaying Dates")],-1),De=e("p",null,"Date methods can be used to display dates in different formats. The following methods are some of the more commonly used.",-1),ye=e("thead",null,[e("tr",null,[e("th",null,"method"),e("th",null,"returns"),e("th",null,"example")])],-1),Se={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toDateString",target:"_blank",rel:"noopener noreferrer"},je=e("code",null,"toDateString()",-1),Me=e("td",null,"Returns the date portion of the a Date instance.",-1),Je=e("td",null,[e("code",null,"Thu Jul 13 2017")],-1),xe={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString",target:"_blank",rel:"noopener noreferrer"},Ie=e("code",null,"toLocaleDateString()",-1),Oe=e("td",null,"Returns the date portion of the Date instance in a format that matches the set locale. The locale can be explicitly set and options can be used to manipulate how the date string will appear.",-1),Te=e("td",null,[e("code",null,"7/13/2017")],-1),Ce={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString",target:"_blank",rel:"noopener noreferrer"},Re=e("code",null,"toLocaleString()",-1),We=e("td",null,"Returns the Date instance in a format that matches the set locale. The locale can be explicitly set and options can be used to manipulate how the date string will appear.",-1),Ee=e("td",null,[e("code",null,"7/13/2017, 10:40:00 PM")],-1),ze=t(`<h2 id="calculating-difference" tabindex="-1"><a class="header-anchor" href="#calculating-difference" aria-hidden="true">#</a> Calculating Difference</h2><p>Calculating the difference between dates, either time passed or a count down to, is a common use of the dates in JavaScript. The following are examples of how to do those calculations.</p><h3 id="comparing-dates" tabindex="-1"><a class="header-anchor" href="#comparing-dates" aria-hidden="true">#</a> Comparing Dates</h3><p>Because all dates in JavaScript are essentially based on the number of milliseconds since the Unix Epoch, it can be one of the easiest ways to compare dates. The <code>getTime()</code> method can be used to get the number of milliseconds for a specific Date instance.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canadaDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;July 1, 2020&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> newYear <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;January 1, 2021&#39;</span><span class="token punctuation">)</span>

canadaDay<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1593576000000</span>
newYear<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// 1609477200000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As we can see from the example above the later a date is, the larger the number returned from the <code>getTime()</code> method. Because <code>getTime()</code> returns a number, standard compares can be used.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canadaDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;July 1, 2020&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> canadaDay<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Still waiting for Canada Day.&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Canada Day has passed.&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),Ge=e("iframe",{height:"248",style:{width:"100%"},scrolling:"no",title:"JavaScript Data Object - Comparing Dates with getTime",src:"https://codepen.io/IMD/embed/LYGENjb?height=248&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/LYGENjb'>JavaScript Data Object - Comparing Dates with getTime</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),Ue=t(`<p>Of course, sometimes we are looking for a specific date, and we need to know two dates match. This can be accomplished by comparing the different components of the two Date instances.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canadaDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;July 1, 2020&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> independenceDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;July 4, 2020&#39;</span><span class="token punctuation">)</span>

canadaDay<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> independenceDay<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
canadaDay<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> independenceDay<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Ne=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"JavaScript Data Object - Comparing Dates by Month and Day",src:"https://codepen.io/IMD/embed/XWXJdOK?height=265&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/XWXJdOK'>JavaScript Data Object - Comparing Dates by Month and Day</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),Pe=t(`<h3 id="countdown" tabindex="-1"><a class="header-anchor" href="#countdown" aria-hidden="true">#</a> Countdown</h3><p>Creating a countdown or an elapsed time, simply involves subtracting one date by another using the <code>getTime()</code>. You may wish to convert the milliseconds to a larger unit like hours or days.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>There are <code>1000</code> milliseconds in a second and <code>60</code> seconds in a minute. There are <code>60</code> minutes in an hour and <code>24</code> hours in a day. Finally, there are <code>365.25</code> days in a year.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canadaDay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;July 1, 2020&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// convert milliseconds to days</span>
<span class="token comment">// since we want whole days Math.floor is used to drop extra time</span>
<span class="token keyword">function</span> <span class="token function">msToDays</span> <span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">24</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Calculating difference</span>
<span class="token keyword">const</span> difference <span class="token operator">=</span> <span class="token function">msToDays</span><span class="token punctuation">(</span>canadaDay<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">msToDays</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>difference <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Canada Day has yet to come</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>difference <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Canada Day has passed</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// It is Canada Day</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Ye=e("iframe",{height:"265",style:{width:"100%"},scrolling:"no",title:"JavaScript Data Object - Countdown",src:"https://codepen.io/IMD/embed/MWKYegK?height=265&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href='https://codepen.io/IMD/pen/MWKYegK'>JavaScript Data Object - Countdown</a> by IMD
  (<a href='https://codepen.io/IMD'>@IMD</a>) on <a href='https://codepen.io'>CodePen</a>.
`,-1),Ae=e("h2",{id:"see-also",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),s(" See Also")],-1),Le={href:"https://www.youtube.com/watch?v=hES4Pj6pDCM",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://www.youtube.com/watch?v=_o2OHTwjtts",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://www.youtube.com/watch?v=vAuUzEwTbck",target:"_blank",rel:"noopener noreferrer"},Fe=e("h2",{id:"references",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#references","aria-hidden":"true"},"#"),s(" References")],-1),qe={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"noopener noreferrer"};function Be(He,Ve){const l=o("Youtube"),a=o("ExternalLinkIcon");return r(),i("div",null,[d,n(l,{id:"weA9FTMzK-E",citation:"griffith"}),e("p",null,[s("The JavaScript "),e("a",u,[h,n(a)]),s(" object can be used to work with dates and time within a JavaScript program. A "),m,s(" object contains a number that represents the milliseconds since the Unix Epoch or January 1, 1970.")]),b,e("p",null,[s("A new date object can be created by using the "),e("a",k,[_,n(a)]),s(" constructor. Like with all constructors, the "),f,s(" keyword must also be used.")]),v,g,w,D,y,e("p",null,[s("A string value representing a date and in a format recognized by the "),e("a",S,[j,n(a)]),s(" method can be given. The standard date-time string format is as follows:")]),M,J,x,I,O,T,C,R,e("table",null,[W,e("tbody",null,[e("tr",null,[e("td",null,[e("a",E,[z,n(a)])]),G]),e("tr",null,[e("td",null,[e("a",U,[N,n(a)])]),P]),e("tr",null,[e("td",null,[e("a",Y,[A,n(a)])]),L]),e("tr",null,[e("td",null,[e("a",K,[X,n(a)])]),F]),e("tr",null,[e("td",null,[e("a",q,[B,n(a)])]),H]),e("tr",null,[e("td",null,[e("a",V,[Q,n(a)])]),Z]),e("tr",null,[e("td",null,[e("a",$,[ee,n(a)])]),ne])])]),ae,se,e("table",null,[te,e("tbody",null,[e("tr",null,[e("td",null,[e("a",oe,[le,n(a)])]),ce,re]),e("tr",null,[e("td",null,[e("a",ie,[pe,n(a)])]),de,ue]),e("tr",null,[e("td",null,[e("a",he,[me,n(a)])]),be,ke]),e("tr",null,[e("td",null,[e("a",_e,[fe,n(a)])]),ve,ge])])]),we,De,e("table",null,[ye,e("tbody",null,[e("tr",null,[e("td",null,[e("a",Se,[je,n(a)])]),Me,Je]),e("tr",null,[e("td",null,[e("a",xe,[Ie,n(a)])]),Oe,Te]),e("tr",null,[e("td",null,[e("a",Ce,[Re,n(a)])]),We,Ee])])]),ze,Ge,Ue,Ne,Pe,Ye,Ae,e("ul",null,[e("li",null,[e("a",Le,[s("Timestamps, Date.now() and valueOf() | YouTube"),n(a)])]),e("li",null,[e("a",Ke,[s("International Date & Time Formatting with JavaScript | YouTube"),n(a)])]),e("li",null,[e("a",Xe,[s("A Complete Tutorial on the new MomentJS Library - Luxon JS | YouTube"),n(a)])])]),Fe,e("ul",null,[e("li",null,[e("a",qe,[s("Date object"),n(a)])])])])}const Ze=c(p,[["render",Be],["__file","index.html.vue"]]);export{Ze as default};
