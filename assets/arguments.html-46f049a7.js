import{_ as t,M as o,p,q as i,R as n,t as a,N as e,a3 as c}from"./framework-dd056dd6.js";const l={},u=n("h1",{id:"php-function-arguments",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-function-arguments","aria-hidden":"true"},"#"),a(" PHP Function Arguments")],-1),r={class:"watch"},d={href:"https://www.linkedin.com/learning/php-essential-training-2/function-arguments",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.php.net/manual/en/functions.arguments.php",target:"_blank",rel:"noopener noreferrer"},m=c(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token keyword">function</span> <span class="token function-definition function">say_hello_to</span><span class="token punctuation">(</span><span class="token variable">$word</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Hello <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$word</span><span class="token punctuation">}</span></span>!&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John Doe&quot;</span><span class="token punctuation">;</span>
  <span class="token function">say_hello_to</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hello John Doe!</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Functions can be defined with more than one parameter, and therefore can accept more than one argument. When working with more than one parameter, the same number of arguments must be given, in the same order.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token keyword">function</span> <span class="token function-definition function">better_hello</span><span class="token punctuation">(</span><span class="token variable">$greeting</span><span class="token punctuation">,</span> <span class="token variable">$target</span><span class="token punctuation">,</span> <span class="token variable">$punct</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$greeting</span><span class="token punctuation">}</span></span> <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$target</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$punct</span><span class="token punctuation">}</span></span>&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John Doe&quot;</span><span class="token punctuation">;</span>
  <span class="token function">better_hello</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Greetings&quot;</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Greetings John Doe!!! </span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function h(v,g){const s=o("ExternalLinkIcon");return p(),i("div",null,[u,n("div",r,[n("p",null,[n("a",d,[a('Watch "Function arguments" on LinkedIn Learning'),e(s)])])]),n("p",null,[n("a",k,[a("Function arguments"),e(s)]),a(" are data that is passed to a function through comma-separated list.")]),m])}const _=t(l,[["render",h],["__file","arguments.html.vue"]]);export{_ as default};
