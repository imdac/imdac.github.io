import{_ as i,M as n,p as s,q as o,R as t,t as e,N as d,a3 as r}from"./framework-dd056dd6.js";const c="/images/assignment-template.jpg",l={},p=r('<h1 id="responsive-grid-of-images" tabindex="-1"><a class="header-anchor" href="#responsive-grid-of-images" aria-hidden="true">#</a> Responsive Grid Of Images</h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Create a responsive grid of images to serve different sized images to different devices. Use the <code>&lt;picture&gt;</code> element to serve appropriate image sizes for your grid.</p><p><img src="'+c+'" alt="Display Grid"></p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2>',5),h=t("code",null,"<figure>",-1),g=t("code",null,"<picture>",-1),m={href:"https://placehold.it/",target:"_blank",rel:"noopener noreferrer"},u=r('<p>Be sure to attribute images with <code>&lt;figcaption&gt;</code></p><p>For this assignment, use Flexbox and/or CSS Grid. Please refrain from â€˜floatingâ€™ in this assignment. ðŸ˜‰</p><h3 id="restrictions" tabindex="-1"><a class="header-anchor" href="#restrictions" aria-hidden="true">#</a> Restrictions</h3><h3 id="breakpoint-columns" tabindex="-1"><a class="header-anchor" href="#breakpoint-columns" aria-hidden="true">#</a> Breakpoint Columns</h3><p><strong>0 -&gt; 500px</strong></p><p>Single Column, Serve a 500 x 200 image that scales the full width of the screen.</p><p><strong>500px &lt;-&gt; 960px</strong></p><p>Two Columns. Keep the 500 x 200 image but float the columns to fit two columns with 1% margin around the column items.</p><p><strong>960px -&gt;</strong></p><p>3 Column, Centered at 960px. Serve 310 x 120 image, this will be the only extra picture source needed. The margin between the columns should now be 5px.</p><h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><table><thead><tr><th>Criteria</th><th style="text-align:center;">Pts</th></tr></thead><tbody><tr><td>Mobile first approach</td><td style="text-align:center;">1</td></tr><tr><td>Breakpoints set as required</td><td style="text-align:center;">2</td></tr><tr><td>Columns and contents display as described</td><td style="text-align:center;">3</td></tr><tr><td><code>&lt;picture&gt;</code> element implemented as required including the appropriately sized sources, <code>&lt;img&gt;</code> tag and alt attribute</td><td style="text-align:center;">3</td></tr><tr><td>HTML and CSS are error free and pass validation</td><td style="text-align:center;">2</td></tr><tr><td>Content centered in viewport</td><td style="text-align:center;">1</td></tr><tr><td><code>&lt;figure&gt;</code> and <code>&lt;figcaption&gt;</code> implemented correctly</td><td style="text-align:center;">2</td></tr><tr><td>Spacing of pictures is balanced and consistent with available space</td><td style="text-align:center;">1</td></tr><tr><td>Instructor Discretion</td><td style="text-align:center;">5</td></tr><tr><td>Total</td><td style="text-align:center;">21</td></tr></tbody></table><h2 id="submission" tabindex="-1"><a class="header-anchor" href="#submission" aria-hidden="true">#</a> Submission</h2><p>Submit a zip of your folder. Use the following naming convention for the zip. Be sure to use hyphens for the spaces and all lowercase lettering.</p><p>username-mtm6130-responsive-image-grid.zip</p>',15);function f(b,x){const a=n("ExternalLinkIcon");return s(),o("div",null,[p,t("p",null,[e("Using the "),h,e(" and "),g,e(" element - create a responsive grid of images that substitute in appropriate images at each breakpoint. Use images from "),t("a",m,[e("Placehold.it"),d(a)]),e(" . Using a mobile first approach, create a grid that expands from one column into two columns and finally centered with three columns. Spacing of images should be consistent and balanced.")]),u])}const y=i(l,[["render",f],["__file","resp-grid-images.html.vue"]]);export{y as default};
