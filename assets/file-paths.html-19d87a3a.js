import{_ as e,p as o,q as t,a3 as i}from"./framework-dd056dd6.js";const d={},a=i(`<h1 id="file-paths" tabindex="-1"><a class="header-anchor" href="#file-paths" aria-hidden="true">#</a> File Paths</h1><p>When working with the web sites we will be linking different pages together, adding images to our web pages and linking to resources to make our website work.</p><p>Paths are the syntax we write to point to different files folders on our computer. There are two types of Paths:</p><ol><li>Relative Paths</li><li>Absolute Paths</li></ol><h2 id="relative-paths" tabindex="-1"><a class="header-anchor" href="#relative-paths" aria-hidden="true">#</a> Relative Paths</h2><p>When we link to a file or folder on the same computer using the relative location from the file we are adding the link to. Let&#39;s say we have the following folder structure</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>- mtm6130/
    - week-1/
        - index.html
        - about.html
        - images/
              - birds.jpg
        - projects/
              - example-1.html
              - example-2.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now in the above folder structure we have:</p><ul><li><code>week-1</code> folder which contains two files <code>index.html</code> and <code>about.html</code> and two folders <code>images</code> and <code>projects</code></li><li><code>images</code> folder contains one file <code>birds.jpg</code></li><li><code>projects</code> folder contains two files <code>example-1.html</code> and <code>example-2.html</code></li></ul><h2 id="paths-in-the-same-folder" tabindex="-1"><a class="header-anchor" href="#paths-in-the-same-folder" aria-hidden="true">#</a> Paths in the same folder</h2><p>Now if we want to write a path from <code>index.html</code> file to <code>about.html</code> file.</p><p>The path in this case will be simply <code>about.html</code> since the file is next to the one we starting from.</p><p>We can add <code>./</code> in front of the file to get the same result.</p><p><code>./</code> simply suggests that the file is in the same folder, it is added automatically if we do not add it.</p><p><code>./about.html</code> is same as <code>about.html</code></p><h2 id="moving-into-folders" tabindex="-1"><a class="header-anchor" href="#moving-into-folders" aria-hidden="true">#</a> Moving into folders</h2><p>For moving into folders we write a path with the folder name following a forward slash <code>/</code></p><p>Let&#39;s write a path from <code>index.html</code> file to the <code>birds.jpg</code> image</p><p>In this case we will have to move into the <code>images</code> folder point to the <code>birds.jpg</code> file</p><p>The path from <code>index.html</code> file to the <code>birds.jpg</code> file will be <code>images/birds.jpg</code> or <code>./images/birds.jpg</code></p><h2 id="moving-out-of-folders" tabindex="-1"><a class="header-anchor" href="#moving-out-of-folders" aria-hidden="true">#</a> Moving out of folders</h2><p>For moving out of a folder we use <code>../</code> notice the two dots in front of forward slash which means moving out of the current folder</p><p>Let&#39;s say we want to write a path from <code>example-1.html</code> file to <code>index.html</code> file</p><p>The path will be <code>../index.html</code> first we are moving out of the current folder <code>../</code> which will bring us out from <code>projects</code> folder to the <code>week-1</code> folder and then we are pointing to <code>index.html</code></p><p>Let&#39;s go one step further, we will write a path from <code>example-1.html</code> to <code>birds.jpg</code> here are the steps:</p><ol><li>Move out of the <code>projects</code> folder</li><li>Move into the <code>images</code> folder</li><li>Point to the <code>birds.jpg</code> file</li></ol><p>Here is how the path will be written <code>../images/birds.jpg</code></p><p>If we were to write a path from <code>example-2.html</code> to the <code>birds.jpg</code> image it will be exactly the same as both <code>example-1.html</code> and <code>example-2.html</code> are in the same folder.</p><h2 id="absolute-paths" tabindex="-1"><a class="header-anchor" href="#absolute-paths" aria-hidden="true">#</a> Absolute Paths</h2><p>Absolute paths are not in relation to the current file and start with a protocol <code>http(s)://</code> which means they are pointing to files in relation to the top-level Internet and URLs. Example: <code>https://apple.com</code>, <code>https://algonquincollege.com</code></p>`,30),l=[a];function s(r,n){return o(),t("div",null,l)}const h=e(d,[["render",s],["__file","file-paths.html.vue"]]);export{h as default};
