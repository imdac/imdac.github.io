import{_ as c,M as n,p as i,q as u,R as s,t,N as a,a3 as e}from"./framework-dd056dd6.js";const l={},d={id:"hearts",tabindex:"-1"},h=s("a",{class:"header-anchor",href:"#hearts","aria-hidden":"true"},"#",-1),k={class:"custom-container danger"},g=s("p",{class:"custom-container-title"},"A GitHub Classroom Assignment",-1),m={href:"https://classroom.github.com/a/BqRM4GfL",target:"_blank",rel:"noopener noreferrer"},f=e(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Anyone up for a game of Hearts?</p><h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>Using what you learned about loops and conditional statements, create a standard deck of cards and deal out all the cards to the four players.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>The following requirements must be met in order to complete the assignment successfully:</p><h3 id="step-1" tabindex="-1"><a class="header-anchor" href="#step-1" aria-hidden="true">#</a> Step 1</h3><p>Clone this repository from GitHub. <strong>Aside from this README file, there are NO starter files for this assignment.</strong></p><h3 id="step-2" tabindex="-1"><a class="header-anchor" href="#step-2" aria-hidden="true">#</a> Step 2</h3><p>Create an <code>index.html</code> file with the standard HTML5 structure. Add the provided <code>script.js</code> file to the <code>index.html</code> file using the <code>&lt;script&gt;&lt;/script&gt;</code> tag.</p><h3 id="step-3" tabindex="-1"><a class="header-anchor" href="#step-3" aria-hidden="true">#</a> Step 3</h3><p>Using the provided <code>suits</code> and <code>ranks</code> arrays and nested loops, create an array of objects. Each object will contain <code>suit</code> and <code>rank</code> property representing each card in a standard deck of cards.</p><p><em>The computed array of objects should look something like this</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;clubs&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;clubs&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;clubs&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;clubs&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;clubs&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;spades&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token string">&quot;J&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;spades&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token string">&quot;Q&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;spades&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token string">&quot;K&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token string-property property">&quot;suit&quot;</span><span class="token operator">:</span><span class="token string">&quot;spades&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;rank&quot;</span><span class="token operator">:</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-4" tabindex="-1"><a class="header-anchor" href="#step-4" aria-hidden="true">#</a> Step 4</h3><p>Using the provide <code>shuffle()</code> function, shuffle the newly created deck of cards (Refer to the Shuffle Function section below). Store the results of the <code>shuffle()</code> to a new variable.</p><h3 id="step-5" tabindex="-1"><a class="header-anchor" href="#step-5" aria-hidden="true">#</a> Step 5</h3><p>Using the shuffled deck and players object, deal out a card to each player one card at a time until every card has been dealt. Each player should have 13 cards.</p><h3 id="step-6" tabindex="-1"><a class="header-anchor" href="#step-6" aria-hidden="true">#</a> Step 6</h3><p>Using loops, find the player that is holding the Queen of Hearts and display a message to the console.</p><h2 id="shuffle-function" tabindex="-1"><a class="header-anchor" href="#shuffle-function" aria-hidden="true">#</a> Shuffle Function</h2><p>The following screencast shows how to use the provided <code>shuffle()</code> function.</p>`,22),b=e('<h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><table><thead><tr><th>Task</th><th style="text-align:center;">Points</th></tr></thead><tbody><tr><td>Creates a full deck of cards</td><td style="text-align:center;">3</td></tr><tr><td>Shuffles the deck of cards</td><td style="text-align:center;">1</td></tr><tr><td>Deal out the cards to each player properly</td><td style="text-align:center;">3</td></tr><tr><td>Finds the player with Queen of Hearts</td><td style="text-align:center;">3</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>10</strong></td></tr></tbody></table><h2 id="submission" tabindex="-1"><a class="header-anchor" href="#submission" aria-hidden="true">#</a> Submission</h2><p>When the assignment is completed, follow the steps below to submit for grading:</p><ol><li>Create a commit with the message &quot;Completes the Hearts assignment&quot;</li><li>Push all commits to GitHub.</li><li>Submit the URL to your GitHub repository to the <strong>Hearts</strong> assignment on BrightSpace.</li></ol>',5);function q(y,v){const o=n("Badge"),p=n("ExternalLinkIcon"),r=n("Scrimba");return i(),u("div",null,[s("h1",d,[h,t(" Hearts "),a(o,{text:"Exercise",vertical:"middle"})]),s("div",k,[g,s("p",null,[t("This assignment must be accepted on "),s("a",m,[t("GitHub Classroom"),a(p)]),t(".")])]),f,a(r,{id:"/c/cR3EJaTk"}),b])}const x=c(l,[["render",q],["__file","hearts.html.vue"]]);export{x as default};
