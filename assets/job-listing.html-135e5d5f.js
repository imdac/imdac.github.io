import{_ as a,M as r,p as o,q as i,N as s,a3 as e}from"./framework-dd056dd6.js";const l={},n=e('<h1 id="job-listing" tabindex="-1"><a class="header-anchor" href="#job-listing" aria-hidden="true">#</a> Job Listing</h1><h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>You will design and develop a savable, job application form using JavaScript and Local Storage.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ol><li>Submit your work in a Git repository named <strong>mtm6302-exercise-3</strong></li><li>The assignment should utilize one HTML (<strong>index.html</strong>), CSS (<strong>style.css</strong>), and JavaScript (<strong>script.js</strong>) file, each located at the root of the repository.</li><li>The web application should be responsive.</li><li>The web application should not experience any page refreshes.</li><li>You may NOT use any JavaScript libraries to complete the web application.</li><li>You may NOT use inline events. All DOM events must be handled using Event Listeners.</li><li>You may NOT declare variables with <code>var</code>. Use either <code>const</code> or <code>let</code>.</li><li>You may use a modern CSS Framework like Bootstrap or Foundation, or a CSS reset (<strong>reset.css</strong>).</li><li>You may use other UI resources like Google Fonts and Font Awesome.</li><li>The form should include at least one textbox, one selectbox, one checkbox, and one textarea.</li><li>A save button should allow the user to save current form data to Local Storage.</li><li>The date and time of the last time the form data was saved should be displayed.</li><li>When the page loads, the form should be pre-filled with any data stored in Local Storage.</li><li>Submitting the form will clear the form, remove the data stored in Local Storage, and display a message that application has been submitted. <em>The form should NOT cause a page refresh.</em></li></ol><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2>',6),d=e('<h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><p>Submissions will be graded based on the following criteria:</p><table><thead><tr><th>Requirement</th><th style="text-align:center;">Marks</th></tr></thead><tbody><tr><td>Repository and files are named and structured correctly</td><td style="text-align:center;">2</td></tr><tr><td>The form includes at at least one textbox, one selectbox, one checkbox, and one textarea.</td><td style="text-align:center;">2</td></tr><tr><td>Clicking on the &quot;save&quot; button will save the current form data to local storage.</td><td style="text-align:center;">3</td></tr><tr><td>The form is pre-filled with data from local storage when the page first loads.</td><td style="text-align:center;">3</td></tr><tr><td>The date and time of the last save is displayed on the page.</td><td style="text-align:center;">2</td></tr><tr><td>The form is cleared and after the form is submitted.</td><td style="text-align:center;">2</td></tr><tr><td>All data in local storage is removed after the form is submitted.</td><td style="text-align:center;">2</td></tr><tr><td>A &quot;success&quot; message is displayed after the form is submitted.</td><td style="text-align:center;">2</td></tr><tr><td>The UI is responsive and well designed</td><td style="text-align:center;">2</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>20</strong></td></tr></tbody></table>',3);function c(h,u){const t=r("Youtube");return o(),i("div",null,[n,s(t,{id:"RETHvwRVB2I"}),d])}const g=a(l,[["render",c],["__file","job-listing.html.vue"]]);export{g as default};
