import{_ as o,M as t,p,q as c,R as n,t as s,N as e,a3 as l}from"./framework-dd056dd6.js";const r={},u=n("h1",{id:"logical-operators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#logical-operators","aria-hidden":"true"},"#"),s(" Logical Operators")],-1),i={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"boolean",-1),d=n("code",null,"boolean",-1),m=l(`<p>There are three logical operators: AND (<code>&amp;&amp;</code>), OR (<code>||</code>), and NOT (<code>!</code>).</p><h2 id="the-and-operator" tabindex="-1"><a class="header-anchor" href="#the-and-operator" aria-hidden="true">#</a> The AND Operator</h2><p>When using boolean values with the AND (<code>&amp;&amp;</code>) operator, the value <code>true</code> will be returned if both values are <code>true</code> and the value <code>false</code> will be returned if at least one value is <code>false</code>. For non-boolean values, if the first value is <code>truthy</code> than the second value will be returned, else the first value will be returned.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">true</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Cat&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Cat&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">false</span><span class="token punctuation">)</span>   <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Cat&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;Dog&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// &#39;Dog&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">true</span><span class="token punctuation">)</span>       <span class="token comment">// &#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-or-operator" tabindex="-1"><a class="header-anchor" href="#the-or-operator" aria-hidden="true">#</a> The OR Operator</h2><p>When using boolean values with the OR (<code>||</code>) operator, the value <code>true</code> will be returned if at least one value is <code>true</code> and the value <code>false</code> will be returned if both values are <code>false</code>. For non-boolean values, if the first value is <code>truthy</code> than the first value will be returned, else the second value will be returned.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">||</span> <span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span>   <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">||</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>   <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Cat&#39;</span> <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token comment">// &#39;Cat&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Cat&#39;</span> <span class="token operator">||</span> <span class="token string">&#39;Dog&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// &#39;Cat&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">||</span> <span class="token string">&#39;Dog&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// &#39;Dog&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span> <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">)</span>       <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="the-not-operator" tabindex="-1"><a class="header-anchor" href="#the-not-operator" aria-hidden="true">#</a> The NOT Operator</h2><p>The NOT (<code>!</code>) operator will return <code>false</code> if the following expression is <code>truthy</code>. Otherwise, it will return <code>true</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">false</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span>     <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>        <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),v={class:"footer"},b=n("h4",null,"Additional Resources",-1),h={href:"https://www.youtube.com/watch?v=OLXyquuM05Q",target:"_blank",rel:"noopener noreferrer"};function f(g,_){const a=t("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[n("a",i,[s("Logical operators"),e(a)]),s(" are used alter or combine expression together to create a complex condition. While logical operators are typically used "),k,s(" values, in which they will return a "),d,s(" value, they can be used with non-Boolean value.")]),m,n("footer",v,[b,n("ul",null,[n("li",null,[n("a",h,[s("Logical Operators AND and OR with Compound if statements"),e(a)])])])])])}const O=o(r,[["render",f],["__file","logical-operators.html.vue"]]);export{O as default};
