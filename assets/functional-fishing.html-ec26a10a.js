import{_ as i,M as n,p as o,q as r,R as e,t as h,N as s,a3 as t}from"./framework-dd056dd6.js";const d={},l=t('<h1 id="function-fishing" tabindex="-1"><a class="header-anchor" href="#function-fishing" aria-hidden="true">#</a> Function Fishing</h1><h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>For this assignment, you will be demonstrating your understanding of using functions, conditional statements, HTTP variables, and PHP includes by creating a simple interactive fishing game.</p><h2 id="game-play" tabindex="-1"><a class="header-anchor" href="#game-play" aria-hidden="true">#</a> Game Play</h2><p>The player will perform actions by typing in the commands into the form text box. The response for each command will be displayed in the response box. The old responses will remain on the page even as new ones come in.</p><p>Each action may have certain conditions that must be met for the task to be performed. When a condition is not correct, the game must inform the player what they should do to perform the desired task. After an action has been performed, a status message should be present to the player to explain what happened.</p><h3 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h3><h4 id="fishing" tabindex="-1"><a class="header-anchor" href="#fishing" aria-hidden="true">#</a> Fishing</h4><p>When the player goes fishing, they have a <em>chance</em> of catching a fish. But the player may only go fishing if:</p><ul><li>The player has at least 1 piece of bait</li><li>The fire has been stopped</li></ul><h4 id="starting-stopping-a-fire" tabindex="-1"><a class="header-anchor" href="#starting-stopping-a-fire" aria-hidden="true">#</a> Starting / Stopping a fire</h4><p>The player can start or stop a fire. The player will start the fire only if:</p><ul><li>The fire has been stopped</li><li>The player has at least 1 piece of wood</li></ul><p>The player will stop the fire only if:</p><ul><li>The fire has been started</li></ul><h4 id="searching-for-bait" tabindex="-1"><a class="header-anchor" href="#searching-for-bait" aria-hidden="true">#</a> Searching for bait</h4><p>The player can search for bait, which will increase the player&#39;s bait inventory <strong>by one</strong>. The player can go searching for bait if:</p><ul><li>The fire has been stopped</li></ul><h4 id="searching-for-wood" tabindex="-1"><a class="header-anchor" href="#searching-for-wood" aria-hidden="true">#</a> Searching for wood</h4><p>The player can search for wood, which will increase the player&#39;s wood inventory <strong>by one</strong>. The player can go searching for wood if:</p><ul><li>The fire has been stopped</li></ul><h4 id="eating" tabindex="-1"><a class="header-anchor" href="#eating" aria-hidden="true">#</a> Eating</h4><p>The player can eat fish. Each fish will decrease the player&#39;s fish inventory <strong>by one</strong>. The player can only eat if:</p><ul><li>The fire has been started</li><li>The player has at least 1 fish</li></ul><h4 id="checking-inventory" tabindex="-1"><a class="header-anchor" href="#checking-inventory" aria-hidden="true">#</a> Checking inventory</h4><p>The player can do a check on the inventory status. The inventory status should return a list of how many items the player currently has.</p><h4 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> Help</h4><p>The player can display the instructions on how to play the game.</p><h4 id="restarting-the-game" tabindex="-1"><a class="header-anchor" href="#restarting-the-game" aria-hidden="true">#</a> Restarting the Game</h4><p>The player can clear the current game data by restarting the game. All inventory should be set back to zero.</p><h3 id="game-data" tabindex="-1"><a class="header-anchor" href="#game-data" aria-hidden="true">#</a> Game Data</h3><p>The game data should be stored and retrieved from the session. Each time the player enters a command, the game data should be retrieved from and updated to the session.</p><h3 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> Commands</h3><p>The commands received by the player should be sent using the POST method.</p><h2 id="project-setup" tabindex="-1"><a class="header-anchor" href="#project-setup" aria-hidden="true">#</a> Project Setup</h2><h3 id="_1-clone-the-repository" tabindex="-1"><a class="header-anchor" href="#_1-clone-the-repository" aria-hidden="true">#</a> 1. Clone the Repository</h3><p>Clone this repository from GitHub and use the provided file to complete the assignment. <strong>Warning: The provided file will throw an error if run as is. The error will be fixed after step 3 is completed.</strong></p><h3 id="_2-include-functional-fishing-php" tabindex="-1"><a class="header-anchor" href="#_2-include-functional-fishing-php" aria-hidden="true">#</a> 2. Include <code>functional-fishing.php</code></h3><p>Include <code>functional-fishing.php</code> inside <code>index.php</code>.</p><h3 id="_3-create-game-data-in-session" tabindex="-1"><a class="header-anchor" href="#_3-create-game-data-in-session" aria-hidden="true">#</a> 3. Create Game Data in Session</h3><ol><li>In <code>functional-fishing.php</code>, start a new session</li><li>In <code>functional-fishing.php</code>, create the <code>createGameData()</code> function. The function will create a game data array and store it in session and store it in session under the index <code>functional_fishing</code>. The game data array should contain the following: <ol><li>The <code>response</code> array</li><li>The number of <code>fish</code></li><li>The number of <code>wood</code></li><li>The number of <code>bait</code></li><li>The status of <code>fire</code></li></ol></li></ol><h3 id="_4-send-commands-using-the-post-method" tabindex="-1"><a class="header-anchor" href="#_4-send-commands-using-the-post-method" aria-hidden="true">#</a> 4. Send commands using the POST Method</h3><p>In <code>index.php</code>, update the form to submit using the <code>POST</code> method.</p><h3 id="_5-check-for-the-post-array" tabindex="-1"><a class="header-anchor" href="#_5-check-for-the-post-array" aria-hidden="true">#</a> 5. Check for the <code>$_POST</code> array</h3><p>In <code>functional-fishing.php</code>, check for the <code>$_POST</code> array for a player&#39;s command.</p><ol><li>If a player has entered a command, check If the command matches an existing function (HINT: Use <code>function_exists()</code>). <ol><li>If so, execute the function and pass the results to the <code>updateResponse()</code> function.</li><li>If not, then add a response to the response array in session, using <code>updateResponse()</code>, telling the user that the command is not valid.</li></ol></li></ol><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>The following requirement must be met to complete the assignment successfully:</p><div class="custom-container danger"><p class="custom-container-title">Warning</p><p>The web application must be functional and without errors. A non-functional game due to syntax errors or missing functionality will <strong>result in a failing grade</strong>.</p></div><ol><li>Create the <code>fish()</code> function will give the player a chance to catch fish. Each call to the <code>fish()</code> function will use <strong>one</strong> piece of bait and randomly determine if a fish has been caught. The requirements for fishing are as follows: <ol><li>The fire must not be going</li><li>The player must have at least 1 piece of bait</li></ol></li><li>Create the <code>eat()</code> function will allow the player to eat a fish. Each call to the <code>eat()</code> function will use <strong>one</strong> fish. The requirements for eating are as follows: <ol><li>The fire must be going</li><li>The player must have at least 1 fish</li></ol></li><li>Create the <code>fire()</code> function will allow the player to start or stop the fire and should have the following requirements: <ol><li>If the <code>fire()</code> function is called when the fire is going, it should be turned off the fire.</li><li>If the <code>fire()</code> function is called when the fire is NOT going AND the player has at least 1 piece of wood, the fire should be turned on.</li></ol></li><li>Create the <code>bait()</code> function will allow the player to search for bait as long as the fire is not going.</li><li>Create the <code>wood()</code> function will allow the player to search for wood as long as the fire is not going.</li><li>Create the <code>inventory()</code> function will display the player&#39;s current inventory. It should list the amount of fish, bait, wood the player has, and if the fire is going.</li><li>Create the <code>restart()</code> function will allow the player to clear the current game data and restart the game.</li></ol><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>A completed version of the assignment can be found at the following:</p>',52),c={href:"https://mtm6405-functional-fishing.herokuapp.com",target:"_blank",rel:"noopener noreferrer"},f=t('<h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><table><thead><tr><th>Criteria</th><th style="text-align:center;">Pts</th></tr></thead><tbody><tr><td>Create a <code>fish()</code> function that meets all project requirements.</td><td style="text-align:center;">3</td></tr><tr><td>Create a <code>eat()</code> function that meets all project requirements.</td><td style="text-align:center;">3</td></tr><tr><td>Create a <code>fire()</code> function that meets all project requirements.</td><td style="text-align:center;">3</td></tr><tr><td>Create a <code>bait()</code> function that meets all project requirements.</td><td style="text-align:center;">3</td></tr><tr><td>Create a <code>wood()</code> function that meets all project requirements.</td><td style="text-align:center;">3</td></tr><tr><td>Create an <code>inventory()</code> function that meets all project requirements.</td><td style="text-align:center;">3</td></tr><tr><td>Create a <code>restart()</code> function that meets all project requirements.</td><td style="text-align:center;">2</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>20</strong></td></tr></tbody></table>',2);function p(u,g){const a=n("ExternalLinkIcon");return o(),r("div",null,[l,e("p",null,[e("a",c,[h("https://mtm6405-functional-fishing.herokuapp.com"),s(a)])]),f])}const y=i(d,[["render",p],["__file","functional-fishing.html.vue"]]);export{y as default};
