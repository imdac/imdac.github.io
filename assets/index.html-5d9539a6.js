import{_ as e,p as a,q as t,a3 as n}from"./framework-dd056dd6.js";const r="/images/php-process.png",i={},o=n('<h1 id="introduction-to-php" tabindex="-1"><a class="header-anchor" href="#introduction-to-php" aria-hidden="true">#</a> Introduction to PHP</h1><h2 id="what-is-php" tabindex="-1"><a class="header-anchor" href="#what-is-php" aria-hidden="true">#</a> What is PHP?</h2><p>PHP stands for PHP: HTML Preprocessor. It is a general-purpose scripting language designed for web development. PHP is also commonly embedded within HTML and can be written within and around your HTML code. Like JavaScript, PHP is also a scripting language, meaning that it does not need to be compiled and it will only do something after an event occurs - for example, a user visits your site.</p><p>PHP is a server-side language. This means that all PHP code is interpreted and run on the webserver and not in the browser or client.</p><p>PHP is cross-platform, meaning that it can be used on web servers running on Unix, Windows, macOS, and other operating systems. It can also be moved from one platform to another with few or no modifications.</p><h2 id="what-php-is-not" tabindex="-1"><a class="header-anchor" href="#what-php-is-not" aria-hidden="true">#</a> What PHP is Not?</h2><p>PHP is not a client-side technology. You cannot run a PHP file directly in the browser without the addition of a webserver. Unlike JavaScript, which IS a client-side language, PHP cannot create new browser windows, make a pop-up dialog box, or directly respond to user action like scrolling through a page or typing in a text box. PHP can be used to create HTML or JavaScript, but once that information has been received by the browser, PHP can no longer make any changes to the page or content.</p><h2 id="why-use-php" tabindex="-1"><a class="header-anchor" href="#why-use-php" aria-hidden="true">#</a> Why use PHP?</h2><p>With PHP, you can create more exciting and dynamic pages than would be possible with HTML alone, like interacting with databases and files, handling emails, and creating sophisticated templates. And because PHP is an HTML preprocessor, once PHP has been interpreted the webserver will only send HTML, CSS, and JavaScript to the browser.</p><p>Creating enticing and lasting websites cannot be done with HTML alone. Server-side technologies, like PHP, allow developers to create web applications that are dynamically generated that are often database-driven and can be updated and maintained easier and faster than static HTML pages.</p><p>There are other server-side technologies other than PHP, such as ASP.net, Java, Ruby, and Node.js. While these alternatives are very capable there are several reasons to learn PHP over these other languages:</p><ul><li>PHP is easier to learn and use</li><li>PHP was written specifically for web page creation</li><li>PHP is free and cross-platform</li><li>PHP is the most popular tool for developing dynamic websites</li></ul><h2 id="how-does-php-work" tabindex="-1"><a class="header-anchor" href="#how-does-php-work" aria-hidden="true">#</a> How does PHP work?</h2><p>PHP files reside on a web server that will serve up web pages to a browser. When you go to a website, your browser is directed to the web server that holds that website files. If the server sees that a PHP file was requested (PHP files end with .php instead of .html), then the server will request the PHP server to read the PHP code and process it according to its scripted directions. When the PHP server completes its interpretation of the PHP file, it sends back the web page data in the form of HTML. In other words, PHP creates HTML pages on the fly and the server sends that HTML code, and only the HTML code, to the browser.</p><p><img src="'+r+'" alt="A diagram of the PHP Process"></p>',15),s=[o];function h(d,c){return a(),t("div",null,s)}const p=e(i,[["render",h],["__file","index.html.vue"]]);export{p as default};
