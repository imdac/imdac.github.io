import{_ as c,M as n,p as d,q as h,R as e,t,N as o,V as p,a3 as r}from"./framework-dd056dd6.js";const a="/images/charizard.svg",i="/images/fall-retriver.jpeg",m={},u=e("h1",{id:"image-optimization",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#image-optimization","aria-hidden":"true"},"#"),t(" Image Optimization")],-1),f={href:"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/image-optimization",target:"_blank",rel:"noopener noreferrer"},g=r('<p>Images often account for most of the downloaded bytes on a web page and also often occupy a significant amount of visual space.</p><p>Image optimization is the process of eliminating, replacing or decreasing the size of an image while still maintaining acceptable quality and visual effect of the site.</p><h2 id="eliminating-and-replacing-images" tabindex="-1"><a class="header-anchor" href="#eliminating-and-replacing-images" aria-hidden="true">#</a> Eliminating and Replacing Images</h2><p>In some situations, it is possible to eliminate an image or replace it by using a combination of HTML, CSS, and JavaScript. Some techniques include using CSS effects (gradients and shadows), web animations and web fonts in place of images.</p><p>So it is important to ask yourself if each image is truly required or if it can be replaced using an existing web technology.</p><h2 id="vector-vs-raster-images" tabindex="-1"><a class="header-anchor" href="#vector-vs-raster-images" aria-hidden="true">#</a> Vector vs. Raster Images</h2><p>A <strong>vector graphic</strong>, like a Scalable Vector Graphics (SVG), is created using lines, points and polygons to represent an image. Vector formats are ideally suited for images that consist of simple geometric shapes (for example, logos, text, and icons).</p><p>They are also resolution-independent, which means they can be scaled without any lose of quality, which makes them an ideal format for the high-resolution screens and assets that need to be displayed at varying sizes.</p><p>Vectors do not work well with complex images like a photo of a landscape, etc.</p><div style="display:grid;grid-template-columns:1fr 2fr 4fr;align-items:center;"><img src="'+a+'"><img src="'+a+'"><img src="'+a+'"></div><p>A <strong>raster graphic</strong> is a series of pixels placed in a rectangular grid. Common raster image formats include GIF, PNG, JPEG, and WebP.</p><p>Raster images are not resolution independent and will lose quality as the image is scaled up or zoomed.</p><p>Raster images work best used with complex images like photos.</p><div style="display:grid;grid-template-columns:1fr 2fr 4fr;align-items:center;"><img src="'+i+'" style="width:100%;"><img src="'+i+'" style="width:100%;"><img src="'+i+'" style="width:100%;"></div><small>Photo by <a href="https://unsplash.com/@joshhild?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Josh Hild</a> on <a href="https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></small><h3 id="optimizing-vector-images" tabindex="-1"><a class="header-anchor" href="#optimizing-vector-images" aria-hidden="true">#</a> Optimizing Vector Images</h3><p>The most widely supported and used vector format is Scalable Vector Graphics (SVG), which is an XML-based image format for two-dimensional graphics: we can embed the SVG markup directly on the page, or as an external resource.</p><p>While it is also possible to create a SVG by writing code using a text editor, most vector-based drawing software, like Adobe Illustrator, will also import and export to SVG.</p>',18),b={href:"https://vecta.io/nano",target:"_blank",rel:"noopener noreferrer"},_=e("h3",{id:"optimizing-raster-images",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#optimizing-raster-images","aria-hidden":"true"},"#"),t(" Optimizing Raster Images")],-1),y=e("p",null,"Because a raster image is a 2-dimensional grid of individual pixels, the more pixels an image contains, the larger the file size will be. So the first step to optimizing a raster image is to choose correct resolution.",-1),w=e("h2",{id:"high-resolution-screens",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#high-resolution-screens","aria-hidden":"true"},"#"),t(" High Resolution Screens")],-1),v=r('<p>When we talk about image pixels, we need to distinguish between different kinds of pixels: <em>CSS pixels</em> and <em>device pixels</em>.</p><p>A single CSS pixel may contain multiple device pixels - for example, a single CSS pixel may correspond directly to a single device pixel, or may be backed by multiple device pixels. This can pose a problem for raster images as the resolution of the image will need to increase to maintain the quality, thus increasing the overall size.</p><p>For example, a screen that has a 2x screen resolution will require an image that is 2 times the size of the image on standard screen for the same space and , a 3x screen resolution, 39 times the standard image size.</p><p>Put another way, an image that is 100px by 100px will need to be 300px by 300px to appear at the same quality on a 3x resolution screen for the same 100px by 100px area.</p><h2 id="lossless-vs-lossy-image-compression" tabindex="-1"><a class="header-anchor" href="#lossless-vs-lossy-image-compression" aria-hidden="true">#</a> Lossless vs Lossy Image Compression</h2><p>For certain types of data, such as source code for a page, or an executable file, it is critical that a compressor does not alter or lose any of the original information: a single missing or wrong bit of data could completely change the meaning of the contents of the file, or worse, break it entirely.</p><p>For some other types of data, such as images, audio, and video, it may be perfectly acceptable to deliver an &quot;approximate&quot; representation of the original data.</p><p>In fact, due to how the eye works, we can often get away with discarding some information about each pixel in order to reduce the file-size of an image. For example, our eyes have different sensitivity to different colors, which means that we can use fewer bits to encode some colors.</p><p>As a result, a typical image optimization pipeline consists of two high level steps:</p><ol><li>Image is processed with a &quot;<strong>lossy</strong>&quot; filter that <strong>eliminates</strong> some pixel data</li><li>Image is processed with a &quot;<strong>lossless</strong>&quot; filter that <strong>compresses</strong> the pixel data</li></ol><p>The first step is optional, and the exact algorithm will depend on the particular image format, but it is important to understand that any image can undergo a lossy compression step to reduce its size.</p><p>In fact, the difference between various image formats, such as GIF, PNG, JPEG, and others, is in the combination of the specific algorithms they use (or omit) when applying the lossy and lossless steps.</p><h2 id="raster-image-formats" tabindex="-1"><a class="header-anchor" href="#raster-image-formats" aria-hidden="true">#</a> Raster Image Formats</h2><p>In addition to different lossy and lossless compression algorithms, different image formats support different features such as animation and transparency (alpha) channels. As a result, the choice of the &quot;right format&quot; for a particular image is a combination of desired visual results and functional requirements.</p>',14),x=e("thead",null,[e("tr",null,[e("th",null,"Abbreviation"),e("th",null,"Format"),e("th",null,"File extension(s)"),e("th",null,"Summary"),e("th",null,"Support")])],-1),G=e("td",null,"APNG",-1),I=e("td",null,"Animated Portable Network Graphics",-1),P=e("td",null,".apng",-1),S=e("td",null,[t("Good choice for lossless animation sequences (GIF is less performant). "),e("br"),e("br"),t("AVIF and WebP have better performance but less broad browser support.")],-1),k={href:"https://caniuse.com/?search=apng",target:"_blank",rel:"noopener noreferrer"},z=e("td",null,"AVIF",-1),F=e("td",null,"AV1 Image File Format",-1),V=e("td",null,".avif",-1),q=e("td",null,[t("Good choice for both static images and animated images due to high performance and royalty free image format. "),e("br"),e("br"),t("It offers much better compression than PNG or JPEG with support for higher color depths, animated frames, transparency etc. "),e("br"),e("br"),t("Note that when using AVIF, you should include fallbacks to formats with better browser support (i.e. using the "),e("code",null,"<picture>"),t(" element).")],-1),E={href:"https://caniuse.com/?search=avif",target:"_blank",rel:"noopener noreferrer"},N=e("td",null,"GIF",-1),A=e("td",null,"Graphics Interchange Format",-1),C=e("td",null,".gif",-1),J=e("td",null,[t("Good choice for simple images and animations. "),e("br"),e("br"),t("Better alternative is PNG for lossless and indexed still images, and consider WebP, AVIF or APNG for animation sequences.")],-1),W={href:"https://caniuse.com/?search=gif",target:"_blank",rel:"noopener noreferrer"},R=e("td",null,"JPEG",-1),T=e("td",null,"Joint Photographic Expert Group image",-1),O=e("td",null,".jpg, .jpeg, .jfif, .pjpeg, .pjp",-1),j=e("td",null,[t("Good choice for lossy compression of still images (currently the most popular). "),e("br"),e("br"),t("Consider PNG when more precise reproduction of the image is required, or WebP/AVIF if both better reproduction and higher compression are required.")],-1),L={href:"https://caniuse.com/?search=jpeg",target:"_blank",rel:"noopener noreferrer"},B=e("td",null,"PNG",-1),M=e("td",null,"Portable Network Graphics",-1),U=e("td",null,".png",-1),H=e("td",null,[t("PNG is preferred over JPEG for more precise reproduction of source images, or when transparency is needed "),e("br"),e("br"),t("WebP/AVIF provide even better compression and reproduction, but browser support is more limited.")],-1),D={href:"https://caniuse.com/?search=png",target:"_blank",rel:"noopener noreferrer"},X=e("td",null,"SVG",-1),K=e("td",null,"Scalable Vector Graphics",-1),Q=e("td",null,".svg",-1),Y=e("td",null,"Vector image format; ideal for user interface elements, icons, diagrams, etc., that must be drawn accurately at different sizes.",-1),Z={href:"https://caniuse.com/?search=svg",target:"_blank",rel:"noopener noreferrer"},$=e("td",null,"WebP",-1),ee=e("td",null,"Web Picture format",-1),te=e("td",null,".webp",-1),oe=e("td",null,[t("Excellent choice for both images and animated images. "),e("br"),e("br"),t("WebP offers much better compression than PNG or JPEG with support for higher color depths, animated frames, transparency etc. "),e("br"),e("br"),t("AVIF offers slightly better compression, but is not quite as well-supported in browsers and does not support progressive rendering.")],-1),se={href:"https://caniuse.com/?search=webp",target:"_blank",rel:"noopener noreferrer"},ae={href:"https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types",target:"_blank",rel:"noopener noreferrer"},ie=e("td",null,null,-1),re=e("td",null,null,-1),ne=e("td",null,null,-1),le=e("td",null,null,-1),ce=r("<p>There are three universally supported and most commonly used image formats: GIF, PNG, and JPEG. In addition to these formats, some browsers also support newer formats such as WebP and JPEG XR, which offer better overall compression and more features.</p><p><em>So, which format should you use?</em></p><p><strong>Do you need animation? If so, GIF is a good universal choice.</strong></p><p>GIF limits the color palette to at most 256 colors, which makes it a poor choice for most images. Further, PNG-8 delivers better compression for images with a small palette. As a result, GIF is the right answer only when animation is required.</p><p><strong>Do you need to preserve fine detail with highest resolution? Use PNG.</strong></p><p>PNG does not apply any lossy compression algorithms beyond the choice of the size of the color palette. As a result, it will produce the highest quality image, but at a cost of significantly higher file-size than other formats. Use judiciously.</p><p>If the image asset contains imagery composed of geometric shapes, consider converting it to a vector (SVG) format!</p><p>If the image asset contains text, stop and reconsider. Text in images is not selectable, searchable, or &quot;zoomable&quot;. If you need to convey a custom look (for branding or other reasons), use a web font instead.</p><p><strong>Are you optimizing a photo, screenshot, or a similar image asset? Use JPEG.</strong></p><p>JPEG uses a combination of lossy and lossless optimization to reduce file-size of the image asset. Try several JPEG quality levels to find the best quality vs. file-size tradeoff for your asset.</p><p>Finally, once you&#39;ve determined the optimal image format and its settings for each of your assets, consider adding an additional variant encoded in WebP and JPEG XR. Both of these formats are new, and unfortunately are not (yet) universally supported by all browsers, but they can nonetheless provide significant savings for newer clients - for example, on average, WebP delivers a 30% file-size decrease over a comparable JPEG image.</p>",11);function de(he,pe){const s=n("ExternalLinkIcon"),l=n("RouterLink");return d(),h("div",null,[u,e("p",null,[e("small",null,[e("em",null,[t("This page contains excerpts from the "),e("a",f,[t("Image Optimization"),o(s)]),t(" article on Google Developers web site.")])])]),g,e("p",null,[t("When exporting an SVG from one of these applications, the SVG can contain a lot of unnecessary metadata. So, it is always a good idea to minify your SVG files by selecting the Minify option or using an external minifier, like "),e("a",b,[t("Nano"),o(s)]),t(".")]),_,y,w,e("p",null,[t("In the world of the high-resolution screens of various sizes it can be difficult to know what the correct resolution of an image should be, and often there will not be only one answer. This is where "),o(l,{to:"/modules/html/responsive-images/"},{default:p(()=>[t("Responsive Images")]),_:1}),t(" come in. But before any of that, it is important to understand how High-Resolution screens affect pixels.")]),v,e("table",null,[x,e("tbody",null,[e("tr",null,[G,I,P,S,e("td",null,[e("a",k,[t("Chrome, Edge, Firefox, Opera, Safari "),o(s)])])]),e("tr",null,[z,F,V,q,e("td",null,[e("a",E,[t("Chrome, Opera, Firefox (still images only: animated images not implemented)"),o(s)])])]),e("tr",null,[N,A,C,J,e("td",null,[e("a",W,[t("Chrome, Edge, Firefox, IE, Opera, Safari "),o(s)])])]),e("tr",null,[R,T,O,j,e("td",null,[e("a",L,[t("Chrome, Edge, Firefox, IE, Opera, Safari "),o(s)])])]),e("tr",null,[B,M,U,H,e("td",null,[e("a",D,[t("Chrome, Edge, Firefox, IE, Opera, Safari"),o(s)])])]),e("tr",null,[X,K,Q,Y,e("td",null,[e("a",Z,[t("Chrome, Edge, Firefox, IE, Opera, Safari"),o(s)])])]),e("tr",null,[$,ee,te,oe,e("td",null,[e("a",se,[t("Chrome, Edge, Firefox, Opera, Safari"),o(s)])])]),e("tr",null,[e("td",null,[e("small",null,[t("Table from "),e("a",ae,[t("Image file type and format guide"),o(s)])])]),ie,re,ne,le])])]),ce])}const ue=c(m,[["render",de],["__file","index.html.vue"]]);export{ue as default};
