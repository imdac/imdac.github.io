import{_ as r,M as n,p as i,q as l,R as e,t as s,N as t,a3 as o}from"./framework-dd056dd6.js";const c={},d=o(`<h1 id="custom-properties" tabindex="-1"><a class="header-anchor" href="#custom-properties" aria-hidden="true">#</a> Custom Properties</h1><p>Custom properties (also referred to as CSS variables) contain values that are referenced in other declarations through the use of the <code>var()</code> function.</p><p>Websites often have large amounts of repeated values whether a breakpoint value, or style values for a theme. Custom properties offer authors the ability to declare values once and reuse multiple times. This reduces mistakes and increases quality while greatly reducing the maintenance burden of updating multiple declarations when editing is required.</p><p>General attributes of a custom property include:</p><ul><li>Custom properties are scoped to the elements they are declared on and are subject to cascade and inheritance</li><li>All custom properties begin with two dashes <code>--</code> and are case sensitive</li><li>If a custom property is declared multiple times standard conflict resolution rules apply</li></ul><h2 id="define-a-custom-property" tabindex="-1"><a class="header-anchor" href="#define-a-custom-property" aria-hidden="true">#</a> Define a Custom Property</h2><p>We define a custom property as follows:</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">:root</span> <span class="token punctuation">{</span>
  <span class="token property">—-body-copy-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We scope the <code>—body-copy-color</code> custom property to the <code>:root</code> pseudo-element to make it available across most elements.</p><h2 id="use-a-custom-property" tabindex="-1"><a class="header-anchor" href="#use-a-custom-property" aria-hidden="true">#</a> Use a Custom Property</h2><p>To use a custom property, we call the <code>var()</code> function and pass in the custom property name. The function will return the value declared when we defined the custom property.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body p</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--body-copy-color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),p=e("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Custom Propertieas",src:"https://codepen.io/IMD/embed/bGrdpWy?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/IMD/pen/bGrdpWy">
  CSS Custom Propertieas</a> by IMD (<a href="https://codepen.io/IMD">@IMD</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),u=e("h2",{id:"further-review",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#further-review","aria-hidden":"true"},"#"),s(" Further Review")],-1),h=e("p",null,"Review the following material and be sure to download the lesson file.",-1),m={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties",target:"_blank",rel:"noopener noreferrer"},f={href:"https://medium.com/dev-channel/css-variables-no-really-76f8c91bd34e",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"see-also",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),s(" See Also")],-1),v={href:"https://css-tricks.com/a-complete-guide-to-custom-properties/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://css-tricks.com/breaking-css-custom-properties-out-of-root-might-be-a-good-idea/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://css-tricks.com/making-custom-properties-css-variables-dynamic/",target:"_blank",rel:"noopener noreferrer"},y=o('<h2 id="lesson-file" tabindex="-1"><a class="header-anchor" href="#lesson-file" aria-hidden="true">#</a> Lesson File</h2><p><a href="/docs/mtm6201/css-modularity.zip">CSS Best Practices Lesson File</a></p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>',3),S={href:"https://drafts.csswg.org/css-variables/#defining-variables",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:root",target:"_blank",rel:"noopener noreferrer"};function C(w,x){const a=n("ExternalLinkIcon");return i(),l("div",null,[d,p,u,h,e("ul",null,[e("li",null,[s("Read "),e("a",m,[s("Using CSS custom properties (variables) - CSS: Cascading Style Sheets | MDN"),t(a)])]),e("li",null,[s("Read "),e("a",f,[s("CSS Variables — No, really! - Dev Channel - Medium"),t(a)])])]),b,e("ul",null,[e("li",null,[e("a",v,[s("A Complete Guide to Custom Properties"),t(a)])]),e("li",null,[e("a",_,[s("Breaking CSS Custom Properties out of :root Might Be a Good Idea | CSS-Tricks"),t(a)])]),e("li",null,[e("a",g,[s("Making Custom Properties (CSS Variables) More Dynamic | CSS-Tricks"),t(a)])])]),y,e("ul",null,[e("li",null,[e("a",S,[s("CSS Custom Properties for Cascading Variables Module Level 1"),t(a)])]),e("li",null,[e("a",k,[s(":root - CSS: Cascading Style Sheets | MDN"),t(a)])])])])}const P=r(c,[["render",C],["__file","index.html.vue"]]);export{P as default};
