import{_ as o,M as i,p as r,q as l,R as e,t as n,N as t,a3 as s}from"./framework-dd056dd6.js";const p="/images/mamp-set-php.png",c="/images/mamp-set-ports.png",d="/images/mamp-display-errors.png",m="/images/php-version.png",h="/images/composer-version.png",g="/images/mamp-course-directory-1.png",u="/images/mamp-course-directory-2.png",v={},f=s('<h1 id="mamp-for-laravel" tabindex="-1"><a class="header-anchor" href="#mamp-for-laravel" aria-hidden="true">#</a> MAMP for Laravel</h1><p>The following instructions are for students are using MAMP instead of Valet for macOS.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The following instructions are for MAMP version 6.6. If you are using a different version, please talk to the professor.</p></div><div class="custom-container danger"><p class="custom-container-title">NOTE</p><p>Using MAMP is a direct replacement for using Valet. Students should NOT use MAMP and Valet at the same time.</p></div><h2 id="configuring-mamp" tabindex="-1"><a class="header-anchor" href="#configuring-mamp" aria-hidden="true">#</a> Configuring MAMP</h2>',5),b={href:"https://www.mamp.info/en/mamp/mac/",target:"_blank",rel:"noopener noreferrer"},w=s('<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If you computer is running macOS 10.11 or older, please talk to the professor.</p></div><p><strong>2. Set the MAMP PHP version to 8.0.8</strong></p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If the PHP version <strong>8.0.8</strong> is not available, please talk to the professor.</p></div><p><img src="'+p+'" alt="Setting PHP in MAMP"></p><p><strong>3. Set the MAMP Ports to the web and mysql defaults</strong></p><ol><li>From the MAMP application window, click the &quot;Preferences&quot; button.</li><li>Then select the &quot;Ports&quot; tab.</li><li>Then click the &quot;80 &amp; 3306&quot; button.</li><li>Finally, click &quot;OK&quot;.</li></ol><p><img src="'+c+`" alt="Setting ports in MAMP"></p><p><strong>4. Set MAMP to display errors</strong></p><ol><li>In the finder, navigate to <strong>Applications/MAMP/bin/php/php8.0.8/conf/</strong></li><li>Open the file <strong>php.ini</strong> in VS Code</li><li>Inside of VS Code, search for: <strong>display_errors</strong></li><li>Keep searching until you find the a line that look like this:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>display_errors = Off
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+d+`" alt="The php.ini file for MAMP"></p><ol start="5"><li>Change <strong>Off</strong> to <strong>On</strong></li><li>Save the file</li><li>Restart the MAMP Server</li></ol><h2 id="installing-composer" tabindex="-1"><a class="header-anchor" href="#installing-composer" aria-hidden="true">#</a> Installing Composer</h2><p><strong>1. Open a terminal window and run the following command</strong></p><p>If you are using <strong>zsh</strong> use the following</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=&quot;/Applications/MAMP/bin/php/php8.0.8/bin:$PATH&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you are using <strong>bash</strong> use the following</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=&quot;/Applications/MAMP/bin/php/php8.0.8/bin:$PATH&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. Close the Terminal window.</strong></p><p><strong>3. Open a new terminal window and run the following command</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+m+`" alt="The terminal showing the PHP Version"></p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If the command above returns a PHP version other than <strong>8.0.8</strong>, please talk to the professor.</p></div><p><strong>4. In the terminal window, run the following commands</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-sS</span> https://getcomposer.org/installer <span class="token operator">|</span> php
<span class="token function">mv</span> composer.phar /usr/local/bin/composer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. Close the Terminal window.</strong></p><p><strong>6. Open a new terminal window and run the following commend</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> <span class="token parameter variable">-V</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+h+`" alt="Terminal window showing Composer version"></p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If the command above does not return the composer version, please talk to the professor.</p></div><h2 id="using-mamp-for-php-development" tabindex="-1"><a class="header-anchor" href="#using-mamp-for-php-development" aria-hidden="true">#</a> Using MAMP for PHP Development</h2><p><strong>1. Create a course directory</strong></p><ol><li>Navigate to <strong>Applications/MAMP/htdocs</strong></li><li>Create a new folder called <strong>mtm6405</strong></li><li>Open folder in VS Code</li><li>Create a new file called <strong>index.php</strong></li><li>Add the following to the <strong>index.php</strong> file</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+g+'" alt="Creating a PHP file in course directory"></p>',35),_={start:"6"},M=e("li",null,"Save the file",-1),P={href:"http://localhost/mtm6405/",target:"_blank",rel:"noopener noreferrer"},k=s('<p><img src="'+u+'" alt="Viewing course directory in browser"></p><p><strong>2. Working on PHP assignments</strong> PHP assignments can be saved directly to the <strong>mtm6405</strong> directory created above. To access the projects in the browser, simple add the directory name to the URL used above.</p><p>For example, to access the project in the directory <em>system-report-eisenbm</em>, the following url will be used: <code>http://localhost/mtm6405/system-report-eisenbm/</code></p><h2 id="using-mamp-for-mysql-development" tabindex="-1"><a class="header-anchor" href="#using-mamp-for-mysql-development" aria-hidden="true">#</a> Using MAMP for MySQL Development</h2><p>MAMP comes with a version of phpMyAdmin. To access it, use the following url:</p>',5),A={href:"http://localhost/phpMyAdmin5/",target:"_blank",rel:"noopener noreferrer"},x=s(`<h2 id="using-mamp-for-laravel-development" tabindex="-1"><a class="header-anchor" href="#using-mamp-for-laravel-development" aria-hidden="true">#</a> Using MAMP for Laravel Development</h2><p>For this course, student will be provided with a repository containing the Laravel source files. The following instructions explain how to install the dependencies and start the Laravel development server.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The following steps should not be completed before the Laravel introduction.</p></div><p><strong>1. Open the Laravel project in VS Code.</strong></p><p><strong>2. Open a new VS Code terminal, run the following command</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>3. Rename <code>.env.example</code> file to <code>.env</code></strong></p><p><strong>4. In the VS Code terminal, run the following command</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan key:generate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>5. In the VS Code terminal, run the following command</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This will start the development serve, a URL will be provided to access the site in the browser.</p>`,12);function y(T,O){const a=i("ExternalLinkIcon");return r(),l("div",null,[f,e("p",null,[e("strong",null,[n("1. Download and install the "),e("a",b,[n("latest version of MAMP"),t(a)])])]),w,e("ol",_,[M,e("li",null,[n("In the browser, go to "),e("a",P,[n("http://localhost/mtm6405/"),t(a)]),n(".")])]),k,e("p",null,[e("a",A,[n("http://localhost/phpMyAdmin5/"),t(a)])]),x])}const C=o(v,[["render",y],["__file","mamp.html.vue"]]);export{C as default};
