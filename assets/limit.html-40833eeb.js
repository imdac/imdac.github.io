import{_ as c,M as s,p as i,q as r,N as n,R as e,t as a,a3 as l}from"./framework-dd056dd6.js";const d={},p=e("h1",{id:"the-limit-clause",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#the-limit-clause","aria-hidden":"true"},"#"),a(" The LIMIT Clause")],-1),u=l(`<p>Another way to limit the results returned from the database is use the <code>LIMIT</code> clause. For example, if we only want 5 rows to be returned. The <code>LIMIT</code> clause is followed by a number, which is the number of rows to be return OR in the case of the <code>UPDATE</code> or <code>DELETE</code> command the number of rows affected.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Getting the 5 most recent movies</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>movies<span class="token punctuation">\`</span></span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">\`</span>year<span class="token punctuation">\`</span></span> <span class="token keyword">DESC</span>
<span class="token keyword">LIMIT</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Pagination can be accomplished by inserting a second number after the <code>LIMIT</code> clause. This <code>offset</code> will be used to tell the database to start the <code>row count</code> a specified number of rows. For MySQL the syntax is <code>LIMIT offset, row count</code>. So, if we wanted to retrieve the third page of products it can be accomplished with the following:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Getting the 5 most recent movies after the 10th movie</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> 
<span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>movies<span class="token punctuation">\`</span></span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token identifier"><span class="token punctuation">\`</span>year<span class="token punctuation">\`</span></span> <span class="token keyword">DESC</span>
<span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Note</p><p>When using the <code>LIMIT</code> clause, it is important to use an <code>ORDER BY</code> clause to make sure that the rows in the returned are in a specified order.</p></div>`,5),m={class:"try"},h={href:"https://www.db-fiddle.com/f/i8xmchy54L1CpE2NzzVfCF/0",target:"_blank",rel:"noopener noreferrer"};function k(f,v){const t=s("Youtube"),o=s("ExternalLinkIcon");return i(),r("div",null,[p,n(t,{id:"aKWE_ftmKyg",citation:"griffith"}),u,e("div",m,[e("p",null,[e("a",h,[a("Try it yourself on DB Fiddle"),n(o)])])])])}const w=c(d,[["render",k],["__file","limit.html.vue"]]);export{w as default};
