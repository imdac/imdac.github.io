import{_ as r}from"./id-priority-6404304e.js";import{_ as o,M as n,p as i,q as a,R as e,t,N as l}from"./framework-dd056dd6.js";const c="/images/one-two-three.gif",d="/images/three-two-one.gif",h="/images/style-attribute.gif",_="/images/important.gif",p={},m=e("h1",{id:"css-order-of-importance-precedence",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#css-order-of-importance-precedence","aria-hidden":"true"},"#"),t(" CSS Order of Importance (Precedence)")],-1),u=e("p",null,"CSS has a variety of rules that define what styles override and triumph in the final render.",-1),f=e("p",null,[t("The first rule we'll see is the cascade, CSS is applied TOP -> DOWN. The last class read in the CSS will be the final rendered output. "),e("img",{src:c,alt:"CSS Cascade"})],-1),g={href:"https://www.smashingmagazine.com/2007/07/css-specificity-things-you-should-know/",target:"_blank",rel:"noopener noreferrer"},y=e("p",null,[e("img",{src:d,alt:"Order of values on HTML class attribute"})],-1),v=e("p",null,"Certain attributes however take priority over other attributes regardless of the order it appears in the CSS file.",-1),w=e("p",null,"For example: An id attribute will override any class attributes.",-1),b=e("p",null,[e("img",{src:r,alt:"id overriding the styles of the class"})],-1),S=e("p",null,"And an Inline style attribute on the HTML tag will override both a class and an id.",-1),C=e("p",null,[e("img",{src:h,alt:"Inline styling"})],-1),x=e("p",null,"And in rare cases if you absolutely need a style to stay consistent the !important declaration.",-1),k=e("p",null,[e("img",{src:_,alt:"Using the important keyword to override everything"})],-1);function T(I,N){const s=n("ExternalLinkIcon");return i(),a("div",null,[m,u,f,e("p",null,[t("This is true for whatever set of elements are not conflicted by other "),e("a",g,[t("sets of specificity"),l(s)]),t(" in the CSS. Classes have equal importance and it does not matter the order of the attributes on the paragraph element. Reversed (three two one) the last class in the css file is still the rendered output.")]),y,v,w,b,S,C,x,k])}const A=o(p,[["render",T],["__file","index.html.vue"]]);export{A as default};
