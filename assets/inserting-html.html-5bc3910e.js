import{_ as r,M as a,p as i,q as l,N as s,R as n,t as e,a3 as p}from"./framework-dd056dd6.js";const c={},u=n("h1",{id:"inserting-html-with-jquery",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#inserting-html-with-jquery","aria-hidden":"true"},"#"),e(" Inserting HTML with jQuery")],-1),d=n("p",null,"One of the core reasons for the JavaScript's existence, was the creation and insertion of new HTML elements. Now, how elements are inserted in the HTML generally depends on where they need to be inserted. But, there typically four locations: before the target element, after the target element, the first child of the target element, or the last child of the target element.",-1),h={href:"https://api.jquery.com/before/",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"before()",-1),k={href:"https://api.jquery.com/after/",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"after()",-1),f={href:"https://api.jquery.com/prepend/",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"prepend()",-1),v={href:"https://api.jquery.com/append/",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"append()",-1),y={class:"custom-container warning"},w=n("p",{class:"custom-container-title"},"NOTE",-1),T={href:"https://api.jquery.com/insertBefore/",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"insertBefore()",-1),q={href:"https://api.jquery.com/insertAfter/",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"insertAfter()",-1),L={href:"https://api.jquery.com/prependTo/",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"prependTo()",-1),B={href:"https://api.jquery.com/appendTo/",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"appendTo()",-1),E=p(`<p>Assume the following HTML element with the four locations marked with <em>one</em> (before element), <em>two</em> (first child), <em>three</em> (last child), <em>four</em> (after element).</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- one --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>original<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- two --&gt;</span>
  This is the original paragraph.
  <span class="token comment">&lt;!-- three --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- four --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, the jQuery can be used to insert new element in HTML at each of the four locations.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Before Element</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.original&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;One&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// After Element</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.original&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;Four&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// First Child</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.original&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;span&gt;Two&lt;/span&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// Last Child</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.original&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;span&gt;Three&lt;/span&gt;&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),H={class:"try"},A={href:"https://codepen.io/IMD/pen/OJJJOdw",target:"_blank",rel:"noopener noreferrer"};function O(C,I){const o=a("Youtube"),t=a("ExternalLinkIcon");return i(),l("div",null,[u,s(o,{id:"hctu-11hYpc",citation:"griffith"}),d,n("p",null,[e("The jQuery library provides these exact same option for use using the "),n("a",h,[m,s(t)]),e(", "),n("a",k,[_,s(t)]),e(", "),n("a",f,[g,s(t)]),e(", "),n("a",v,[b,s(t)]),e(" methods.")]),n("div",y,[w,n("p",null,[e("All of methods above, the target element precedes the method, which is the followed by the content or the new element. The jQuery library also has methods in which the content precedes the method. They are "),n("a",T,[j,s(t)]),e(", "),n("a",q,[x,s(t)]),e(", "),n("a",L,[N,s(t)]),e(", "),n("a",B,[M,s(t)]),e(".")])]),E,n("div",H,[n("p",null,[n("a",A,[e("Try it yourself on CodePen"),s(t)])])])])}const Q=r(c,[["render",O],["__file","inserting-html.html.vue"]]);export{Q as default};
