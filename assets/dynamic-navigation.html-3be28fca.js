import{_ as e,p as t,q as i,a3 as n}from"./framework-dd056dd6.js";const r={},a=n('<h1 id="dynamic-navigation" tabindex="-1"><a class="header-anchor" href="#dynamic-navigation" aria-hidden="true">#</a> Dynamic Navigation</h1><h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>Use your knowledge of JavaScript and problem solving skills to implement both a hamburger menu and scroll-triggered animations.</p><h2 id="app-overview" tabindex="-1"><a class="header-anchor" href="#app-overview" aria-hidden="true">#</a> App Overview</h2><p>This assignment presents a new challenge. With little in-class direction, you are required to search online documentation available online to discover how to implement two features.</p><p>First, you must combine your JavaScript skills with your knowledge of CSS in order to implement a hamburger menu. A fully responsive nav is not required.</p><p>You must also determine how to trigger a CSS transition when the user has scrolled some distance down the page.</p><p><em>Example: If the user scrolls down such that a div is now on screen, a CSS transition should cause some sort of animation on a CSS property.</em></p><p>To be clear, the original rules surrounding authorship and plagiarism still applyâ€”you may not follow a tutorial in order to complete these requirements. (It&#39;s very easy to tell when it happens.) Rely only on HTML, CSS, and JavaScript documentation when searching for answers.</p><p>Be sure to include all links to your online resources as comments in <strong>script.js</strong>.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>Your assignment must adhere to the following requirements:</p><ol><li>Submit your work in a Git repository named <strong>mtm6302-assignment-4</strong></li><li>The assignment should utilize one HTML (<strong>index.html</strong>), CSS (<strong>style.css</strong>), and JavaScript (<strong>script.js</strong>) file, each located at the root of the repository.</li><li>You may not use a modern CSS Framework like Bootstrap or Foundation, or any CSS or JavaScript Libraries. However, feel free to use a CSS reset (<strong>reset.css</strong>).</li><li>The web application should be responsive.</li><li>You may not use inline events. All DOM events must be handled using Event Listeners.</li><li>You may not declare variables with <code>var</code>. Use either <code>const</code> or <code>let</code>.</li><li>A hamburger button should allow the user to reveal and hide a nav.</li><li>The nav links should link to elements on the page (<strong>href=&#39;#id&#39;</strong>).</li><li>You must use JavaScript to determine when an element is visible in the viewport.</li><li>One or more CSS properties must animate using a <strong>transition</strong> when the associated element becomes visible in the viewport</li></ol><h2 id="hints" tabindex="-1"><a class="header-anchor" href="#hints" aria-hidden="true">#</a> Hints</h2><ol><li>CSS Smooth scrolling is a nice addition, but not required. Hint: CSS has a <strong>scroll-behavior</strong> property.</li></ol><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>Coming soon</p><h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><p>Submissions will be graded based on the following criteria:</p><table><thead><tr><th>Requirement</th><th style="text-align:center;">Marks</th></tr></thead><tbody><tr><td>Repository and files are named and structured correctly</td><td style="text-align:center;">1</td></tr><tr><td>A hamburger button toggles nav visibility</td><td style="text-align:center;">1.5</td></tr><tr><td>The web application determines when an element is visible in the viewport</td><td style="text-align:center;">2.5</td></tr><tr><td>A CSS transition is used to animate element display based on viewport visibility</td><td style="text-align:center;">1.5</td></tr><tr><td>The UI is responsive and well designed</td><td style="text-align:center;">1</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>7.5</strong></td></tr></tbody></table>',20),o=[a];function s(l,d){return t(),i("div",null,o)}const c=e(r,[["render",s],["__file","dynamic-navigation.html.vue"]]);export{c as default};
