import{_ as p,M as s,p as i,q as c,N as a,R as n,t as e,a3 as l}from"./framework-dd056dd6.js";const u={},r=n("h1",{id:"insert-statements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#insert-statements","aria-hidden":"true"},"#"),e(" INSERT Statements")],-1),d=l('<p>The <code>INSERT</code> statement is used to add new data to the database. It starts with the keywords <code>INSERT INTO</code> followed by the name of the table where you will be adding the record followed by a set of parentheses with the columns that you want to fill with information. The order of the columns is important.</p><p>Then comes the keyword <code>VALUES</code> and another set of parentheses. Inside the second set of parentheses comes the values that we are inserting. The values MUST be in the same order as the columns inside the first set of parentheses. Strings and dates get single quotes around them. Numbers do not need quotation marks.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Insert a record into the `movies` table</span>\n<span class="token keyword">INSERT</span> \n<span class="token keyword">INTO</span> movies <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>movie_title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>director<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>year<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>genre_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> \n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Pulp Fiction&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Quentin Tarantino&#39;</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Subqueries can also be used with the <code>INSERT</code> statement to retrieve data from another table.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Insert a record into the `movies` table using subqueries</span>\n<span class="token keyword">INSERT</span> \n<span class="token keyword">INTO</span> movies <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>movie_title<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>director<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>year<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>genre_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> \n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Reservoir Dogs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Quentin Tarantino&#39;</span><span class="token punctuation">,</span> <span class="token number">1992</span><span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>genre_id<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>genres<span class="token punctuation">`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>genre_title<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token string">&#39;Drama&#39;</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5),k={class:"try"},m={href:"https://www.db-fiddle.com/f/3wSz4fXaecU4gbrkQnG5da/2",target:"_blank",rel:"noopener noreferrer"};function h(v,f){const t=s("Youtube"),o=s("ExternalLinkIcon");return i(),c("div",null,[r,a(t,{id:"Zj6cERSIONg",citation:"griffith"}),d,n("div",k,[n("p",null,[n("a",m,[e("Try it yourself on DB Fiddle"),a(o)])])])])}const _=p(u,[["render",h],["__file","insert.html.vue"]]);export{_ as default};
