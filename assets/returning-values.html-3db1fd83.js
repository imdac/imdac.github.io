import{_ as t,M as o,p,q as c,R as n,t as a,N as e,a3 as l}from"./framework-dd056dd6.js";const i={},r=n("h1",{id:"php-functions-returning-values",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-functions-returning-values","aria-hidden":"true"},"#"),a(" PHP Functions: Returning Values")],-1),u={class:"watch"},d={href:"https://www.linkedin.com/learning/php-essential-training-2/return-values-from-a-function",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.php.net/manual/en/functions.returning-values.php",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"return",-1),h={href:"https://www.php.net/manual/en/function.return.php",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"return",-1),f=l(`<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>Best practice states that all customs should have a <code>return</code> statement. It is also a good idea, not use an <code>echo</code> statement inside a function.</p></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token keyword">function</span> <span class="token function-definition function">add</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$sum</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token variable">$result1</span> <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$result2</span> <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token variable">$result1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token variable">$result2</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
<span class="token delimiter important">?&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function _(b,g){const s=o("ExternalLinkIcon");return p(),c("div",null,[r,n("div",u,[n("p",null,[n("a",d,[a('Watch "Return values from a function" on LinkedIn Learning'),e(s)])])]),n("p",null,[n("a",k,[a("Returning values"),e(s)]),a(" from a function is a common and preferred practice. Values can be returned using a "),m,a(" statement.")]),n("p",null,[a("The "),n("a",h,[v,e(s)]),a(" statement immediately ends execution of the current function and returns its argument as the value of the function call.")]),f])}const $=t(i,[["render",_],["__file","returning-values.html.vue"]]);export{$ as default};
