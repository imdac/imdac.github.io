import{_ as c,M as e,p as i,q as l,N as a,R as n,t as s,a3 as o}from"./framework-dd056dd6.js";const r={},u=n("h1",{id:"ajax-with-jquery",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ajax-with-jquery","aria-hidden":"true"},"#"),s(" Ajax with jQuery")],-1),d=n("p",null,'At the heart of "Web 2.0" and the movement of creating website of the looked and behaved more like desktop application, was AJAX. Asynchronous JavaScript and XML (AJAX), was first widely used by Google, first in GMail (2004) and Google Maps (2005). But it was not until 2006, that W3C began creating the first XMLHttpRequest standard. Despite the release of a standard, browser continued to have inconsistencies, which made using this new technique cumbersome at best.',-1),k={class:"custom-container warning"},h=n("p",{class:"custom-container-title"},"NOTE",-1),m={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"Fetch API",-1),_=o(`<p>However, when jQuery was release, it included an easy to use, cross-browser AJAX abstraction layer. This AJAX abstraction layer was arguably the biggest reason for jQuery wide success. So, let&#39;s see it in action.</p><p>Assume we have the following HTML.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ajax<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>This will be replaced by an AJAX call.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),b={href:"https://api.jquery.com/jQuery.ajax/",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"ajax()",-1),g=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://jsonplaceholder.typicode.com/albums&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.ajax&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y={class:"try"},w={href:"https://codepen.io/IMD/pen/oNNNpNG",target:"_blank",rel:"noopener noreferrer"};function j(x,A){const p=e("Youtube"),t=e("ExternalLinkIcon");return i(),l("div",null,[u,a(p,{id:"QnnxLoHs5p8",citation:"griffith"}),d,n("div",k,[h,n("p",null,[s("As of 2017, the XMLHttpRequest object has been replaced with the "),n("a",m,[v,a(t)]),s(".")])]),_,n("p",null,[s("To make a AJAX call with jQuery, use the "),n("a",b,[f,a(t)]),s(" method.")]),g,n("div",y,[n("p",null,[n("a",w,[s("Try it yourself on CodePen"),a(t)])])])])}const q=c(r,[["render",j],["__file","ajax.html.vue"]]);export{q as default};
