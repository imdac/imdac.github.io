import{_ as o,M as n,p as c,q as p,N as s,R as a,t as i,a3 as r}from"./framework-dd056dd6.js";const l={},u=a("h1",{id:"destructuring-arrays",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#destructuring-arrays","aria-hidden":"true"},"#"),i(" Destructuring Arrays")],-1),d=r(`<h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><p>The destructuring array syntax is a shorthand for assigning array values to individual variables. When destructuring arrays, a set of square brackets (<code>[ ]</code>) will surround the variables.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> third<span class="token punctuation">]</span> <span class="token operator">=</span> colors
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span>   <span class="token comment">// &quot;red&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span> <span class="token comment">// &quot;green&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>third<span class="token punctuation">)</span>  <span class="token comment">// &quot;blue&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="default-values" tabindex="-1"><a class="header-anchor" href="#default-values" aria-hidden="true">#</a> Default Values</h2><p>When unpacking an array, variables can be assigned a default value in the event the array is <code>undefined</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>first <span class="token operator">=</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span> second <span class="token operator">=</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span> third <span class="token operator">=</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> colors
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span>   <span class="token comment">// &quot;red&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span> <span class="token comment">// &quot;green&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>third<span class="token punctuation">)</span>  <span class="token comment">// &quot;white&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,7);function k(v,h){const e=n("Scrimba"),t=n("Youtube");return c(),p("div",null,[u,s(e,{id:"/p/p4Mrt9/cKLJeHy",citation:"israel"}),d,s(t,{id:"ktBTYQXBAog",citation:"griffith"})])}const m=o(l,[["render",k],["__file","destructuring-arrays.html.vue"]]);export{m as default};
