import{_ as c,M as e,p,q as r,N as s,R as n,t as a,a3 as i}from"./framework-dd056dd6.js";const l="/images/left-join.png",d="/images/right-join.png",u={},k=n("h1",{id:"outer-joins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#outer-joins","aria-hidden":"true"},"#"),a(" Outer Joins")],-1),m=i('<p>The <code>LEFT JOIN</code> and the <code>RIGHT JOIN</code> are often referred to as &quot;Outer Joins&quot; because they will return records outside of the matched records from the other table.</p><p>The <code>LEFT JOIN</code> will return all the records from the left table (table 1), and the matched records from the right table (table 2).</p><p><img src="'+l+`" alt="Venn Diagram with the inner part colored representing an LEFT JOIN "></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Using LEFT JOIN to combine table b and c</span>
<span class="token keyword">SELECT</span> b<span class="token punctuation">.</span>name <span class="token keyword">as</span> bname<span class="token punctuation">,</span> c<span class="token punctuation">.</span>name <span class="token keyword">AS</span> cname<span class="token punctuation">,</span> c<span class="token punctuation">.</span>id<span class="token punctuation">,</span> b<span class="token punctuation">.</span>best_friend
<span class="token keyword">FROM</span> b <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> c
<span class="token keyword">ON</span> c<span class="token punctuation">.</span>id <span class="token operator">=</span> b<span class="token punctuation">.</span>best_friend<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>RIGHT JOIN</code> will return all the records from the right table (table 2), and the matched records from the left table (table 1).</p><p><img src="`+d+`" alt="Venn Diagram with the inner part colored representing an RIGHT JOIN "></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Using RIGHT JOIN to combine table b and c</span>
<span class="token keyword">SELECT</span> b<span class="token punctuation">.</span>name <span class="token keyword">as</span> bname<span class="token punctuation">,</span> c<span class="token punctuation">.</span>name <span class="token keyword">AS</span> cname<span class="token punctuation">,</span> c<span class="token punctuation">.</span>id<span class="token punctuation">,</span> b<span class="token punctuation">.</span>best_friend
<span class="token keyword">FROM</span> b <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> c
<span class="token keyword">ON</span> c<span class="token punctuation">.</span>id <span class="token operator">=</span> b<span class="token punctuation">.</span>best_friend<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),b={class:"try"},h={href:"https://www.db-fiddle.com/f/3pHDLasieuzrXPpQrpoVkJ/0",target:"_blank",rel:"noopener noreferrer"};function _(f,v){const t=e("Youtube"),o=e("ExternalLinkIcon");return p(),r("div",null,[k,s(t,{id:"RH6sxVlw0kA",citation:"griffith"}),m,n("div",b,[n("p",null,[n("a",h,[a("Try it yourself on DB Fiddle"),s(o)])])])])}const w=c(u,[["render",_],["__file","outer-joins.html.vue"]]);export{w as default};
