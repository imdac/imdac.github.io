import{_ as t,M as o,p,q as c,R as n,t as s,N as e,a3 as l}from"./framework-dd056dd6.js";const r={},i=n("h1",{id:"comparison-operators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#comparison-operators","aria-hidden":"true"},"#"),s(" Comparison Operators")],-1),u={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators",target:"_blank",rel:"noopener noreferrer"},k=l(`<h2 id="equality-operators" tabindex="-1"><a class="header-anchor" href="#equality-operators" aria-hidden="true">#</a> Equality Operators</h2><p>JavaScript has strict (<code>===</code>) and type-converting (<code>==</code>) equality operators. In the latter, JavaScript will automatic convert the operands to be of the same type, before comparing the values, thus ignoring the operands&#39; original data type. With strict comparison, the operands values and data types must both match in order for them to be equal.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>             <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>           <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span>          <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>         <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>  <span class="token comment">// true </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JavaScript also has strict (<code>!==</code>) and type-converting (<code>!=</code>) inequality operators.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>       <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!=</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>     <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!==</span> <span class="token number">2</span><span class="token punctuation">)</span>      <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!==</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">!=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>   <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>   <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>In almost all cases, it is best use the <strong>strict</strong> equality operators.</p></div><h2 id="relational-operators" tabindex="-1"><a class="header-anchor" href="#relational-operators" aria-hidden="true">#</a> Relational Operators</h2><p>Relational operators will compare the two operands in comparison with each other. These comparison include the greater than (<code>&gt;</code>), greater than or equal to (<code>&gt;=</code>), less than (<code>&lt;</code>), and less than or equal to (<code>&lt;=</code>) operators.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>Relational operators can be used with strings. String are compared based on their unicode values.</p></div><h3 id="greater-than" tabindex="-1"><a class="header-anchor" href="#greater-than" aria-hidden="true">#</a> Greater Than</h3><p>The greater than operator (<code>&gt;</code>) will return <code>true</code> if the left operand is greater than the right operand.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span>                <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;</span> <span class="token number">4</span><span class="token punctuation">)</span>                <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span>                <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;banana&#39;</span> <span class="token operator">&gt;</span> <span class="token string">&#39;apple&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Banana&#39;</span> <span class="token operator">&gt;</span> <span class="token string">&#39;apple&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// false</span>
<span class="token comment">// In unicode uppercase letters come before lowercase letters</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="greater-than-or-equal-to" tabindex="-1"><a class="header-anchor" href="#greater-than-or-equal-to" aria-hidden="true">#</a> Greater Than or Equal To</h3><p>The greater than or equal to operator (<code>&gt;=</code>) will return <code>true</code> if the left operand is greater than or equal to the right operand.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>     <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>     <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="less-than" tabindex="-1"><a class="header-anchor" href="#less-than" aria-hidden="true">#</a> Less Than</h3><p>The less than operator (<code>&lt;</code>) will return <code>true</code> if the left operand is less than the right operand.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span>              <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>              <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>              <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;apple&#39;</span> <span class="token operator">&lt;</span> <span class="token string">&#39;banana&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;apple&#39;</span> <span class="token operator">&lt;</span> <span class="token string">&#39;Banana&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
<span class="token comment">// In unicode uppercase letters come before lowercase letters</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="less-than-or-equal-to" tabindex="-1"><a class="header-anchor" href="#less-than-or-equal-to" aria-hidden="true">#</a> Less Than or Equal To</h3><p>The less than or equal to operator (<code>&lt;=</code>) will return <code>true</code> if the left operand is less than or equal to the right operand.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span>              <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>              <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>              <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),d={class:"footer"},m=n("h4",null,"Additional Resources",-1),v={href:"https://www.youtube.com/watch?v=g2-_PJVyJGk",target:"_blank",rel:"noopener noreferrer"},h={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators",target:"_blank",rel:"noopener noreferrer"};function b(g,f){const a=o("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[n("a",u,[s("Comparison operators"),e(a)]),s(" are used to compare the values two operands. Some comparison operators will also compare the operands' data types.")]),k,n("footer",d,[m,n("ul",null,[n("li",null,[n("a",v,[s("Difference Between == and === in JavaScript"),e(a)])]),n("li",null,[n("a",h,[s("Comparison operators"),e(a)])])])])])}const w=t(r,[["render",b],["__file","comparison-operators.html.vue"]]);export{w as default};
