import{_ as l,M as o,p as i,q as c,R as n,t as a,N as s,a3 as e}from"./framework-dd056dd6.js";const u={},r=e(`<h1 id="idea-forum" tabindex="-1"><a class="header-anchor" href="#idea-forum" aria-hidden="true">#</a> Idea Forum</h1><h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>You will design and develop a mock Idea Forum using HTML, CSS, and JavaScript. You will add the ability for the user to create, read, update, and delete ideas. Users will also be able to upvote or downvote ideas.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>Your assignment must adhere to the following requirements:</p><ol><li>Submit your work in a Git repository named <strong>mtm6302-project-1</strong></li><li>The assignment should utilize one HTML (<strong>index.html</strong>), CSS (<strong>style.css</strong>), and JavaScript (<strong>script.js</strong>) file, each located at the root of the repository.</li><li>The web application should be responsive.</li><li>The web application should not experience any page refreshes.</li><li>You may NOT use any JavaScript libraries to complete the web application.</li><li>You may NOT use inline events. All DOM events must be handled using Event Listeners.</li><li>You may NOT declare variables with <code>var</code>. Use either <code>const</code> or <code>let</code>.</li><li>You may use a modern CSS Framework like Bootstrap or Foundation, or a CSS reset (<strong>reset.css</strong>).</li><li>You may use other UI resources like Google Fonts and Font Awesome.</li><li>You must use the provided data. You may NOT change the data.</li><li>All ideas should be dynamically added to the page using JavaScript.</li><li>All ideas should include a <code>username</code>, <code>idea</code>, and <code>score</code>. Both <strong>upvote</strong> and <strong>downvote</strong> buttons should also be included.</li><li>All ideas created by the <code>currentUser</code> should include a <strong>you</strong> tag. They should also include a <strong>edit</strong> and <strong>delete</strong> buttton.</li><li>New ideas can be created with the <code>currentUser</code> as the username.</li><li>Clicking on the <strong>edit</strong> button should allow the user to edit the corresponding ideas</li><li>Clicking on the <strong>delete</strong> button should delete the corresponding idea</li><li>Clicking on the <strong>upvote</strong> button should increase the corresponding idea&#39;s <code>score</code></li><li>Clicking on the <strong>downvote</strong> button should descrease the corresponding idea&#39;s <code>score</code></li></ol><h2 id="idea-forum-data" tabindex="-1"><a class="header-anchor" href="#idea-forum-data" aria-hidden="true">#</a> Idea Forum Data</h2><p>You must use the following data, unmodified, in your project.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">currentUser</span><span class="token operator">:</span> <span class="token string">&#39;currentUser&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ideas</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;amyrobson&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span>
        <span class="token string">&#39;Non dolor veniam nostrud ad. Commodo ex officia reprehenderit eu laborum. Qui reprehenderit reprehenderit incididunt eiusmod voluptate cupidatat cupidatat dolor. Incididunt sint cupidatat dolore cupidatat ut do dolor nostrud ullamco aliqua aliqua excepteur. Fugiat nostrud esse voluptate magna nostrud nostrud sint et. Irure excepteur irure ullamco occaecat dolor deserunt. Cillum fugiat sunt ullamco ad enim ea eiusmod do et dolor adipisicing mollit aliqua mollit.\\r\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;maxblagun&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span>
        <span class="token string">&#39;Cupidatat veniam quis aliquip ut pariatur excepteur ut. Cupidatat reprehenderit nulla laborum dolore nulla voluptate cupidatat in. Sint tempor non duis sit deserunt culpa sunt labore eu sit consectetur. Excepteur reprehenderit et officia incididunt consectetur laborum consequat laboris excepteur ea adipisicing qui.\\r\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;maxblagun&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span>
        <span class="token string">&#39;Proident qui elit in deserunt velit eu veniam. Tempor velit cillum et dolore. Incididunt anim Lorem Lorem dolor voluptate deserunt cillum consequat ut. Ea fugiat culpa ex et pariatur dolor est officia ea dolore ullamco mollit. Cillum minim consequat ipsum deserunt velit mollit ad consectetur irure dolore proident qui.\\r\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;maxblagun&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span>
        <span class="token string">&#39;Officia exercitation cupidatat enim sint ea quis reprehenderit ipsum. Commodo ullamco deserunt reprehenderit qui in anim aliqua officia do in reprehenderit Lorem. Ipsum non aute officia est nisi sunt non. Proident in eiusmod sint aliquip qui officia deserunt eiusmod sit. Mollit voluptate anim cillum cupidatat duis est ad excepteur consequat fugiat cillum velit esse. Quis dolore sit ullamco qui.\\r\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;currentUser&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span>
        <span class="token string">&#39;Incididunt ut ut velit dolor irure Lorem ex nostrud et laborum commodo dolore laborum culpa. Adipisicing ullamco eu id sit velit ut laboris irure esse quis. Mollit minim laborum do exercitation sint magna ea ea eu eu laboris aliquip anim culpa. Consectetur eiusmod esse ipsum incididunt duis ea nisi qui duis pariatur.\\r\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;currentUser&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span>
        <span class="token string">&#39;Id aute eu quis tempor laborum duis nostrud proident nostrud culpa est ad. Do dolor cillum ullamco excepteur eiusmod laboris dolore do Lorem. Exercitation eiusmod laborum enim culpa esse.\\r\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;amyrobson&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span>
        <span class="token string">&#39;In magna cupidatat ipsum exercitation incididunt non eu amet occaecat et sint irure consequat. Sunt labore incididunt ut culpa aliquip excepteur est. Enim Lorem dolor adipisicing veniam proident quis ad laborum in commodo qui. Proident elit ullamco aliqua non excepteur in fugiat consequat adipisicing ut eu id sunt laboris.\\r\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hints" tabindex="-1"><a class="header-anchor" href="#hints" aria-hidden="true">#</a> Hints</h2><h3 id="using-idea-forum-data" tabindex="-1"><a class="header-anchor" href="#using-idea-forum-data" aria-hidden="true">#</a> Using Idea Forum Data</h3><p>The idea forum data above must be used for this project. The <code>data</code> variable is an object containing two properties <code>currentUser</code> and <code>ideas</code>. The <code>ideas</code> property is an array of objects, and will be used to create the ideas HTML and add it to the page. Each idea can be accessed using a <code>for</code> or a <code>for...of</code> loop.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// idea forum data</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>

<span class="token comment">// using for loop</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>ideas<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// log idea content</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>ideas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>content<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// using for...of loop</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> idea <span class="token keyword">of</span> data<span class="token punctuation">.</span>ideas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// log idea content</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>idea<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="designing-layout" tabindex="-1"><a class="header-anchor" href="#designing-layout" aria-hidden="true">#</a> Designing Layout</h3><p>It is recommended to design the page layout before starting the JavaScript. This project does permit the use of a CSS Framework like Bootstrap. Not only can be these frameworks be used for their grid system, but their built-in components and utility classes can be useful. Below you will find links to useful Bootstrap components and utility classes.</p><p><strong>Components</strong></p>`,16),d={href:"https://getbootstrap.com/docs/5.2/components/buttons/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://getbootstrap.com/docs/5.2/components/card/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://getbootstrap.com/docs/5.2/components/close-button/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://getbootstrap.com/docs/5.2/forms/overview/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://getbootstrap.com/docs/5.2/components/list-group/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://getbootstrap.com/docs/5.2/components/modal/",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,[n("strong",null,"Utility Classes")],-1),f={href:"https://getbootstrap.com/docs/5.2/utilities/background/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://getbootstrap.com/docs/5.2/utilities/borders/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://getbootstrap.com/docs/5.2/utilities/colors/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://getbootstrap.com/docs/5.2/utilities/flex/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://getbootstrap.com/docs/5.2/utilities/shadows/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://getbootstrap.com/docs/5.2/utilities/spacing/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://getbootstrap.com/docs/5.2/utilities/text/",target:"_blank",rel:"noopener noreferrer"},I=e(`<p>For example, Bootstrap could be used to create a list of colors, using a list group. Bootstrap form classes can be used for an add color form and the close button component can be used as a delete button.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Colors List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">integrity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>anonymous<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addColor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newColor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>New Color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>colors<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-group-item d-flex justify-content-between<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      red 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-close<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Close<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-group-item d-flex justify-content-between<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      blue 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-close<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Close<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-group-item d-flex justify-content-between<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      green 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-close<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Close<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),T=n("iframe",{height:"360",style:{width:"100%"},scrolling:"no",title:"Colors List",src:"https://codepen.io/IMD/embed/WNXyVKO?default-tab=results&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/IMD/pen/WNXyVKO">
  Colors List</a> by IMD (<a href="https://codepen.io/IMD">@IMD</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),j=e(`<h3 id="creating-html" tabindex="-1"><a class="header-anchor" href="#creating-html" aria-hidden="true">#</a> Creating HTML</h3><p>Because the ideas will need to be added to the page any time a change occurs, it is recommended to create a function that will dynamically add the ideas to the page. This function would use the standard practice of creating each element and pushing it to an array, and then inserting the entire array as a string to page using <code>innerHTML</code>. Then any time the data changes, the function is called. The example below demonstrates this technique.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// color data used to generate color list</span>
<span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">]</span>

<span class="token comment">// retrieve elements by their ids</span>
<span class="token keyword">const</span> $colors <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;colors&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// create listColors function</span>
<span class="token comment">// will generate the HTML and intert it on the page. </span>
<span class="token keyword">function</span> <span class="token function">listColors</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// create array to hold the HTML strings</span>
  <span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// use for loop to iterate over colors array</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> colors<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// adds HTML string to html array</span>
    html<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      &lt;li class=&quot;list-group-item&quot;&gt;
        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>colors<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 
        &lt;button type=&quot;button&quot; class=&quot;btn-close&quot; aria-label=&quot;Close&quot; data-index=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;&lt;/button&gt;
      &lt;/li&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// insert entire html array to $colors element</span>
  $colors<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// invoke listColors function to create colors list</span>
<span class="token function">listColors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),L=n("iframe",{height:"381",style:{width:"100%"},scrolling:"no",title:"Colors List",src:"https://codepen.io/IMD/embed/qBVKeJG?default-tab=results&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/IMD/pen/qBVKeJG">
  Colors List</a> by IMD (<a href="https://codepen.io/IMD">@IMD</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),M=e(`<h3 id="updating-html" tabindex="-1"><a class="header-anchor" href="#updating-html" aria-hidden="true">#</a> Updating HTML</h3><p>When a change is made to the <code>colors</code> array, perhaps by adding a new color, the <code>listColors()</code> function needs to be invoked to update the in the HTML.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// add event listener to addColor form</span>
$addColor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// prevent the form from causing a page refresh</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
  <span class="token comment">// add new color to colors array</span>
  <span class="token comment">// use the value property to access the textbox&#39;s text</span>
  colors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>$newColor<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
  
  <span class="token comment">// clear the form</span>
  $addColor<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
  <span class="token comment">// invoke listColors to update list</span>
  <span class="token function">listColors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),D=n("iframe",{height:"330",style:{width:"100%"},scrolling:"no",title:"Colors List",src:"https://codepen.io/IMD/embed/NWwBodw?default-tab=result&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/IMD/pen/NWwBodw">
  Colors List</a> by IMD (<a href="https://codepen.io/IMD">@IMD</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),S=e(`<h3 id="implementing-event-delegation" tabindex="-1"><a class="header-anchor" href="#implementing-event-delegation" aria-hidden="true">#</a> Implementing Event Delegation</h3><p>Event delegation will be used when responding to events that occur on any of the colors. It works by adding an event listener to a parent of the colors, but only respond to event when a specific elements is targeted. In the case of the colors list, this will be the button. The <code>classList.contains()</code> method will be used to identify the button.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// add event listener to the $colors element</span>
$colors<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// verify that a button was clicked</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;btn-close&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, response to the event by removing the corresponding color using the custom data attribute and the <code>splice()</code> method. After the color has been removed from the colors array, update the list calling <code>listColors</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// add event listener to the $colors element</span>
$colors<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// verify that a button was clicked</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;btn-close&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// getting the index from custom data attribute</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>index

    <span class="token comment">// using the splice method to remove color</span>
    <span class="token comment">// first argument: points to desire item in array</span>
    <span class="token comment">// second argument: number of items to remove</span>
    colors<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token comment">// invoke listColors to display new list</span>
    <span class="token function">listColors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),B=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Colors List",src:"https://codepen.io/IMD/embed/vYWjOba?default-tab=result&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/IMD/pen/vYWjOba">
  Colors List</a> by IMD (<a href="https://codepen.io/IMD">@IMD</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),U=n("h2",{id:"example",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#"),a(" Example")],-1),E=e('<h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><p>Submissions will be graded based on the following criteria:</p><table><thead><tr><th>Requirement</th><th style="text-align:center;">Marks</th></tr></thead><tbody><tr><td>Repository and files are named and structured correctly</td><td style="text-align:center;">2</td></tr><tr><td>The provided data was unchanged and used properly</td><td style="text-align:center;">2</td></tr><tr><td>Ideas were dynamically added using JavaScript and includes the username, idea, and score</td><td style="text-align:center;">3</td></tr><tr><td>Ideas created by the &quot;current user&quot; includes the &quot;you&quot; tag, the &quot;edit&quot; button, and the &quot;delete&quot; button</td><td style="text-align:center;">3</td></tr><tr><td>Submitting the new idea form adds a new idea to the ideas array, and the UI automatically reflects the change</td><td style="text-align:center;">3</td></tr><tr><td>Clicking on the &quot;edit&quot; button displays the edit form pre-populated with the idea&#39;s data</td><td style="text-align:center;">3</td></tr><tr><td>Submitting the edit form updates the idea in the ideas array, and the UI automatically reflects the change</td><td style="text-align:center;">3</td></tr><tr><td>Click on the delete button removes the idea from the idea array, and the UI automatically reflects the change</td><td style="text-align:center;">3</td></tr><tr><td>Clicking on the &quot;upvote&quot; and &quot;downvote&quot; buttons increases and decreases the idea&#39;s score inside the ideas array</td><td style="text-align:center;">3</td></tr><tr><td>The UI is responsive and well designed</td><td style="text-align:center;">5</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>30</strong></td></tr></tbody></table>',3);function N(Y,F){const t=o("ExternalLinkIcon"),p=o("Youtube");return i(),c("div",null,[r,n("ul",null,[n("li",null,[n("a",d,[a("Buttons"),s(t)])]),n("li",null,[n("a",k,[a("Cards"),s(t)])]),n("li",null,[n("a",m,[a("Close Button"),s(t)])]),n("li",null,[n("a",v,[a("Forms"),s(t)])]),n("li",null,[n("a",h,[a("List Group"),s(t)])]),n("li",null,[n("a",g,[a("Modal"),s(t)])])]),b,n("ul",null,[n("li",null,[n("a",f,[a("Background"),s(t)])]),n("li",null,[n("a",y,[a("Borders"),s(t)])]),n("li",null,[n("a",q,[a("Colors"),s(t)])]),n("li",null,[n("a",w,[a("Flex"),s(t)])]),n("li",null,[n("a",x,[a("Shadows"),s(t)])]),n("li",null,[n("a",_,[a("Spacing"),s(t)])]),n("li",null,[n("a",C,[a("Text"),s(t)])])]),I,T,j,L,M,D,S,B,U,s(p,{id:"PElT7D0HrcI"}),E])}const P=l(u,[["render",N],["__file","idea-forum.html.vue"]]);export{P as default};
