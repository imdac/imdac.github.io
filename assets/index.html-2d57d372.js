import{_ as c,M as e,p as i,q as l,N as s,R as n,t as a,a3 as o}from"./framework-dd056dd6.js";const r={},u=o(`<h1 id="react-state" tabindex="-1"><a class="header-anchor" href="#react-state" aria-hidden="true">#</a> React State</h1><p>Most web applications support user actions. These actions often cause changes to occur in the application. However, for an application to work properly, it must be able to track these changes through the use of state. State is the data or properties that need to be tracked in an application.</p><h2 id="understanding-state" tabindex="-1"><a class="header-anchor" href="#understanding-state" aria-hidden="true">#</a> Understanding state</h2><p>Imagine that we wanted to create a dynamic list that allows the user to add new items. We might create an application like this:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;Item 1&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Item 2&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Item 3&#39;</span>
  <span class="token punctuation">]</span>

  <span class="token keyword">const</span> listItems <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span><span class="token punctuation">{</span>listItems<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
  
  <span class="token keyword">function</span> <span class="token function">buttonHandler</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>items<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>React<span class="token punctuation">.</span>Fragment<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>buttonHandler<span class="token punctuation">}</span><span class="token operator">&gt;</span>Add Item<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>list<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>React<span class="token punctuation">.</span>Fragment<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token keyword">const</span> root <span class="token operator">=</span> ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
root<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, unfortunately, this will not work as expected. While new items will be added to the <code>items</code>, they will not be displayed on the page. This is because of how React handles state.</p>`,6),d=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"React Hooks - No Refresh",src:"https://codepen.io/IMD/embed/jOxzRdr?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/IMD/pen/jOxzRdr">
  React Hooks - No Refresh</a> by IMD (<a href="https://codepen.io/IMD">@IMD</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),k=n("p",null,[a("By default, React does not re-render a component when local data is changed. Fortunately, developers can change this behavior by incorporating state into a component. With state, React will listen for changes to local variables and automatically re-render the component. State can be incorporated using the "),n("code",null,"useState"),a(" Hook.")],-1),h=n("h2",{id:"using-the-state-hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#using-the-state-hook","aria-hidden":"true"},"#"),a(" Using the State Hook")],-1),m={href:"https://reactjs.org/docs/hooks-state.html",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"useState",-1),g=o(`<p>The <code>useState</code> method returns an array containing two values. The first is an immutable variable holding the value of our state variable. The second is a set function used to update the state variable. When using the <code>useState</code> Methods to declare the state variable, destructuring is employed to retrieve both the value and the function. The value passed to the <code>useState</code> method will be the initial value of the state variable.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Declaring a new state variable </span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>items<span class="token punctuation">,</span> setItems<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Item 1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Item 2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Item 3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once a state variable has been declared, the value can be retrieved using the first value in the returned array. In the example above, <code>items</code> is an array, and therefore can be used with the <code>map</code> method.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> listItems <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>However, because this value is immutable, the array cannot be altered. Instead, the second value of the returned array. The <code>setItems</code> function is used to update the items array. This is accomplished by passing the new value as an argument.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setItems</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>items<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>items<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),b={class:"custom-container warning"},f=n("p",{class:"custom-container-title"},"NOTE",-1),_=n("code",null,"items",-1),w=n("code",null,"setItems",-1),y={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",target:"_blank",rel:"noopener noreferrer"},I={class:"try"},j={href:"https://codepen.io/IMD/pen/yLjKWzp",target:"_blank",rel:"noopener noreferrer"};function x(R,S){const p=e("LinkedIn"),t=e("ExternalLinkIcon");return i(),l("div",null,[u,d,k,h,s(p,{poster:"reactjs-essential-training-poster.jpg",title:"Understanding the useState Hook",href:"https://www.linkedin.com/learning/react-js-essential-training-14836121/understanding-the-usestate-hook",citation:"This video is part of the LinkedIn Learning course <a href='https://www.linkedin.com/learning/react-js-essential-training-14836121/' target='_blank'>React.js Essential Training</a>."}),n("p",null,[a("The "),n("a",m,[v,s(t)]),a(" hook method is used to declare a state variable, which it necessary to create reactive components.")]),g,n("div",b,[f,n("p",null,[a("Because "),_,a(" is an array, an array must be passed to the "),w,a(". When adding a new item to the array, the "),n("a",y,[a("spread syntax"),s(t)]),a(" is used.")])]),n("div",I,[n("p",null,[n("a",j,[a("Try it yourself on CodePen"),s(t)])])])])}const M=c(r,[["render",x],["__file","index.html.vue"]]);export{M as default};
