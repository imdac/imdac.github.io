import{_ as l,M as i,p as d,q as r,N as t,R as e,t as n,a3 as s}from"./framework-dd056dd6.js";const c={},u=e("h1",{id:"php-includes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#php-includes","aria-hidden":"true"},"#"),n(" PHP Includes")],-1),p=e("p",null,"PHP has the ability to include multiple files into a single PHP file. This is very powerful tool is how templates can be created using PHP.",-1),h=e("p",null,"There are four ways to include files into PHP. While they all work in same basic way, there are slight differences between all four.",-1),f=e("h2",{id:"include",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#include","aria-hidden":"true"},"#"),n(" include")],-1),g={href:"https://www.php.net/manual/en/function.include.php",target:"_blank",rel:"noopener noreferrer"},b=e("code",null,"include",-1),_=s(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">include</span> <span class="token string double-quoted-string">&quot;includes/database.php&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">&quot;includes/header.php&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="include-once" tabindex="-1"><a class="header-anchor" href="#include-once" aria-hidden="true">#</a> include_once</h2>`,2),w={href:"https://www.php.net/manual/en/function.include-once.php",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"include_once",-1),v=s(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">include_once</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span> 
<span class="token keyword">include_once</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span> 
<span class="token keyword">include_once</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The example above would fetch and include the first navigation.php file, however the second and third copies would not be included. The PHP interpreter would check each time to see if the file was already included. If not, then it will fetch and include the file, otherwise the line of code will be ignored.</p><h2 id="require" tabindex="-1"><a class="header-anchor" href="#require" aria-hidden="true">#</a> require</h2>`,3),q={href:"https://www.php.net/manual/en/function.require.php",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"require",-1),y=s(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">require</span> <span class="token string double-quoted-string">&quot;includes/database.php&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">require</span> <span class="token string double-quoted-string">&quot;includes/header.php&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">require</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="require-once" tabindex="-1"><a class="header-anchor" href="#require-once" aria-hidden="true">#</a> require_once</h2>`,2),x={href:"https://www.php.net/manual/en/function.require-once.php",target:"_blank",rel:"noopener noreferrer"},P=e("code",null,"require_once",-1),H=s(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">require_once</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span> 
<span class="token keyword">require_once</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span> 
<span class="token keyword">require_once</span> <span class="token string double-quoted-string">&quot;includes/navigation.php&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The example above would fetch and include the first <code>navigation.php</code> file, however the second and third copies would not be included. The PHP interpreter would check each time to see if the file was already included. If not, then it will fetch and include the file, otherwise the line of code will be ignored.</p><p>Using the <code>require</code> or <code>require_once</code> command tells the PHP interpreter that your page should NOT run without the contents of the other page. An example of this would be a security test to see if a user is logged in or a connection to a database. Without those two things there is no point in trying to load the page. The user will either be viewing content that they potentially are not allowed to see or there is no content to load because the database is unreachable.</p>`,3);function T(I,N){const o=i("Youtube"),a=i("ExternalLinkIcon");return d(),r("div",null,[u,t(o,{id:"-HU_hHTfhOY",citation:"griffith"}),p,h,f,e("p",null,[n("The "),e("a",g,[b,t(a)]),n(" statement will fetch an external file and include all of its content inside the parent page. If the page cannot be found, PHP will issue a notice as continue rendering the rest of the file.")]),_,e("p",null,[n("The "),e("a",w,[k,t(a)]),n(" statement will fetch an external file and include all of its content inside the parent page, ONLY if it has not already been included. If the page cannot be found, PHP will issue a notice as continue rendering the rest of the file.")]),v,e("p",null,[n("The "),e("a",q,[m,t(a)]),n(" statement will external file and include all of its content inside the parent page. If the page cannot be found, PHP will issue an ERROR and stop rendering the file.")]),y,e("p",null,[n("The "),e("a",x,[P,t(a)]),n(" statement will external file and include all of its content inside the parent page, ONLY if it has not already been included. If the page cannot be found, PHP will issue an ERROR and stop rendering the file.")]),H])}const O=l(c,[["render",T],["__file","index.html.vue"]]);export{O as default};
