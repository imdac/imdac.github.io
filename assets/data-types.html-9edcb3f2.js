import{_ as l,M as o,p as i,q as p,N as a,R as n,t as e,a3 as t}from"./framework-dd056dd6.js";const d={},c=n("h1",{id:"php-data-types",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-data-types","aria-hidden":"true"},"#"),e(" PHP Data types")],-1),h={href:"https://www.php.net/manual/en/language.types.intro.php",target:"_blank",rel:"noopener noreferrer"},u=t('<ul><li>Boolean</li><li>Integer</li><li>Float</li><li>String</li><li>Array</li><li>Object</li><li>NULL</li><li>resource</li></ul><p>For now, we will just focus on the first four (Boolean, Integer, Float, String), which are known as Scalar types.</p><h2 id="booleans" tabindex="-1"><a class="header-anchor" href="#booleans" aria-hidden="true">#</a> Booleans</h2>',3),g={href:"https://www.php.net/manual/en/language.types.boolean.php",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"true",-1),b=n("code",null,"false",-1),v=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>  <span class="token variable">$bool</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="integers" tabindex="-1"><a class="header-anchor" href="#integers" aria-hidden="true">#</a> Integers</h2>`,2),_={href:"https://www.php.net/manual/en/language.types.integer.php",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting variables to numbers</span>
  <span class="token variable">$var1</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token variable">$var2</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="floats" tabindex="-1"><a class="header-anchor" href="#floats" aria-hidden="true">#</a> Floats</h2>`,2),w={href:"https://www.php.net/manual/en/language.types.float.php",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// setting a variable to a float</span>
  <span class="token variable">$float</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="strings" tabindex="-1"><a class="header-anchor" href="#strings" aria-hidden="true">#</a> Strings</h2>`,2),y={href:"https://www.php.net/manual/en/language.types.string.php",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double",target:"_blank",rel:"noopener noreferrer"},B=t(`<p>Strings can be used with <code>echo</code> statements to display the strings in the browser.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token comment">// echo a string with double quotes</span>
  <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Hello World &lt;br&gt;&quot;</span><span class="token punctuation">;</span>
  
  <span class="token comment">// echo a string with single quotes</span>
  <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Hello World &lt;br&gt;&#39;</span><span class="token punctuation">;</span> 
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function L(N,S){const r=o("Youtube"),s=o("ExternalLinkIcon");return i(),p("div",null,[c,a(r,{id:"atNrwSTB3-c",citation:"This video was created by <a href='https://www.youtube.com/channel/UCzyuZJ8zZ-Lhfnz41DG5qLw'>Dani Krossing</a>"}),n("p",null,[e("Like most programming languages, PHP will work with many different types of data, known as data types. "),n("a",h,[e("PHP data types"),a(s)]),e(" includes the following:")]),u,n("p",null,[n("a",g,[e("Booleans"),a(s)]),e(" are the simpliest type and expresses a truth value, either "),m,e(" or "),b,e(".")]),v,n("p",null,[e("An "),n("a",_,[e("integer"),a(s)]),e(" is any whole number, either positive or negative. To set a variable to a number, provide the number literal with no quotes.")]),k,n("p",null,[n("a",w,[e("Floating point numbers"),a(s)]),e(" or floats for short, are any number with a decimal in them. To set a variable to a floating point number, simply provide a number literal that contains a decimal.")]),f,n("p",null,[e("A "),n("a",y,[e("string"),a(s)]),e(" is a series of characters, surrounded by quotes or special syntax. A string can be created using "),n("a",x,[e("single quotes"),a(s)]),e(" or "),n("a",q,[e("double quotes"),a(s)]),e(".")]),B])}const T=l(d,[["render",L],["__file","data-types.html.vue"]]);export{T as default};
