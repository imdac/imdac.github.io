import{_ as e,p as i,q as s,a3 as n}from"./framework-dd056dd6.js";const a={},t=n(`<h1 id="specificity" tabindex="-1"><a class="header-anchor" href="#specificity" aria-hidden="true">#</a> Specificity</h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>This exercise will challenge you to style elements using only CSS specificity to override existing styles. Download the exercise file and answer the 9 questions according to the requirements below.</p><h2 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints" aria-hidden="true">#</a> Constraints</h2><ul><li>Your style rules must appear before existing style rules. You cannot use order of appearance to override styles</li><li>You cannot change the existing style rules or alter the html in anyway</li><li>You cannot use <code>!important</code></li></ul><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><h3 id="general-10" tabindex="-1"><a class="header-anchor" href="#general-10" aria-hidden="true">#</a> General (10%)</h3><p>Your submission is subject to baseline requirements so be sure you’re following the style guide, validating your work and using semantic markup etc.  For more information see here.</p><ol><li>CSS adheres to the style guide (organized, neat and readable)</li><li>Submission passes validation</li><li>Overriding CSS appears before existing rules</li><li>Existing HTML &amp; CSS is unaltered</li></ol><h3 id="solution-answers-90" tabindex="-1"><a class="header-anchor" href="#solution-answers-90" aria-hidden="true">#</a> Solution Answers (90%)</h3><p>In comments preceding each style rule, indicate the question number followed by the specificity calculation of the current style and your solution:</p><p>For Example...</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*  QUESTION 1 
    Current specificity:    0000
    Overriden specificity:  0001
*/</span>
<span class="token selector">selector</span> <span class="token punctuation">{</span>
    <span class="token property">property</span><span class="token punctuation">:</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="submission" tabindex="-1"><a class="header-anchor" href="#submission" aria-hidden="true">#</a> Submission</h2><p>Submit a zipped copy of the exercise</p>`,15),r=[t];function o(l,c){return i(),s("div",null,r)}const u=e(a,[["render",o],["__file","specificity.html.vue"]]);export{u as default};
