import{_ as p,M as o,p as i,q as c,R as n,t as s,N as e,a3 as t}from"./framework-dd056dd6.js";const l={},r=n("h1",{id:"php-array-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-array-functions","aria-hidden":"true"},"#"),s(" PHP Array Functions")],-1),u={href:"https://www.php.net/manual/en/ref.array.php",target:"_blank",rel:"noopener noreferrer"},d=n("h2",{id:"count-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#count-function","aria-hidden":"true"},"#"),s(" count() Function")],-1),m={href:"https://www.php.net/manual/en/function.count.php",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"count()",-1),h=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// getting the number of elements</span>
  <span class="token keyword">echo</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="max-function" tabindex="-1"><a class="header-anchor" href="#max-function" aria-hidden="true">#</a> max() Function</h2>`,2),b={href:"https://www.php.net/manual/en/function.max.php",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"max()",-1),f=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// getting highest element</span>
  <span class="token keyword">echo</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 42</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="min-function" tabindex="-1"><a class="header-anchor" href="#min-function" aria-hidden="true">#</a> min() Function</h2>`,2),g={href:"https://www.php.net/manual/en/function.min.php",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"min()",-1),w=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// getting the lowest element</span>
  <span class="token keyword">echo</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sort-function" tabindex="-1"><a class="header-anchor" href="#sort-function" aria-hidden="true">#</a> sort() Function</h2>`,2),y={href:"https://www.php.net/manual/en/function.sort.php",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"sort()",-1),T=t(`<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>This is a destructive function and will change the array.</p></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// sorting the array from lowest to highest</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rsort-function" tabindex="-1"><a class="header-anchor" href="#rsort-function" aria-hidden="true">#</a> rsort() Function</h2>`,3),$={href:"https://www.php.net/manual/en/function.rsort.php",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"rsort()",-1),q=t(`<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>This is a destructive function and will change the array.</p></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// sorting the array from highest to lowest</span>
  <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">rsort</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="implode-function" tabindex="-1"><a class="header-anchor" href="#implode-function" aria-hidden="true">#</a> implode() Function</h2>`,3),E={href:"https://www.php.net/manual/en/function.implode.php",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"implode()",-1),L=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// join the array elements together to create a string</span>
  <span class="token keyword">echo</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; * &quot;</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="explode-function" tabindex="-1"><a class="header-anchor" href="#explode-function" aria-hidden="true">#</a> explode() Function</h2>`,2),P={href:"https://www.php.net/manual/en/function.explode.php",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"explode()",-1),A=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$num_string</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;8 * 23 * 15 * 42 * 16 * 4&quot;</span><span class="token punctuation">;</span>
  
  <span class="token comment">// split the string into an array</span>
  <span class="token keyword">echo</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; * &quot;</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="in-array-function" tabindex="-1"><a class="header-anchor" href="#in-array-function" aria-hidden="true">#</a> in_array() Function</h2>`,2),B={href:"https://www.php.net/manual/en/function.in-array.php",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"in_array()",-1),S=n("code",null,"TRUE",-1),j=n("code",null,"FALSE",-1),H=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// checking if 15 is in the array</span>
  <span class="token keyword">echo</span> <span class="token function">in_array</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TRUE</span>

  <span class="token comment">// checking if 19 is in the array</span>
  <span class="token keyword">echo</span> <span class="token function">in_array</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// FALSE</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="array-push-function" tabindex="-1"><a class="header-anchor" href="#array-push-function" aria-hidden="true">#</a> array_push() Function</h2>`,2),I={href:"https://www.php.net/manual/en/function.array-push.php",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"array_push()",-1),U=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// add 35 to the end of the array</span>
  <span class="token keyword">echo</span> <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="array-pop-function" tabindex="-1"><a class="header-anchor" href="#array-pop-function" aria-hidden="true">#</a> array_pop() Function</h2>`,2),C={href:"https://www.php.net/manual/en/function.array-pop.php",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"array_push()",-1),z=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token variable">$numbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token comment">// remove the last item in the array</span>
  <span class="token keyword">echo</span> <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function D(G,J){const a=o("ExternalLinkIcon");return i(),c("div",null,[r,n("p",null,[s("PHP has many predefined "),n("a",u,[s("array functions"),e(a)]),s(" that can be used to read and manipulate arrays. The following is a list of the available functions.")]),d,n("p",null,[s("The "),n("a",m,[k,e(a)]),s(" function will count all the elements in an array and return the total number.")]),h,n("p",null,[s("The "),n("a",b,[v,e(a)]),s(" function will find the highest value in an array if the only parameter provided is an array.")]),f,n("p",null,[s("The "),n("a",g,[_,e(a)]),s(" function will find the lowest value in an array if the only parameter provided is an array.")]),w,n("p",null,[s("The "),n("a",y,[x,e(a)]),s(" function will sort an array, in place, from lowest to highest.")]),T,n("p",null,[s("The "),n("a",$,[F,e(a)]),s(" function will sort an array, in place, from highest to lowest.")]),q,n("p",null,[s("The "),n("a",E,[N,e(a)]),s(" function will join array elements with a string and return a string.")]),L,n("p",null,[s("The "),n("a",P,[V,e(a)]),s(" function will split a string by a delimiter and return an array.")]),A,n("p",null,[s("The "),n("a",B,[R,e(a)]),s(" function will check if a value exists in an array. The function will return "),S,s(" if the value is found, and "),j,s(" if it is not.")]),H,n("p",null,[s("The "),n("a",I,[O,e(a)]),s(" function will add one or more elements to the end of an array. The function will return the new number of elements.")]),U,n("p",null,[s("The "),n("a",C,[M,e(a)]),s(" function will remove the element at the end of an array. The function will return the value of the last element (the element that was removed).")]),z])}const Q=p(l,[["render",D],["__file","array-functions.html.vue"]]);export{Q as default};
