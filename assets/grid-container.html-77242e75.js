import{_ as o,M as t,p as c,q as l,R as e,t as n,N as s,a3 as i}from"./framework-dd056dd6.js";const p={},d=i(`<h1 id="the-grid-container" tabindex="-1"><a class="header-anchor" href="#the-grid-container" aria-hidden="true">#</a> The Grid Container</h1><p>Creating a grid container is as simple as setting the <code>display</code> property to <code>grid</code>. Once a container is declared as a grid, all <em>direct</em> children become grid items.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">main</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="grid-tracks" tabindex="-1"><a class="header-anchor" href="#grid-tracks" aria-hidden="true">#</a> Grid Tracks</h2><p>Grid tracks are the space between two grid lines on the same axis. Effectively a column or a row depending on the axis. We define tracks using the <code>grid-template-columns</code> or <code>grid-template-rows</code> properties.</p><h3 id="columns" tabindex="-1"><a class="header-anchor" href="#columns" aria-hidden="true">#</a> Columns</h3><p>In order to define columns weâ€™ll use the <code>grid-template-columns</code> property to accomplish this.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">main</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 1fr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When considering a mobile-first approach, a single column is the default when a grid container is created. The following example shows how a responsive implementation might look with media queries.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 760px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">main</span> <span class="token punctuation">{</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 1fr 1fr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 980px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">main</span> <span class="token punctuation">{</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 1fr 1fr 1fr<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token selector">main</span> <span class="token punctuation">{</span>
    <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>4<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::info Notice The <a href="#repeat"><code>repeat()</code></a> function in the last media query. :::</p><h3 id="rows" tabindex="-1"><a class="header-anchor" href="#rows" aria-hidden="true">#</a> Rows</h3><p>The creation of rows is accomplished in the same manner as columns using the <code>grid-template-rows</code> property.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">main</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 120px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="units" tabindex="-1"><a class="header-anchor" href="#units" aria-hidden="true">#</a> Units</h2>`,15),u={href:"https://www.w3.org/Style/Examples/007/units.en.html",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"fr",-1),h=e("em",null,"fraction",-1),k=i(`<p>The following snippet shows the syntax for using the <code>fr</code> creating two columns of equal size.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">main</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 1fr 1fr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The next example again creates two columns with the first being twice the size of the second.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* Create two columns with the first twice the size of the second */</span>
<span class="token selector">main</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 2fr 1fr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The last example demonstrates mixing units. Here the first column width will be removed from the available space with the remainder divided up by the second and third columns.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* Mix and match different units */</span>
<span class="token selector">main</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 500px 2fr 1fr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="repeat" tabindex="-1"><a class="header-anchor" href="#repeat" aria-hidden="true">#</a> Repeat</h2><p>The <code>repeat()</code> function can be used to create a list of items with all the same value. The function takes two values, the first being the number of items to create, and the second the value of each time.</p><p>The rule <code>display: grid</code> is used to create a grid container with an explicit grid of 0 columns and 0 rows. However, the browser will create an implicit grid of 1 column and as many rows as there are direct children. We can see the results by added <code>grid-gap</code> between the grid cells.</p><h2 id="implicit-and-explicit" tabindex="-1"><a class="header-anchor" href="#implicit-and-explicit" aria-hidden="true">#</a> Implicit and Explicit</h2><p>The examples above are <em>explicit</em> declarations of grid tracks but often <em>implicit</em> tracks are created. If a situation arises where there is more content/grid-items than tracks, implicit tracks will be automatically created. This is often the case with rows, where only a few columns are explicitly defined but many elements, whether cards or pictures are â€˜wrappedâ€™ into successive, implicit rows.</p>`,11),v={href:"https://www.linkedin.com/learning/css-essential-training-3/the-explicit-grid?autoplay=true&u=2199673",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.linkedin.com/learning/css-essential-training-3/the-implicit-grid?autoplay=true&u=2199673",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"further-review",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#further-review","aria-hidden":"true"},"#"),n(" Further Review")],-1),b={href:"https://www.linkedin.com/learning/css-advanced-layouts-with-grid/define-a-grid?u=2199673",target:"_blank",rel:"noopener noreferrer"},w={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout",target:"_blank",rel:"noopener noreferrer"},_=e("h2",{id:"see-also",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#see-also","aria-hidden":"true"},"#"),n(" See Also")],-1),y={href:"https://zellwk.com/blog/remember-css-grid-properties/",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"references",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#references","aria-hidden":"true"},"#"),n(" References")],-1),S={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template",target:"_blank",rel:"noopener noreferrer"},C={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns",target:"_blank",rel:"noopener noreferrer"},T={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.w3.org/TR/css-grid-1/",target:"_blank",rel:"noopener noreferrer"};function G(N,I){const a=t("ExternalLinkIcon"),r=t("Youtube");return c(),l("div",null,[d,e("p",null,[n("Grid tracks can be declared using any of the typical CSS "),e("a",u,[n("units"),s(a)]),n(". Grid introduces a new unit that enables authors to create flexible proportional tracks. The "),m,n(" unit represents a "),h,n(" of available space in the container.")]),k,e("ul",null,[e("li",null,[e("a",v,[n("The explicit grid | LinkedIn Learning, formerly Lynda.com"),s(a)])]),e("li",null,[e("a",g,[n("The implicit grid | LinkedIn Learning, formerly Lynda.com"),s(a)])])]),f,s(r,{id:"yHLGbnOOtfQ",citation:"griffith"}),e("ul",null,[e("li",null,[n("Watch "),e("a",b,[n("Define a grid | LinkedIn Learning, formerly Lynda.com"),s(a)])]),e("li",null,[n("Read "),e("a",w,[n("Basic Concepts of grid layout - CSS: Cascading Style Sheets | MDN"),s(a)])])]),_,e("ul",null,[e("li",null,[e("a",y,[n("How I remember CSS Grid properties | Zell Liew"),s(a)])])]),x,e("ul",null,[e("li",null,[e("a",S,[n("grid-template - CSS: Cascading Style Sheets | MDN"),s(a)])]),e("li",null,[e("a",C,[n("grid-template-columns - CSS: Cascading Style Sheets | MDN"),s(a)])]),e("li",null,[e("a",T,[n("grid-template-rows - CSS: Cascading Style Sheets | MDN"),s(a)])]),e("li",null,[e("a",L,[n("W3C - CSS Grid Layout Module Level 1"),s(a)])])])])}const z=o(p,[["render",G],["__file","grid-container.html.vue"]]);export{z as default};
