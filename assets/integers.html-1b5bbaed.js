import{_ as o,M as r,p,q as i,R as n,t as e,N as a,a3 as t}from"./framework-dd056dd6.js";const l={},c=n("h1",{id:"php-integers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-integers","aria-hidden":"true"},"#"),e(" PHP Integers")],-1),d={class:"watch"},u={href:"https://www.linkedin.com/learning/php-essential-training-2/numbers-part-1-integers",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.php.net/manual/en/language.types.integer.php",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting variables to numbers</span>
  <span class="token variable">$var1</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token variable">$var2</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="arithmetic-operators" tabindex="-1"><a class="header-anchor" href="#arithmetic-operators" aria-hidden="true">#</a> Arithmetic Operators</h2>`,2),v={href:"https://www.php.net/manual/en/language.operators.arithmetic.php",target:"_blank",rel:"noopener noreferrer"},k=t(`<table><thead><tr><th style="text-align:center;">operator</th><th style="text-align:center;">operation</th></tr></thead><tbody><tr><td style="text-align:center;"><code>+</code></td><td style="text-align:center;">addition</td></tr><tr><td style="text-align:center;"><code>-</code></td><td style="text-align:center;">subtraction</td></tr><tr><td style="text-align:center;"><code>*</code></td><td style="text-align:center;">multiplication</td></tr><tr><td style="text-align:center;"><code>/</code></td><td style="text-align:center;">division</td></tr></tbody></table><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>PHP follows the (PEMDAS) orders of operation.</p><p><strong>P</strong>arentheses, <strong>E</strong>xponents, <strong>M</strong>ultiplication and <strong>D</strong>ivision, and <strong>A</strong>ddition and <strong>S</strong>ubtraction</p></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// setting variables to numbers</span>
  <span class="token variable">$var1</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token variable">$var2</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

  <span class="token comment">// basic math calculation</span>
  <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token variable">$var1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token variable">$var2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 7</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),b={class:"try"},g={href:"https://repl.it/@eisenbm/PHP-Arithmetic-Operators",target:"_blank",rel:"noopener noreferrer"},_=n("h2",{id:"mathematical-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mathematical-functions","aria-hidden":"true"},"#"),e(" Mathematical Functions")],-1),f={href:"https://www.php.net/manual/en/ref.math.php",target:"_blank",rel:"noopener noreferrer"},y=n("h3",{id:"abs-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#abs-function","aria-hidden":"true"},"#"),e(" abs() Function")],-1),w={href:"https://www.php.net/manual/en/function.abs.php",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"abs()",-1),P=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// getting absolute value of an expression</span>
  <span class="token keyword">echo</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 300</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),T={class:"try"},$={href:"https://repl.it/@eisenbm/PHP-abs-Function",target:"_blank",rel:"noopener noreferrer"},q=n("h3",{id:"pow-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pow-function","aria-hidden":"true"},"#"),e(" pow() Function")],-1),F={href:"https://www.php.net/manual/en/function.pow.php",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"pow()",-1),I=n("strong",null,"base",-1),R=n("strong",null,"exp",-1),A=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// getting value of 2 to power of 8</span>
  <span class="token keyword">echo</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 256</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),N={class:"try"},O={href:"https://repl.it/@eisenbm/The-pow-Function",target:"_blank",rel:"noopener noreferrer"},E=n("h3",{id:"sqrt-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sqrt-function","aria-hidden":"true"},"#"),e(" sqrt() Function")],-1),D={href:"https://www.php.net/manual/en/function.sqrt.php",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"sqrt()",-1),L=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// getting square root of 100</span>
  <span class="token keyword">echo</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),V={class:"try"},B={href:"https://repl.it/@eisenbm/The-sqrt-Function",target:"_blank",rel:"noopener noreferrer"},S=n("h3",{id:"fmod-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fmod-function","aria-hidden":"true"},"#"),e(" fmod() Function")],-1),C={href:"https://www.php.net/manual/en/function.fmod.php",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"fmod()",-1),j=n("strong",null,"dividend",-1),z=n("strong",null,"divisor",-1),G=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// getting remainder of 20 divided by 7</span>
  <span class="token keyword">echo</span> <span class="token function">fmod</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),J={class:"try"},K={href:"https://repl.it/@eisenbm/PHP-fmod-Function",target:"_blank",rel:"noopener noreferrer"},Q=n("h3",{id:"rand-function",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rand-function","aria-hidden":"true"},"#"),e(" rand() Function")],-1),U={href:"https://www.php.net/manual/en/function.rand.php",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"rand()",-1),Y=n("strong",null,"min",-1),Z=n("strong",null,"max",-1),nn=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// getting a random integer</span>
  <span class="token keyword">echo</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// getting a random integer between 1 and 10</span>
  <span class="token keyword">echo</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),en={class:"try"},sn={href:"https://repl.it/@eisenbm/PHP-rand-Function",target:"_blank",rel:"noopener noreferrer"},an=n("h2",{id:"assignment-operators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#assignment-operators","aria-hidden":"true"},"#"),e(" Assignment Operators")],-1),tn={href:"https://www.php.net/manual/en/language.operators.assignment.php",target:"_blank",rel:"noopener noreferrer"},on=n("code",null,"=",-1),rn=t(`<table><thead><tr><th style="text-align:center;">operator</th><th style="text-align:center;">operation</th></tr></thead><tbody><tr><td style="text-align:center;"><code>x += y</code></td><td style="text-align:center;"><code>x = x + y</code></td></tr><tr><td style="text-align:center;"><code>x -= y</code></td><td style="text-align:center;"><code>x = x - y</code></td></tr><tr><td style="text-align:center;"><code>x *= y</code></td><td style="text-align:center;"><code>x = x * y</code></td></tr><tr><td style="text-align:center;"><code>x /= y</code></td><td style="text-align:center;"><code>x = x / y</code></td></tr></tbody></table><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token variable">$var2</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

  <span class="token comment">// addition</span>
  <span class="token variable">$var2</span> <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$var2</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>

  <span class="token comment">// subtraction</span>
  <span class="token variable">$var2</span> <span class="token operator">-=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$var2</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>

  <span class="token comment">// multiplication</span>
  <span class="token variable">$var2</span> <span class="token operator">*=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$var2</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>

  <span class="token comment">// division</span>
  <span class="token variable">$var2</span> <span class="token operator">/=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$var2</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),pn={class:"try"},ln={href:"https://repl.it/@eisenbm/PHP-Combined-Operators",target:"_blank",rel:"noopener noreferrer"},cn=n("h2",{id:"incrementing-decrementing-operators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#incrementing-decrementing-operators","aria-hidden":"true"},"#"),e(" Incrementing/Decrementing Operators")],-1),dn={href:"https://www.php.net/manual/en/language.operators.increment.php",target:"_blank",rel:"noopener noreferrer"},un=n("code",null,"1",-1),hn=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token variable">$var2</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

  <span class="token comment">// Increment</span>
  <span class="token variable">$var2</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$var2</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>

  <span class="token comment">// Decrement</span>
  <span class="token variable">$var2</span><span class="token operator">--</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$var2</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),mn={class:"try"},vn={href:"https://repl.it/@eisenbm/PHP-IncrementingDecrementing-Operators",target:"_blank",rel:"noopener noreferrer"};function kn(bn,gn){const s=r("ExternalLinkIcon");return p(),i("div",null,[c,n("div",d,[n("p",null,[n("a",u,[e('Watch "Numbers, part 1: Integers" on LinkedIn Learning'),a(s)])])]),n("p",null,[e("An "),n("a",h,[e("integer"),a(s)]),e(" is any whole number, either positive or negative. To set a variable to a number, provide the number literal with no quotes.")]),m,n("p",null,[e("PHP can handle basic mathematical calculation by using "),n("a",v,[e("arithmetic operators"),a(s)]),e(". The basic operators are as follows:")]),k,n("div",b,[n("p",null,[n("a",g,[e("Try it yourself on Repl.it"),a(s)])])]),_,n("p",null,[e("PHP has many predefined "),n("a",f,[e("Math Functions"),a(s)]),e(" which can be used to complete common calculations.")]),y,n("p",null,[e("The "),n("a",w,[x,a(s)]),e(" function will return the absolute value of the provided number.")]),P,n("div",T,[n("p",null,[n("a",$,[e("Try it yourself on Repl.it"),a(s)])])]),q,n("p",null,[e("The "),n("a",F,[H,a(s)]),e(" function will return the "),I,e(" number raised the power of the "),R,e(" number.")]),A,n("div",N,[n("p",null,[n("a",O,[e("Try it yourself on Repl.it"),a(s)])])]),E,n("p",null,[e("The "),n("a",D,[M,a(s)]),e(" function will return the square root of the provided number.")]),L,n("div",V,[n("p",null,[n("a",B,[e("Try it yourself on Repl.it"),a(s)])])]),S,n("p",null,[e("The "),n("a",C,[W,a(s)]),e(" function will returns the floating point remainder of diving the "),j,e(" (first argument) by the "),z,e(" (second argument).")]),G,n("div",J,[n("p",null,[n("a",K,[e("Try it yourself on Repl.it"),a(s)])])]),Q,n("p",null,[e("The "),n("a",U,[X,a(s)]),e(" function will return a random integer. A "),Y,e(" and "),Z,e(" parameters can be provided to give a range for the random integer. If no parameters are provided the random integer will be between 0 and the largest possible random number.")]),nn,n("div",en,[n("p",null,[n("a",sn,[e("Try it yourself on Repl.it"),a(s)])])]),an,n("p",null,[e("The basic "),n("a",tn,[e("assignment operator"),a(s)]),e(" is the equal sign ("),on,e('), but PHP has other assignment operators, sometimes called "combined operators". These "combined operators" can be used as a shorthand for mathematical expressions.')]),rn,n("div",pn,[n("p",null,[n("a",ln,[e("Try it yourself on Repl.it"),a(s)])])]),cn,n("p",null,[e("The "),n("a",dn,[e("incrementing/decrementing operators"),a(s)]),e(" are used to increase or decrease a variable by "),un,e(".")]),hn,n("div",mn,[n("p",null,[n("a",vn,[e("Try it yourself on Repl.it"),a(s)])])])])}const fn=o(l,[["render",kn],["__file","integers.html.vue"]]);export{fn as default};
