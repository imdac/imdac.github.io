import{_ as l,M as n,p as c,q as d,R as e,t,N as a,V as h,a3 as i}from"./framework-dd056dd6.js";const u={},p=e("h1",{id:"contact-book",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contact-book","aria-hidden":"true"},"#"),t(" Contact Book")],-1),b={class:"custom-container danger"},m=e("p",{class:"custom-container-title"},"For Server-Side Web Development Students Only",-1),f=i(`<h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>Use what you learned about the Vue, Vue Router, and Firebase to create a contact book web application, which allows a user to see and search through all contacts, add new contacts, and edit and delete existing contacts.</p><h2 id="project-setup" tabindex="-1"><a class="header-anchor" href="#project-setup" aria-hidden="true">#</a> Project Setup</h2><h3 id="_1-clone-the-repository" tabindex="-1"><a class="header-anchor" href="#_1-clone-the-repository" aria-hidden="true">#</a> 1. Clone the Repository</h3><p>Accept the GitHub Classroom assignment and clone the repository from GitHub.</p><h3 id="_2-install-dependencies" tabindex="-1"><a class="header-anchor" href="#_2-install-dependencies" aria-hidden="true">#</a> 2. Install Dependencies</h3><p>Install the project dependencies by running the following command from within the project directory:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>This will install the dependencies for the Vue, Vue Router, and Firestore.</p></div><h3 id="_3-start-development-server" tabindex="-1"><a class="header-anchor" href="#_3-start-development-server" aria-hidden="true">#</a> 3. Start Development Server</h3><p>Start the development server by running the following command from within the project directory:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-create-a-firestore-database" tabindex="-1"><a class="header-anchor" href="#_4-create-a-firestore-database" aria-hidden="true">#</a> 4. Create a Firestore Database</h3>`,13),_={href:"https://firebase.google.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://firebase.google.com/docs/firestore/quickstart",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"contacts",-1),v=e("strong",null,"required",-1),w=e("code",null,"firstName",-1),x=e("code",null,"lastName",-1),k=e("code",null,"email",-1),T={href:"https://youtu.be/UFLvSp4Mh9k?list=PL4cUxeGkcC9itfjle0ji1xOZ2cjRGY_WB&t=130",target:"_blank",rel:"noopener noreferrer"},j=i('<h3 id="_5-create-a-db-js-file" tabindex="-1"><a class="header-anchor" href="#_5-create-a-db-js-file" aria-hidden="true">#</a> 5. Create a db.js File</h3><p>After you have create your Firestore Database, create a <code>db.js</code> file to connect to your database. <strong>NOTE:</strong> The Firebase library was included with dependencies, so you do NOT need to install it.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ol><li>Create a contact book web application that uses the Vue framework and the Vue Router extension. The entire application should consist of a single HTML page. The Vue Router should be used to control the application&#39;s multiple views.</li><li>Create a Firestore database to be used for the contact book web application. All contact data should be stored and maintained through the Firestore database.</li><li>The database should be pre-populated with contacts. Each contact should include, but not limited to, a first name, a last name, and an email.</li><li>On the contact book&#39;s start view, contacts should be displayed alphabetically by the last name.</li><li>A search box should be available to filter contacts by their first and last name.</li><li>Clicking on a contact&#39;s name should display the contact&#39;s details view. The view should display all the information about the contact.</li><li>A new contact form should be available. Submitting the form should create a new contact in the web application and the Firestore database. When the operation is complete, the application should display the contact&#39;s details view.</li><li>An edit contact form should be available. Submitting the form should update a contact in the web application and the Firestore database. When the operation is complete, the application should display the contact&#39;s details view.</li><li>A delete contact button should be available. Clicking the button should remove the contact in the web application and the Firestore database. When the operation is complete, the application should display the contact book&#39;s start view.</li><li>The contact book application should be intuitive and easy to use, and visually applying. Students may use any open-source framework or library to assist in the UI of the application.</li></ol><h2 id="hints" tabindex="-1"><a class="header-anchor" href="#hints" aria-hidden="true">#</a> Hints</h2>',5),F={href:"https://firebase.google.com/docs/firestore/query-data/listen",target:"_blank",rel:"noopener noreferrer"},S={href:"https://firebase.google.com/docs/firestore/query-data/order-limit-data",target:"_blank",rel:"noopener noreferrer"},C=e("code",null,"orderBy()",-1),V=e("code",null,"orderBy()",-1),N={href:"https://firebase.google.com/docs/firestore/query-data/indexing#create_a_missing_index_through_an_error_message",target:"_blank",rel:"noopener noreferrer"},R=e("li",null,[t("To include Bootstrap into your project install it using NPM: "),e("code",null,"npm install bootstrap"),t(", then add the following line to "),e("code",null,"main.js"),t(": "),e("code",null,"import 'bootstrap/dist/css/bootstrap.min.css'")],-1),B=e("h2",{id:"example",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#"),t(" Example")],-1),q=i('<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The above video is meant only to demonstrate the required functionality of the assignment. Your final product may look different from what is shown.</p></div><h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><table><thead><tr><th>Criteria</th><th style="text-align:center;">Pts</th></tr></thead><tbody><tr><td>Successfully display contacts alphabetically by last name</td><td style="text-align:center;">5</td></tr><tr><td>Successfully implement search functionality</td><td style="text-align:center;">5</td></tr><tr><td>Successfully display a contact&#39;s details when contact&#39;s name is clicked</td><td style="text-align:center;">5</td></tr><tr><td>Successfully adds a new contact when the new contact form is submitted</td><td style="text-align:center;">5</td></tr><tr><td>Successfully updates a contact when the edit contact form is submitted</td><td style="text-align:center;">5</td></tr><tr><td>Successfully remove a contact when the delete button is clicked</td><td style="text-align:center;">5</td></tr><tr><td>Successfully implements Vue Router</td><td style="text-align:center;">5</td></tr><tr><td>Provides an appealing and intuitive user experience</td><td style="text-align:center;">15</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>50</strong></td></tr></tbody></table>',3);function E(A,O){const s=n("RouterLink"),o=n("ExternalLinkIcon"),r=n("Youtube");return c(),d("div",null,[p,e("div",b,[m,e("p",null,[t("If you are doing the combined version of the Contact Book assignment, please see "),a(s,{to:"/mtm6405/projects/contact-book-combined.html"},{default:h(()=>[t("Contact Book - Combined")]),_:1})])]),f,e("p",null,[t("Using a Google account, sign into "),e("a",_,[t("Firebase"),a(o)]),t(" and go to the console. "),e("a",g,[t("Create a new Firestore database"),a(o)]),t(" and populate the database with data. The database should contain a single collection, "),y,t(". Each contact will have its own document. The only "),v,t(" fields for a contact is "),w,t(", "),x,t(", and "),k,t(".")]),e("p",null,[t("You can also watch this "),e("a",T,[t("video tutorial"),a(o)]),t(" for more help on creating a Firestore database.")]),j,e("ol",null,[e("li",null,[t("The Firestore API allows for "),e("a",F,[t("realtime updates"),a(o)]),t(" of a Firestore's document or collection.")]),e("li",null,[t("The "),e("a",S,[C,a(o)]),t(" method can be used to sort the documents of a collection by a specific field.")]),e("li",null,[t("The "),V,t(" method can be changed to sort by more than one field, but an index may need to be created. Firestore generates "),e("a",N,[t("error messages that help you create additional indexes"),a(o)]),t(".")]),R]),B,a(r,{id:"oEMend8i7VM"}),q])}const L=l(u,[["render",E],["__file","contact-book.html.vue"]]);export{L as default};
