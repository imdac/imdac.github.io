import{_ as l,M as o,p,q as c,R as n,t as a,N as t,a3 as e}from"./framework-dd056dd6.js";const i={},u=n("h1",{id:"blade-layouts",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#blade-layouts","aria-hidden":"true"},"#"),a(" Blade Layouts")],-1),d={href:"https://laravel.com/docs/8.x/blade#building-layouts",target:"_blank",rel:"noopener noreferrer"},r=n("h2",{id:"components",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#components","aria-hidden":"true"},"#"),a(" Components")],-1),k={href:"https://laravel.com/docs/8.x/blade#components",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"layout",-1),m=n("code",null,"/resources/views/components/",-1),h=e(`<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The <code>layout</code> component must be stored in <code>/resources/views/components/</code>. Unfortunately, this directory does not exist in the default Laravel install and will need to be created manually.</p></div><p>The <code>layout</code> component will contain the general layout for the web application. In addition, a <code>slot</code> will be added where the custom content will be added to the layout.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- resources/views/components/layout.blade.php --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>{{ $title ?? &#39;Default Title&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/app.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        {{ $slot }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once the <code>layout</code> component has been defined, a Blade view can utilize the component.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- resources/views/greetings.blade.php --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x-layout</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x-slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      Greetings
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>x-slot</span><span class="token punctuation">&gt;</span></span>

  Hello, {{ $name }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>x-layout</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="template-inheritance" tabindex="-1"><a class="header-anchor" href="#template-inheritance" aria-hidden="true">#</a> Template Inheritance</h2>`,6),g={href:"https://laravel.com/docs/8.x/blade#layouts-using-template-inheritance",target:"_blank",rel:"noopener noreferrer"},b=e(`<p>Start by defining a new Blade view to service a template. While this file may be store anywhere in the <code>/resources/views</code> directory, it is a convention to store it in the <code>/resources/views/layouts</code> directory.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- resources/views/layouts/app.blade.php --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>@yield(&#39;title&#39;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/app.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        @yield(&#39;content&#39;)
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once the layout view has been defined, the child view will use the <code>@extends</code> Blade directive to specify which layout the child view should &quot;inherit.&quot; Views that extend a Blade layout may inject content into the layout&#39;s sections using <code>@section</code> directives.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- resources/views/greetings.blade.php --&gt;</span>

@extends(&#39;layouts.app&#39;)

@section(&#39;title&#39;, &#39;Greetings&#39;)

@section(&#39;content&#39;)
  Hello, {{ $name }}
@endsection
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function y(f,w){const s=o("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[a("Most web applications maintain the same general layout across various pages. However, web applications would be cumbersome and hard to maintain if the entire layout is repeated for every view. Fortunate, Blade supports two convenient ways of "),n("a",d,[a("building layouts"),t(s)]),a(".")]),r,n("p",null,[n("a",k,[a("Blade Components"),t(s)]),a(" can be used to create a layout for a web application. Start by defining the "),v,a(" component and storing it inside the "),m,a(" directory.")]),h,n("p",null,[n("a",g,[a("Template Inheritence"),t(s)]),a(" can be used to create Blade layouts and was the primary way of creating layouts before the introduction of components.")]),b])}const x=l(i,[["render",y],["__file","layouts.html.vue"]]);export{x as default};
