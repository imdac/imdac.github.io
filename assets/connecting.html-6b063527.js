import{_ as n,p as s,q as a,a3 as e}from"./framework-dd056dd6.js";const t={},p=e(`<h1 id="connecting-with-pdo" tabindex="-1"><a class="header-anchor" href="#connecting-with-pdo" aria-hidden="true">#</a> Connecting with PDO</h1><p>After creating a DSN, we are ready to connect to the database. This is done by creating a instance of the PDO Class. Three values are passed to the PDO Class, the DSN, the username and the password for access to the database.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token variable">$dsn</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;mysql:host=localhost;dbname=movies&#39;</span><span class="token punctuation">;</span>
  <span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It always a good idea to add a <code>try / catch</code> block around the PDO connection to catch any potential errors that occur and help prevent any security issues.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token variable">$dsn</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;mysql:host=localhost;dbname=movies&#39;</span><span class="token punctuation">;</span>
    <span class="token variable">$db</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;Error!: &quot;</span> <span class="token operator">.</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally, because the database connection will likely be required on multiple documents, it always best to store the connection to its own document that can be then included where needed.</p>`,6),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","connecting.html.vue"]]);export{d as default};
