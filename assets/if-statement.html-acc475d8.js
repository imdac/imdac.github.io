import{_ as t,M as p,p as o,q as l,R as n,t as s,N as e,a3 as i}from"./framework-dd056dd6.js";const c={},r=n("h1",{id:"php-if-statement",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#php-if-statement","aria-hidden":"true"},"#"),s(" PHP if Statement")],-1),u={class:"watch"},d={href:"https://www.linkedin.com/learning/php-essential-training-2/if-statements",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"if",-1),m={href:"https://www.php.net/manual/en/control-structures.if.php",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"if",-1),b=n("code",null,"TRUE",-1),h=i(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
  <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

  <span class="token comment">// check if a is larger than b</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">&gt;</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;a is larger than b&quot;</span><span class="token punctuation">;</span> <span class="token comment">// this will execute</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// check if a is smaller than b</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">&lt;</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;a is smaller than b&quot;</span><span class="token punctuation">;</span> <span class="token comment">// this will not execute</span>
  <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>if</code> statement is extremely useful to determine when and what to show the user.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// only welcome new users</span>
  <span class="token variable">$new_user</span> <span class="token operator">=</span> <span class="token constant boolean">TRUE</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$new_user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token delimiter important">?&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Welcome!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>We are glad you decided to join us.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token punctuation">}</span> <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or prevent potential errors from occurring.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>Variables defined inside of an <code>if</code> statement will only exist if the condition is <code>TRUE</code>.</p></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token comment">// don&#39;t divide by zero</span>
  <span class="token variable">$numerator</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
  <span class="token variable">$denominator</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

  <span class="token comment">// predefining the $results variable</span>
  <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$denominator</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$numerator</span> <span class="token operator">/</span> <span class="token variable">$denominator</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Results: <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$result</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">;</span> 
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function g(f,_){const a=p("ExternalLinkIcon");return o(),l("div",null,[r,n("div",u,[n("p",null,[n("a",d,[s('Watch "if statements" on LinkedIn Learning'),e(a)])])]),n("p",null,[s("The most common and most used conditional statement is the "),k,s(" statement. The "),n("a",m,[v,e(a)]),s(" statement determines whether or not to execute a block of code, by evaluating an expression. If the expression evaluates to "),b,s(" the block of code will execute, otherwise, it will not.")]),h])}const x=t(c,[["render",g],["__file","if-statement.html.vue"]]);export{x as default};
