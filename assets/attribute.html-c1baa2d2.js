import{_ as t,M as a,p as i,q as o,R as e,t as n,N as l,a3 as c}from"./framework-dd056dd6.js";const r={},u=e("h1",{id:"attribute-selectors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#attribute-selectors","aria-hidden":"true"},"#"),n(" Attribute Selectors")],-1),p={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors",target:"_blank",rel:"noopener noreferrer"},d=e("code",null,"[]",-1),m=c(`<p>The most basic attribute selector merely searches for the presence of the attribute on an element. Any matching element with attribute, even if the attribute has non or false value, will be selected.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* any &lt;img&gt; tag with aria-label attribute */</span>
<span class="token selector">img[aria-label]</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It is possible to select only those elements with specific value of attribute. This is accomplished by proceeding the attribute name with an equal sign and desired value. The value must also be in quotes. Only elements whose attribute value matches exactly to the desired value will be selected.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* &lt;a&gt; with href value of &quot;https://algonquincollege.com&quot; */</span>
<span class="token selector">a[href=&quot;https://algonquincollege.com&quot;]</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finding an element by its attribute value can be limiting, it is more practical to see if the value <em>begins</em>, <em>ends</em>, or <em>contains</em> the desired value. All three of those can be accomplished using the following syntax.</p><p><code>^=</code> for <em>begins</em> with</p><p><code>*=</code> for <em>contains</em></p><p><code>$=</code> for <em>ends</em> with</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* &lt;a&gt; with href that begins with &quot;http&quot; */</span>
<span class="token selector">a[href^=&quot;http&quot;]</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* &lt;a&gt; with href that contains &quot;abc.com&quot; */</span>
<span class="token selector">a[href*=&quot;abc.com&quot;]</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* &lt;a&gt; with href that ends with &quot;.pdf&quot; */</span>
<span class="token selector">a[href$=&quot;.pdf&quot;]</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function b(v,h){const s=a("ExternalLinkIcon");return i(),o("div",null,[u,e("p",null,[e("a",p,[n("Attribute selectors"),l(s)]),n(" selects an element based on the presence or value of an attribute. Attribute selectors are particularly useful when working with links or form inputs. Any attribute can be used with this selector, but all of them are surrounded by a set of square brackets "),d,n(".")]),m])}const g=t(r,[["render",b],["__file","attribute.html.vue"]]);export{g as default};
