import{_ as a,M as s,p as i,q as o,R as e,t,N as r,a3 as l}from"./framework-dd056dd6.js";const c="/images/vue-cli-gui-1.png",p="/images/vue-cli-gui-2.png",u="/images/vue-cli-gui-3.png",h="/images/vue-cli-gui-4.png",g="/images/vue-cli-gui-5.png",d="/images/vue-cli-gui-6.png",m="/images/vue-cli-gui-7.png",w="/images/vue-cli-gui-8.png",v="/images/vue-cli-gui-9.png",b="/images/vue-cli-gui-10.png",I="/images/vue-cli-gui-11.png",f="/images/vue-cli-gui-12.png",j="/images/vue-cli-gui-13.png",C={},k=e("h1",{id:"vue-cli-installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue-cli-installation","aria-hidden":"true"},"#"),t(" Vue CLI Installation")],-1),_={class:"watch"},V={href:"https://www.linkedin.com/learning/vue-js-essential-training-2/installing-projects-using-the-vue-cli",target:"_blank",rel:"noopener noreferrer"},L=l(`<p>The following instruction will walk how to install Vue CLI, launch Vue CLI UI and create a project with custom dependencies.</p><h2 id="installing-vue-cli" tabindex="-1"><a class="header-anchor" href="#installing-vue-cli" aria-hidden="true">#</a> Installing Vue CLI</h2><p>To install Vue CLI, enter the following command into the terminal window:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Once the installation is complete, you can check the installation with the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="launching-vue-cli-gui" tabindex="-1"><a class="header-anchor" href="#launching-vue-cli-gui" aria-hidden="true">#</a> Launching Vue CLI GUI</h2><p>The Vue CLI GUI is a Graphical User Interface (GUI) for creating and managing Vue CLI projects and runs completely in the browser. To launch the Vue CLI GUI enter the following command into the terminal window:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue ui
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The terminal window that launches Vue CLI GUI must remain open while in use.</p></div><p>Once the Vue CLI GUI, your browser should automatically open to page like this:</p><p><img src="`+c+'" alt="Vue CLI GUI - Vue Project Manager"></p><h2 id="creating-a-project" tabindex="-1"><a class="header-anchor" href="#creating-a-project" aria-hidden="true">#</a> Creating a Project</h2><p>From the Vue Project Manager of Vue CLI GUI, click on the <strong>Create</strong> in the navbar.</p><p><img src="'+p+'" alt="Vue CLI GUI - Vue Project Manager"></p><p>From here you see the current file directory of your computer, navigation to the directory you wish to create a new project and then click on the <strong>Create a new project here</strong> button. You should be now see the <strong>Create a new project</strong> page.</p><p><img src="'+u+'" alt="Vue CLI GUI - Create a new project"></p><p>Give a name for your project folder. The name should be all lowercase and contain no spaces (e.g. contact-book). All other options can stay at their default setting. Then click <strong>Next</strong>.</p><p><img src="'+h+'" alt="Vue CLI GUI - Create a new project - Details"></p><p>The next step will be selecting a preset that set which plugins and configuration will be needed for the project. For this course, we are going to select <strong>Manual</strong>, which will allow us to select our own plugins and configuration. Then click <strong>Next</strong>.</p><p><img src="'+g+'" alt="Vue CLI GUI - Create a new project - Presets"></p><p>The features page lets use select which plugins and dependencies we want for our project. The following features should be enabled:</p><ul><li>Babel</li><li>Router</li><li>Vuex</li><li>CSS Pre-processors</li><li>Linter / Formatter</li></ul><p>All other features should remain disabled. Once the features above have been enabled, click <strong>Next</strong>.</p><p><img src="'+d+'" alt="Vue CLI GUI - Create a new project - Features"></p><p>On the final page, we will set our project configuration. For <strong>Pick a CSS Pre-processor</strong>, select <strong>Sass/SCSS (with dart-sass)</strong> and Pick a linter / formatter config, select <strong>ESLint with error prevention only</strong>. Leave all other options with their default setting. Then click <strong>Create Project</strong>.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>You will be ask if you want to save these settings as a new preset to be used in the future. This is an optional step and will not affect the project being created.</p></div><p><img src="'+m+'" alt="Vue CLI GUI - Create a new project - Configuration"></p><p>Once the project is finished being created, you will be brought to the <strong>Project Dashboard</strong> page.</p><p><img src="'+w+'" alt="Vue CLI GUI - Project Dashboard"></p><h2 id="serving-the-project" tabindex="-1"><a class="header-anchor" href="#serving-the-project" aria-hidden="true">#</a> Serving the Project</h2><p>Now that we have the project create, we can now <em>serve</em> the project to the browser. This can be done using the Vue CLI GUI. From the Project Dashboard, click on the <strong>Tasks</strong> icon in left navbar.</p><p><img src="'+v+'" alt="Vue CLI GUI - Project Dashboard - Tasks"></p><p>From the <strong>Project Tasks</strong> page we can see all that actions we can take with our project. The one we are interested in right now is the <strong>Serve</strong> task. With the <strong>Serve</strong> tab selected, click the <strong>Run Task</strong> button.</p><p><img src="'+b+'" alt="Vue CLI GUI - Project Tasks"></p><p>Once the project is running, an <strong>Open App</strong> button will appear. Clicking on the button will open the project in the browser.</p><p><img src="'+I+'" alt="Vue CLI GUI - Project Tasks"></p><p>With the project being serve to browser by Vue CLI, we will give instant feedback when changes made to project.</p><h2 id="opening-the-project" tabindex="-1"><a class="header-anchor" href="#opening-the-project" aria-hidden="true">#</a> Opening the Project</h2><p>Now, that we have the project created and being served to the browser, it is time to open it into VS Code. The simplest way to this is to go back to Vue CLI GUI and click on the little home at the bottom left corner of the page. This will take us back to <strong>Vue Project Manager</strong>.</p><p><img src="'+f+'" alt="Vue CLI GUI - Project Tasks - Home"></p><p>From the <strong>Vue Project Manager</strong>, we should see the project we just created. Inside our project, there will be an <strong>Open in editor</strong> button. Clicking on the button will open the project in your default text editor.</p><p><img src="'+j+`" alt="Vue CLI GUI - Vue Project Manager - Open in editor"></p><h2 id="installing-custom-modules" tabindex="-1"><a class="header-anchor" href="#installing-custom-modules" aria-hidden="true">#</a> Installing Custom Modules</h2><p>There are a few more custom modules that we will want to install in our project. While it *<strong>SHOULD</strong> be possible to install these modules using Vue CLI GUI, we will use the terminal to install them instead.</p><p>With the project opened in the VS Code, open a <strong>New Terminal</strong> by going to <code>Terminal &gt; New Terminal</code>. Inside the terminal, type the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> axios firebase vuefire
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This command will install several packages that will be useful when created our project including Axios, the Firebase SDK, and Font Awesome. Once the installation is complete, we are going to add the Bootstrap-vue plugin. Inside the terminal, type the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue <span class="token function">add</span> bootstrap-vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>You may be asked some questions during the installation process. Say <strong>yes</strong> to all questions.</p></div><p>Now that our project is all set up, we will take a deeper look at the project Vue CLI generated for use.</p>`,51);function T(x,U){const n=s("ExternalLinkIcon");return i(),o("div",null,[k,e("div",_,[e("p",null,[e("a",V,[t('Watch "Installing projects using Vue CLI" on LinkedIn Learning'),r(n)])])]),L])}const y=a(C,[["render",T],["__file","installation.html.vue"]]);export{y as default};
