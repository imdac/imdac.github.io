import{_ as e,M as t,p as o,q as p,R as s,t as n,N as i,a3 as c}from"./framework-dd056dd6.js";const l={},r=s("h1",{id:"restful-routing",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#restful-routing","aria-hidden":"true"},"#"),n(" Restful Routing")],-1),u={class:"watch"},d={href:"https://laracasts.com/series/laravel-6-from-scratch/episodes/22",target:"_blank",rel:"noopener noreferrer"},g=c(`<p>Most Laravel projects have a certain convention for routes that adhere to a RESTful approach. This approach starts with getting data.</p><h2 id="getting-data" tabindex="-1"><a class="header-anchor" href="#getting-data" aria-hidden="true">#</a> Getting Data</h2><p>If we wanted to get and display all movies, we might use a route like this.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// GET all movies</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>However, if we are only interested in a specific, we could append the movie&#39;s id to the end of our previous example, like this.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// GET a specific movie </span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@show&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>This same pattern can be used for nearly all of the necessary routes we would need for a RESTful application. The only difference is the HTTP verb that is used.</p><h2 id="adding-data" tabindex="-1"><a class="header-anchor" href="#adding-data" aria-hidden="true">#</a> Adding Data</h2><p>To add a new movie, we would use the <code>post</code> method on the <code>&#39;/movies&#39;</code> URI.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// ADD a Movie</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@store&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Of course, we would need access to the form that will be used to add a new movie, which would be accessed using this route.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Add a Movie Form</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/create&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@create&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="updating-data" tabindex="-1"><a class="header-anchor" href="#updating-data" aria-hidden="true">#</a> Updating Data</h2><p>To update an existing movie, we would use the <code>put</code> method and the URI for a single movie, like so.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// UPDATE a Movie</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@update&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>To access the update form, we would start with the URI for a single movie and append <code>/edit</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Update a Movie Form</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}/edit&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="deleting-data" tabindex="-1"><a class="header-anchor" href="#deleting-data" aria-hidden="true">#</a> Deleting Data</h2><p>To delete a movie, the <code>delete</code> method would be paired with the URI for a single movie.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// DELETE a Movie</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@destroy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="order-matters" tabindex="-1"><a class="header-anchor" href="#order-matters" aria-hidden="true">#</a> Order Matters</h2><p>The final note to create RESTful routes is that order matters. Laravel goes through the list of routes top to bottom and will take the first route that matches. This means any static URI should come before those containing wild cards.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// RESTful Routes</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@store&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/create&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@create&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}/edit&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@show&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@update&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/movies/{movie}&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;MoviesController@destroy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function k(v,m){const a=t("ExternalLinkIcon");return o(),p("div",null,[r,s("div",u,[s("p",null,[s("a",d,[n('Watch "Restful Routing" on Laracasts'),i(a)])])]),g])}const f=e(l,[["render",k],["__file","restful-routing.html.vue"]]);export{f as default};
