import{_ as r,a as i}from"./laragon-url-fix-2-af7990a7.js";import{_ as o,M as l,p as d,q as c,R as e,t,N as s,a3 as a}from"./framework-dd056dd6.js";const h={},p=a('<h1 id="task-manager" tabindex="-1"><a class="header-anchor" href="#task-manager" aria-hidden="true">#</a> Task Manager</h1><h2 id="objective" tabindex="-1"><a class="header-anchor" href="#objective" aria-hidden="true">#</a> Objective</h2><p>For this assignment, you will be demonstrating your understanding of Laravel to create a Task Manager app.</p><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><p>The Task Manager must have the following features:</p><ul><li>Registration form new users</li><li>Login form for existing users</li><li>Logged in user should be able to create new groups</li><li>Logged in user should be able to view all groups that belong to them</li><li>Logged in user should be able to view all tasks of a group that belongs to the selected group</li><li>Logged in user should be able to add new tasks to a group that belongs to them</li><li>Logged in user should be able to mark tasks as completed from a group that belongs to them</li><li>Logged in user should be able to delete task form a group that belongs to them</li></ul><h2 id="project-setup" tabindex="-1"><a class="header-anchor" href="#project-setup" aria-hidden="true">#</a> Project Setup</h2><h3 id="_1-clone-the-repository" tabindex="-1"><a class="header-anchor" href="#_1-clone-the-repository" aria-hidden="true">#</a> 1. Clone the Repository</h3><p>Clone this repository from GitHub and use the provided file to complete the assignment.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If you are using Laragon, save your repository in the <code>{laragon}/www</code> directory.</p></div><h3 id="_2-create-a-database" tabindex="-1"><a class="header-anchor" href="#_2-create-a-database" aria-hidden="true">#</a> 2. Create a Database</h3><p>To create a database using phpMyAdmin, complete the following instructions.</p>',12),u={href:"http://phpmyadmin.test",target:"_blank",rel:"noopener noreferrer"},g=a("<li>Log in to phpMyAdmin using the root username and password</li><li>Click <strong>Databases</strong> tab</li><li>In the <strong>Create database</strong> from, enter <code>task_manager</code> for the database name.</li><li>Click the <strong>Create</strong> button</li>",4),m=a(`<h3 id="_3-install-laravel-dependencies" tabindex="-1"><a class="header-anchor" href="#_3-install-laravel-dependencies" aria-hidden="true">#</a> 3. Install Laravel Dependencies</h3><p>Install Laravel dependencies using composer</p><p>Using the terminal, navigate to the cloned repository directory and enter the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-create-environment-file" tabindex="-1"><a class="header-anchor" href="#_4-create-environment-file" aria-hidden="true">#</a> 4. Create Environment File</h3><p>In the project, find the <code>.env.example</code> file. Rename the file to be <code>.env</code>. Update the <code>.env</code> file to point to the <code>task_manager</code> database.</p><p>Save the file.</p><h3 id="_5-generate-key" tabindex="-1"><a class="header-anchor" href="#_5-generate-key" aria-hidden="true">#</a> 5. Generate Key</h3><p>Using the terminal, enter the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan key:generate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-test-the-site" tabindex="-1"><a class="header-anchor" href="#_6-test-the-site" aria-hidden="true">#</a> 6. Test the site</h3><p>In the browser, go to: http://task-manager-<em>username</em>.test</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If you are using Laragon, you will need to click the <strong>reload</strong> button in the Laragon window. This should automatically create a friendly URL for your Laravel project.</p></div><div class="custom-container danger"><p class="custom-container-title">NOTE</p><p>If you are using Laragon and your friendly URL is not working, the following solution may work for you.</p><p>In the Laragon window, go to Menu &gt; Apache &gt; sites-enabled &gt; <em>your current laravel site</em></p><p><img src="`+r+'" alt="Laragon window - Apache Enabled Sites"></p><p>This will open a file in Notes++. From there, you will need to changes two lines, the <code>DocumentRoot</code> (line 2) and the <code>&lt;Directory&gt;</code> (line 5). In both lines, update the URL to include <code>/public/</code> at the end.</p><p><img src="'+i+`" alt="Notes++ - Site Config"></p></div><h3 id="_7-add-ui-package" tabindex="-1"><a class="header-anchor" href="#_7-add-ui-package" aria-hidden="true">#</a> 7. Add UI Package</h3><p>Laravel has a UI package that will add a scaffold to your project.</p><p>To add the UI package, run the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require laravel/ui <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_8-add-authentication" tabindex="-1"><a class="header-anchor" href="#_8-add-authentication" aria-hidden="true">#</a> 8. Add Authentication</h3><p>Authentication is required for this project. To add authentication, run the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan ui bootstrap <span class="token parameter variable">--auth</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>When completed, you will also need to run the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_9-run-the-migration-files" tabindex="-1"><a class="header-anchor" href="#_9-run-the-migration-files" aria-hidden="true">#</a> 9. Run the Migration Files</h3><p>Use the provide migration files to create the database tables for the project.</p><p>In the terminal, enter the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The <code>groups</code> table will hold each list created by a user. A user can have many groups, but a group can have only one user.</p></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The <code>tasks</code> table will hold each task created by a user for a specific list. A group can have many tasks, but a task can belong to only one group.</p></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The name <code>groups</code> was used instead of <code>lists</code> to avoid conflict with <code>list</code> being a reserved word in PHP.</p></div><h3 id="_10-create-models-and-controllers" tabindex="-1"><a class="header-anchor" href="#_10-create-models-and-controllers" aria-hidden="true">#</a> 10. Create Models and Controllers</h3><p>Models and Controllers will need to be created for the two new tables added in the previous step.</p><p>To create Models and Controllers, run the following commands:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan make:model Group <span class="token parameter variable">-c</span>
php artisan make:model Task <span class="token parameter variable">-c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><h3 id="authentication" tabindex="-1"><a class="header-anchor" href="#authentication" aria-hidden="true">#</a> Authentication</h3><p>For this web application, Laravel authentication should be enabled and utilized.</p><p>The web application should do the following:</p><ul><li>Require users to log in before using the application</li><li>Allow new users to register an account</li><li>Restrict users from content seeing content they do not own</li></ul><h3 id="groups-page" tabindex="-1"><a class="header-anchor" href="#groups-page" aria-hidden="true">#</a> Groups Page</h3><p>The Groups page, which will serve as the home page for the site, will display all the groups created by the current user.</p><p>The Groups page should display the following:</p><ul><li>The current user&#39;s name</li><li>The number of groups for the current user</li><li>All groups for the current user, which will link to the respective Group page (see below)</li><li>A form for creating new groups</li></ul><p>Each group should have</p><ul><li>The ability to change the color and title of the Group</li><li>A delete button to delete the Group</li></ul><h3 id="group-page" tabindex="-1"><a class="header-anchor" href="#group-page" aria-hidden="true">#</a> Group Page</h3><p>The Group page will display all of the tasks for the current group.</p><p>The Group page should display the following:</p><ul><li>The name of the Group</li><li>The number of <strong>uncompleted</strong> tasks</li><li>All tasks for the current group, displaying the <strong>uncompleted</strong> tasks first.</li><li>A form for creating new tasks</li></ul><p>Each task should have:</p><ul><li>A complete button will toggle the completed state of the task</li><li>A delete button will delete a task</li></ul><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>A completed version of the assignment can be found at the following:</p>`,53),b={href:"http://tasks.eisenbraun.ca/",target:"_blank",rel:"noopener noreferrer"},f=a('<p>You may create an account or use the Guest account:</p><ul><li>email: <em>guest@example.com</em></li><li>password: <em>password</em></li></ul><h2 id="rubric" tabindex="-1"><a class="header-anchor" href="#rubric" aria-hidden="true">#</a> Rubric</h2><table><thead><tr><th>Criteria</th><th style="text-align:center;">Pts</th></tr></thead><tbody><tr><td>Successfully implements authentication</td><td style="text-align:center;">5</td></tr><tr><td>Successfully display the user&#39;s groups</td><td style="text-align:center;">5</td></tr><tr><td>Successfully adds new group when the new group form is submitted</td><td style="text-align:center;">5</td></tr><tr><td>Successfully implements group editing</td><td style="text-align:center;">5</td></tr><tr><td>Successfully implements group deleting</td><td style="text-align:center;">5</td></tr><tr><td>Successfully display all tasks of a group</td><td style="text-align:center;">5</td></tr><tr><td>Successfully add a new task when the new task form is submitted</td><td style="text-align:center;">5</td></tr><tr><td>Successfully implements task editing</td><td style="text-align:center;">5</td></tr><tr><td>Successfully implements task deleting</td><td style="text-align:center;">5</td></tr><tr><td>Provides an appealing and intuitive user experience</td><td style="text-align:center;">5</td></tr><tr><td><strong>Total</strong></td><td style="text-align:center;"><strong>50</strong></td></tr></tbody></table>',4);function v(w,y){const n=l("ExternalLinkIcon");return d(),c("div",null,[p,e("ol",null,[e("li",null,[t("Open phpMyAdmin at "),e("a",u,[t("http://phpmyadmin.test"),s(n)])]),g]),m,e("p",null,[e("a",b,[t("http://tasks.eisenbraun.ca/"),s(n)])]),f])}const x=o(h,[["render",v],["__file","task-manager.html.vue"]]);export{x as default};
