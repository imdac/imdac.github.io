import{_ as c,M as t,p as i,q as l,N as s,R as n,t as a,a3 as o}from"./framework-dd056dd6.js";const d={},u=n("h1",{id:"spread-syntax",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spread-syntax","aria-hidden":"true"},"#"),a(" Spread Syntax")],-1),k={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"spread operator",-1),v=n("h2",{id:"arrays",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#arrays","aria-hidden":"true"},"#"),a(" Arrays")],-1),m={class:"watch"},b={href:"https://www.linkedin.com/learning/learning-ecmascript-6/spread-operators",target:"_blank",rel:"noopener noreferrer"},_=o(`<p>The spread syntax is a shortcut to write out or spread all the elements of an array. This can be useful for combining arrays.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> primary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> secondary <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;purple&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">]</span>


console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>primary<span class="token punctuation">,</span> <span class="token operator">...</span>secondary<span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token comment">// [&#39;red&#39;, &#39;blue&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;green&#39;, &#39;orange&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The spread syntax can be an effective way to create a copy of an array.</p></div>`,3),g={class:"challenge"},f={href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/es6/use-the-spread-operator-to-evaluate-arrays-in-place",target:"_blank",rel:"noopener noreferrer"},y=o(`<h2 id="objects" tabindex="-1"><a class="header-anchor" href="#objects" aria-hidden="true">#</a> Objects</h2><p>Just like an array, the spread syntax can be used to unpack object properties.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Smith&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> contact <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>person
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>contact<span class="token punctuation">.</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,4);function x(w,S){const p=t("Scrimba"),e=t("ExternalLinkIcon"),r=t("Youtube");return i(),l("div",null,[u,s(p,{id:"/p/p4Mrt9/cKLJeHy",citation:"israel"}),n("p",null,[a("The "),n("a",k,[a("spread syntax"),s(e)]),a(", also referred to as the "),h,a(", is one of the more confusing and yet incredibly useful features recently introduced to JavaScript. The spread syntax can be used with arrays, objects, and functions.")]),v,n("div",m,[n("p",null,[n("a",b,[a('Watch "Spread operators" on LinkedIn Learning'),s(e)])])]),_,n("div",g,[n("p",null,[n("a",f,[a("Take the Spread Operator challenge on freeCodeCamp"),s(e)])])]),y,s(r,{id:"QtGbcvZ6774",citation:"griffith"})])}const N=c(d,[["render",x],["__file","index.html.vue"]]);export{N as default};
