import{_ as p,M as s,p as i,q as c,N as a,R as n,t as e,a3 as l}from"./framework-dd056dd6.js";const r={},u=n("h1",{id:"subqueries",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#subqueries","aria-hidden":"true"},"#"),e(" Subqueries")],-1),d=l('<p>A subquery is a <code>SELECT</code> statement within another statement. In most cases, subqueries can be used in place of a join, and have the advantage of being able to query the same table twice, which is not possible with a join.</p><div class="custom-container warning"><p class="custom-container-title">Note</p><p>Subqueries are often easier to read over joins, but joins get better performance.</p></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Getting all movies from a list of years</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span>\n<span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>movies<span class="token punctuation">`</span></span>\n<span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>year<span class="token punctuation">`</span></span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">1986</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">1999</span><span class="token punctuation">,</span> <span class="token number">2009</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Subqueries can be used to get data from another table.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># Getting all movies that have the &quot;Fantasy&quot; genre</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span>\n<span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>movies<span class="token punctuation">`</span></span>\n<span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>genre_id<span class="token punctuation">`</span></span> <span class="token operator">IN</span> \n  <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">`</span>genre_id<span class="token punctuation">`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>genres<span class="token punctuation">`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>genre_title<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token string">&#39;Fantasy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5),k={class:"try"},m={href:"https://www.db-fiddle.com/f/9h7hnVGk5weS4muK9KY1pe/0",target:"_blank",rel:"noopener noreferrer"};function b(v,h){const t=s("Youtube"),o=s("ExternalLinkIcon");return i(),c("div",null,[u,a(t,{id:"hBF5PO1fD0Q",citation:"griffith"}),d,n("div",k,[n("p",null,[n("a",m,[e("Try it yourself on DB Fiddle"),a(o)])])])])}const _=p(r,[["render",b],["__file","subqueries.html.vue"]]);export{_ as default};
